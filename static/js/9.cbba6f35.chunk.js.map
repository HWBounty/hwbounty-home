{"version":3,"sources":["util/notifications.js","../node_modules/@material-ui/core/esm/CircularProgress/CircularProgress.js","components/Calendar/Schedule.js","pages/ScheduleInfo.js"],"names":["Notifications","Notification","permission","requestPermission","icon","img","title","text","body","image","error","SIZE","CircularProgress","React","props","ref","classes","className","_props$color","color","_props$disableShrink","disableShrink","_props$size","size","style","_props$thickness","thickness","_props$value","value","_props$variant","variant","other","_objectWithoutProperties","circleStyle","rootStyle","rootProps","circumference","Math","PI","strokeDasharray","toFixed","round","strokeDashoffset","concat","transform","_extends","clsx","root","capitalize","determinate","indeterminate","static","width","height","role","svg","viewBox","circle","circleDisableShrink","circleDeterminate","circleIndeterminate","circleStatic","cx","cy","r","fill","strokeWidth","withStyles","theme","display","transition","transitions","create","animation","colorPrimary","palette","primary","main","colorSecondary","secondary","stroke","transformOrigin","name","flip","decodeHTML","string","map","gt","replace","$0","$1","String","fromCharCode","toLowerCase","parseInt","substr","hasOwnProperty","useButtonStyles","makeStyles","border","borderRadius","marginTop","paddingBottom","cursor","position","boxShadow","PeriodButton","period","zoom","timeStart","timeEnd","tSS","tES","duration","enqueueSnackbar","useSnackbar","timePassed","Date","now","useState","expanded","setExpanded","notDoneCol","filter","x","marginBottom","Card","onClick","length","background","padding","Typography","align","marginLeft","fontSize","window","innerWidth","margin","bottom","left","Collapse","in","Children","toArray","z","Button","e","event","link","stopPropagation","newWindow","open","opener","handleZoomLinkClicked","fetchAndSet","setCourseInfo","setScheduleData","setCannotFetch","a","localStorage","getItem","Error","JSON","parse","Promise","all","axios","get","catch","console","trace","schedule","courses","data","status","setItem","stringify","connect","state","UI","forceUpdate","set","s","useForceUpdate","useEffect","id","setTimeout","setInterval","clearTimeout","courseInfo","scheduleData","fetching","setFetching","cannotFetch","linkUserSchoology","periods","zoomLinkInfo","dotw","moment","isoWeekday","allClasses","Map","nameOverrides","convertedMoment","tz","timePeriod","utcOffset","currentMoment","forEach","course","today","colors","stops","retarr","index","push","generatePeriodColors","i","has","course_title","links","linkGroup","flat","add","unix","parsePeriods","Container","p","CTime","verticalAlign","minWidth","textAlign","format","CTimeSmall","lastTimeBasedNotif","ScheduleInfo","scheduleOBJ","user","getPeriodName","periodID","formattedClasses","clas","currentClass","endingInString","asHours","asMinutes","asSeconds","pushNotification","undefined","firstName","nextClass","startingInString","lastClass","pop","lastEnded","this","getTimePhrase","overflowY","borderWidth","maxWidth","right","top","Component","withSnackbar"],"mappings":"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","file":"static/js/9.cbba6f35.chunk.js","sourcesContent":["class Notifications {\r\n\tconstructor() {\r\n\t\tif (Notification.permission !== \"granted\") {\r\n\t\t\tNotification.requestPermission();\r\n\t\t}\r\n\t}\r\n\tstatic pushNotification(icon, img, title, text) {\r\n\t\ttry {\r\n\t\t\tif (Notification.permission !== \"granted\") {\r\n\t\t\t\tNotification.requestPermission();\r\n\t\t\t}\r\n\t\t\treturn new Notification(title || \"HWBounty Notification\", {body: text || \"\", icon: icon, image: img});\r\n\t\t} catch (error) {\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n}\r\nexport default Notifications;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nvar SIZE = 44;\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-block'\n    },\n\n    /* Styles applied to the root element if `variant=\"static\"`. */\n    static: {\n      transition: theme.transitions.create('transform')\n    },\n\n    /* Styles applied to the root element if `variant=\"indeterminate\"`. */\n    indeterminate: {\n      animation: '$circular-rotate 1.4s linear infinite'\n    },\n\n    /* Styles applied to the root element if `variant=\"determinate\"`. */\n    determinate: {\n      transition: theme.transitions.create('transform')\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the `svg` element. */\n    svg: {\n      display: 'block' // Keeps the progress centered\n\n    },\n\n    /* Styles applied to the `circle` svg path. */\n    circle: {\n      stroke: 'currentColor' // Use butt to follow the specification, by chance, it's already the default CSS value.\n      // strokeLinecap: 'butt',\n\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"static\"`. */\n    circleStatic: {\n      transition: theme.transitions.create('stroke-dashoffset')\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"indeterminate\"`. */\n    circleIndeterminate: {\n      animation: '$circular-dash 1.4s ease-in-out infinite',\n      // Some default value that looks fine waiting for the animation to kicks in.\n      strokeDasharray: '80px, 200px',\n      strokeDashoffset: '0px' // Add the unit to fix a Edge 16 and below bug.\n\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"determinate\"`. */\n    circleDeterminate: {\n      transition: theme.transitions.create('stroke-dashoffset')\n    },\n    '@keyframes circular-rotate': {\n      '0%': {\n        // Fix IE 11 wobbly\n        transformOrigin: '50% 50%'\n      },\n      '100%': {\n        transform: 'rotate(360deg)'\n      }\n    },\n    '@keyframes circular-dash': {\n      '0%': {\n        strokeDasharray: '1px, 200px',\n        strokeDashoffset: '0px'\n      },\n      '50%': {\n        strokeDasharray: '100px, 200px',\n        strokeDashoffset: '-15px'\n      },\n      '100%': {\n        strokeDasharray: '100px, 200px',\n        strokeDashoffset: '-125px'\n      }\n    },\n\n    /* Styles applied to the `circle` svg path if `disableShrink={true}`. */\n    circleDisableShrink: {\n      animation: 'none'\n    }\n  };\n};\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nvar CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$disableShrink = props.disableShrink,\n      disableShrink = _props$disableShrink === void 0 ? false : _props$disableShrink,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 40 : _props$size,\n      style = props.style,\n      _props$thickness = props.thickness,\n      thickness = _props$thickness === void 0 ? 3.6 : _props$thickness,\n      _props$value = props.value,\n      value = _props$value === void 0 ? 0 : _props$value,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'indeterminate' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"]);\n\n  var circleStyle = {};\n  var rootStyle = {};\n  var rootProps = {};\n\n  if (variant === 'determinate' || variant === 'static') {\n    var circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = \"\".concat(((100 - value) / 100 * circumference).toFixed(3), \"px\");\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, color !== 'inherit' && classes[\"color\".concat(capitalize(color))], {\n      'determinate': classes.determinate,\n      'indeterminate': classes.indeterminate,\n      'static': classes.static\n    }[variant]),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other), /*#__PURE__*/React.createElement(\"svg\", {\n    className: classes.svg,\n    viewBox: \"\".concat(SIZE / 2, \" \").concat(SIZE / 2, \" \").concat(SIZE, \" \").concat(SIZE)\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    className: clsx(classes.circle, disableShrink && classes.circleDisableShrink, {\n      'determinate': classes.circleDeterminate,\n      'indeterminate': classes.circleIndeterminate,\n      'static': classes.circleStatic\n    }[variant]),\n    style: circleStyle,\n    cx: SIZE,\n    cy: SIZE,\n    r: (SIZE - thickness) / 2,\n    fill: \"none\",\n    strokeWidth: thickness\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['inherit', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, function (props) {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('Material-UI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The size of the circle.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, e.g '3rem'.\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The thickness of the circle.\n   */\n  thickness: PropTypes.number,\n\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   */\n  variant: chainPropTypes(PropTypes.oneOf(['determinate', 'indeterminate', 'static']), function (props) {\n    var variant = props.variant;\n\n    if (variant === 'static') {\n      throw new Error('Material-UI: `variant=\"static\"` was deprecated. Use `variant=\"determinate\"` instead.');\n    }\n\n    return null;\n  })\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCircularProgress',\n  flip: false\n})(CircularProgress);","// React\r\nimport React, { Component, useEffect } from \"react\";\r\n\r\n// MUI\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport moment from \"moment-timezone\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { CircularProgress, Container } from \"@material-ui/core\";\r\nimport { useSnackbar } from \"notistack\";\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport { linkUserSchoology } from \"../../redux/actions/userActions\";\r\n\r\nconst decodeHTML = (string) => {\r\n  const map = { gt: \">\" /* , … */ };\r\n  return string.replace(/&(#(?:x[0-9a-f]+|\\d+)|[a-z]+);?/gi, ($0, $1) => {\r\n    if ($1[0] === \"#\") {\r\n      return String.fromCharCode(\r\n        $1[1].toLowerCase() === \"x\"\r\n          ? parseInt($1.substr(2), 16)\r\n          : parseInt($1.substr(1), 10)\r\n      );\r\n    } else {\r\n      return map.hasOwnProperty($1) ? map[$1] : $0;\r\n    }\r\n  });\r\n};\r\nconst useButtonStyles = makeStyles({\r\n  root: {\r\n    border: 0,\r\n    borderRadius: \"1.25vw!important\",\r\n    marginTop: \"2vw\",\r\n    paddingBottom: 10,\r\n    display: \"block\",\r\n    cursor: \"pointer\",\r\n    position:\"relative\",\r\n    boxShadow: \"5px 5px 10px 1px rgba(0,0,0,0.6)!important\",\r\n  },\r\n});\r\n\r\nconst generatePeriodColors = (stops, theme) => {\r\n  let retarr = [];\r\n  for (let index = 0; index < stops; index++)\r\n    //50 => 25, 70 => 30 for Dark mode\r\n\r\n    retarr.push([0 + (index / stops) * 360, 0, theme ? 30 : 70]);\r\n  return retarr;\r\n};\r\n\r\nconst PeriodButton = (props) => {\r\n  const classes = useButtonStyles();\r\n  const {\r\n    theme,\r\n    period,\r\n    name,\r\n    zoom,\r\n    color,\r\n    timeStart,\r\n    timeEnd,\r\n    tSS,\r\n    tES,\r\n    duration,\r\n  } = props;\r\n  //% from 0 to 100\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  let timePassed = 0;\r\n  //If we are past the end time, set time passed to 100%\r\n  if (Date.now() - timeEnd > 0) timePassed = 100;\r\n  //If we are in class, set time passed to (current-start)/(End-start) * 100\r\n  else if (Date.now() - timeStart > 0 && timeEnd - Date.now() > 0)\r\n    timePassed = ((Date.now() - timeStart) * 100) / (timeEnd - timeStart);\r\n  //If the class is upcoming, set time passed to 0\r\n  else timePassed = 0;\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  const handleButtonClicked = () => {\r\n    if (zoom.length) setExpanded(!expanded);\r\n    else enqueueSnackbar(\"No Zoom Links found for this class!\");\r\n  };\r\n  \r\n\r\n  const handleZoomLinkClicked = (event, link) => {\r\n    event.stopPropagation();\r\n    const newWindow = window.open(link, \"_blank\", \"noopener,noreferrer\");\r\n    if (newWindow) newWindow.opener = null;\r\n  };\r\n  let notDoneCol = color.filter((x) => true);\r\n  //Set to 40 for Darkmode  \r\n  notDoneCol[2] = theme ? 30 : 90;\r\n  color[2] = theme ? 20 : 75;\r\n  return (\r\n    <div\r\n      style={{\r\n        marginBottom: \"2vh\",\r\n      }}\r\n    >\r\n      <Card\r\n        className={classes.root}\r\n        onClick={handleButtonClicked}\r\n        style={{\r\n          background: `linear-gradient(90deg, hsl(${color[0]},${color[1]}%,${\r\n            color[2]\r\n          }%) 0%, hsl(${color[0]},${color[1]}%,${\r\n            color[2]\r\n          }%) ${timePassed}%, hsl(${notDoneCol[0]},${notDoneCol[1]}%,${\r\n            notDoneCol[2]\r\n          }%) ${timePassed + 0.000001}%, hsl(${notDoneCol[0]},${\r\n            notDoneCol[1]\r\n          }%,${notDoneCol[2]}%) 100%)`,\r\n          borderRadius: 20,\r\n          padding: \"10px\",\r\n        }}\r\n      >\r\n        <Typography\r\n          variant=\"h5\"\r\n          align=\"left\"\r\n          style={{\r\n            marginLeft: \"4%\",\r\n            fontSize: window.innerWidth ** 0.4 + 32,\r\n            marginBottom: window.innerWidth <= 1300\r\n            ?\"12%\":\"6%\",\r\n            position: \"relative\",\r\n            marginTop: window.innerWidth <= 1300\r\n            ?\"4%\":\"2%\",\r\n            // left: \"5%\"\r\n          }}\r\n        >\r\n          {name}\r\n        </Typography>\r\n        {expanded ? null : (\r\n          <Typography\r\n            align=\"left\"\r\n            variant=\"h5\"\r\n            style={{\r\n              fontSize:\r\n                window.innerWidth <= 1300\r\n                  ? window.innerWidth ** 0.3 + 10\r\n                  : window.innerWidth ** 0.4 + 10,\r\n              margin: 10,\r\n              marginBottom: 10,\r\n              marginTop: 0,\r\n              bottom: window.innerWidth <= 1300 ? \"70%\" : \"1%\",\r\n              left: \"4%\",\r\n              bottom: \"10%\",\r\n              position: \"absolute\",\r\n              fontFamily: \"'Nunito'\",\r\n            }}\r\n          >\r\n            {period}&nbsp;&nbsp;&nbsp;{tSS}-{tES} ({Math.round(duration / 60000)} mins)\r\n          </Typography>\r\n        )}\r\n\r\n        <Collapse in={expanded}>\r\n          {React.Children.toArray(\r\n            zoom.map((z) => {\r\n              return (\r\n                <Button onClick={(e) => handleZoomLinkClicked(e, z.link)}>\r\n                  {z.title}\r\n                </Button>\r\n              );\r\n            })\r\n          )}\r\n        </Collapse>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst parsePeriods = (scheduleData, zoomLinkInfo, theme) => {\r\n  let scheduleDay = moment(Date.now());\r\n  let dotw = [\r\n    \"monday\",\r\n    \"tuesday\",\r\n    \"wednesday\",\r\n    \"thursday\",\r\n    \"friday\",\r\n    \"saturday\",\r\n    \"sunday\",\r\n  ][scheduleDay.isoWeekday() - 1];\r\n\r\n  let allClasses = scheduleData.classes;\r\n  let classes = new Map();\r\n  let nameOverrides = JSON.parse(scheduleData.schedule.nameOverrides);\r\n  let convertedMoment = moment()\r\n    .tz(JSON.parse(scheduleData.schedule.schedule).timePeriod)\r\n    .utcOffset();\r\n  let currentMoment = moment().utcOffset();\r\n  zoomLinkInfo.forEach((x) => {\r\n    classes.set(x.course.id, x);\r\n  });\r\n  let today = JSON.parse(scheduleData.schedule.schedule)[dotw];\r\n  let colors = generatePeriodColors(today.length, theme);\r\n  return today.map((x, i) => {\r\n    let courseInfo = classes.has(\r\n      allClasses[x.period] && allClasses[x.period].value\r\n    )\r\n      ? classes.get(allClasses[x.period] && allClasses[x.period].value)\r\n      : null;\r\n    return {\r\n      period: nameOverrides[x.period] || x.period,\r\n      color: colors[i],\r\n      name:\r\n        courseInfo && courseInfo.course\r\n          ? courseInfo.course.course_title\r\n          : \"No Class\",\r\n      zoom:\r\n        courseInfo && courseInfo.links\r\n          ? courseInfo.links\r\n              .map((linkGroup) => {\r\n                return linkGroup.links.map((link) => {\r\n                  return { link: link, title: decodeHTML(linkGroup.title) };\r\n                });\r\n              })\r\n              .flat(10000)\r\n          : [],\r\n      timeStart:\r\n        moment(x.timeStart, \"hh:mma\")\r\n          .add((convertedMoment - currentMoment) / 60, \"hours\")\r\n          .unix() * 1000,\r\n      timeEnd:\r\n        moment(x.timeEnd, \"hh:mma\")\r\n          .add((convertedMoment - currentMoment) / 60, \"hours\")\r\n          .unix() * 1000,\r\n      tSS: x.timeStart,\r\n      tES: x.timeEnd,\r\n      duration: x.timeEnd - x.timeStart,\r\n    };\r\n  });\r\n};\r\nlet done = false;\r\nconst fetchAndSet = async (setCourseInfo, setScheduleData, setCannotFetch) => {\r\n  try {\r\n    if (!localStorage.getItem(\"DBIdToken\"))\r\n      throw new Error(\"something bad happened?\");\r\n    if (localStorage.getItem(\"cachedSchedule\"))\r\n      setScheduleData(JSON.parse(localStorage.getItem(\"cachedSchedule\")));\r\n    if (localStorage.getItem(\"cachedCourseInfo\"))\r\n      setCourseInfo(JSON.parse(localStorage.getItem(\"cachedCourseInfo\")));\r\n    let [schedule, courses] = await Promise.all([\r\n      axios.get(\"https://api.hwbounty.help/schedule/@me\").catch(console.trace),\r\n      axios\r\n        .get(\"https://api.hwbounty.help/sgy/getZoomLinks\")\r\n        .catch(console.trace),\r\n    ]);\r\n    if (!schedule?.data || !courses?.data || schedule?.status === 500)\r\n      throw new Error(\"something bad happened?\");\r\n    localStorage.setItem(\"cachedCourseInfo\", JSON.stringify(courses.data));\r\n    localStorage.setItem(\"cachedSchedule\", JSON.stringify(schedule.data));\r\n    setScheduleData(schedule.data);\r\n    setCourseInfo(courses.data);\r\n  } catch (error) {\r\n    setCannotFetch(true);\r\n  }\r\n};\r\nconst useForceUpdate = () => {\r\n  const set = useState(0)[1];\r\n  return () => set((s) => s + 1);\r\n};\r\nexport const Schedule = (props) => {\r\n  const {\r\n    UI: { theme },\r\n  } = props;\r\n  const forceUpdate = useForceUpdate();\r\n  useEffect(() => {\r\n    const id = setTimeout(\r\n      () => setInterval(() => forceUpdate(), 5000),\r\n      1000 - (Date.now() % 1000)\r\n    );\r\n    return () => clearTimeout(id);\r\n  }, [])\r\n  const [courseInfo, setCourseInfo] = useState(null);\r\n  const [scheduleData, setScheduleData] = useState(null);\r\n  const [fetching, setFetching] = useState(false);\r\n  const [cannotFetch, setCannotFetch] = useState(false);\r\n  if (!scheduleData || !courseInfo) {\r\n    if (!fetching) {\r\n      setFetching(true);\r\n      fetchAndSet(setCourseInfo, setScheduleData, setCannotFetch);\r\n      return null;\r\n    }\r\n    if (cannotFetch)\r\n      return (\r\n        <div>\r\n          <Typography>\r\n            Seems like you dont have a school account linked! Please link your\r\n            schoology account to get access to this feature!\r\n          </Typography>\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={(x) => {\r\n              linkUserSchoology();\r\n            }}\r\n          >\r\n            Link Schoology Account\r\n          </Button>\r\n        </div>\r\n      );\r\n    return (\r\n      <div>\r\n        <Typography>Fetching Schedule Data/ Zoom Links...</Typography>\r\n        <CircularProgress />\r\n      </div>\r\n    );\r\n  }\r\n  if (!scheduleData?.schedule)\r\n    return (\r\n      <div>\r\n        <Typography>\r\n          Seems like you dont have a schedule setup! Please go over to the\r\n          schedules catalog and set a schedule!\r\n        </Typography>\r\n      </div>\r\n    );\r\n  const periods = parsePeriods(scheduleData, courseInfo, theme);\r\n  return (\r\n    <Container style={{ marginBottom: \"50px\", width: \"100%\", padding: \"0px\" }}>\r\n      {React.Children.toArray(\r\n        periods.map((p) => {\r\n          return (\r\n            <PeriodButton\r\n              theme={theme}\r\n              period={p.period}\r\n              name={p.name}\r\n              zoom={p.zoom}\r\n              color={p.color}\r\n              timeStart={p.timeStart}\r\n              timeEnd={p.timeEnd}\r\n              tSS={p.tSS}\r\n              tES={p.tES}\r\n              duration={p.timeEnd - p.timeStart}\r\n            />\r\n          );\r\n        })\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  UI: state.UI,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Schedule);\r\n","import { Card, Typography } from \"@material-ui/core\";\r\nimport moment from \"moment\";\r\nimport { Component, useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Schedule from \"../components/Calendar/Schedule\";\r\nimport Notifications from \"../util/notifications\";\r\nimport { withSnackbar } from 'notistack';\r\nconst CTime = (props) => {\r\n  const [fakeCurrentDate, setFakeCurrentDate] = useState(new Date()); // default value can be anything you want\r\n  return (\r\n    <div\r\n      style={{\r\n        verticalAlign: \"middle\",\r\n        width: \"100%\",\r\n        minWidth: \"100%\",\r\n      }}\r\n    >\r\n      <Typography\r\n        variant=\"h5\"\r\n        style={{\r\n          fontSize: \"5.5vw\",\r\n          textAlign: \"left\",\r\n        }}\r\n      >\r\n        {\r\n          /*moment().format(window.innerWidth <= 1368 ? \"M/D/YYYY h:mm:ss A\" : \"dddd MMMM Do h:mm:ss A\")*/ moment().format(\r\n            \"h:mm:ss A\"\r\n          )\r\n        }\r\n      </Typography>\r\n      <Typography\r\n        variant=\"h5\"\r\n        style={{\r\n          fontSize: \"2.5vw\",\r\n          textAlign: \"left\",\r\n        }}\r\n      >\r\n        {\r\n          /*moment().format(window.innerWidth <= 1368 ? \"M/D/YYYY h:mm:ss A\" : \"dddd MMMM Do h:mm:ss A\")*/ moment().format(\r\n            \"M/D/YYYY dddd\"\r\n          )\r\n        }\r\n      </Typography>\r\n    </div>\r\n  );\r\n};\r\nconst CTimeSmall = (props) => {\r\n  const [fakeCurrentDate, setFakeCurrentDate] = useState(new Date()); // default value can be anything you want\r\n  return (\r\n    <div\r\n      style={{\r\n        verticalAlign: \"middle\",\r\n        width: \"100%\",\r\n        minWidth: \"100%\",\r\n      }}\r\n    >\r\n      <Typography\r\n        variant=\"h5\"\r\n        style={{\r\n          fontSize: \"10vw\",\r\n        }}\r\n      >\r\n        {\r\n          /*moment().format(window.innerWidth <= 1368 ? \"M/D/YYYY h:mm:ss A\" : \"dddd MMMM Do h:mm:ss A\")*/ moment().format(\r\n            \"h:mm:ss A\"\r\n          )\r\n        }\r\n      </Typography>\r\n      <Typography\r\n        variant=\"h5\"\r\n        style={{\r\n          fontSize: \"5.65vw\",\r\n        }}\r\n      >\r\n        {\r\n          /*moment().format(window.innerWidth <= 1368 ? \"M/D/YYYY h:mm:ss A\" : \"dddd MMMM Do h:mm:ss A\")*/ moment().format(\r\n            \"M/D/YYYY dddd\"\r\n          )\r\n        }\r\n      </Typography>\r\n    </div>\r\n  );\r\n};\r\nlet lastTimeBasedNotif = 0;\r\nclass ScheduleInfo extends Component {\r\n  constructor(p) {\r\n    super(p);\r\n    setTimeout(\r\n      () => setInterval(() => this.forceUpdate(), 1000),\r\n      1000 - (Date.now() % 1000)\r\n    );\r\n  }\r\n  getTimePhrase() {\r\n    try {\r\n      if (!localStorage.getItem(\"cachedSchedule\")) return \"\";\r\n      let scheduleOBJ = JSON.parse(localStorage.getItem(\"cachedSchedule\"));\r\n      let schedule = JSON.parse(scheduleOBJ.schedule.schedule);\r\n      let user = JSON.parse(localStorage.getItem(\"user\"));\r\n      let allClasses = scheduleOBJ.classes;\r\n      let convertedMoment = moment().tz(schedule.timePeriod).utcOffset();\r\n      let currentMoment = moment().utcOffset();\r\n      let currentTime = moment();\r\n      let getPeriodName = (periodID) => {\r\n        return (\r\n          JSON.parse(scheduleOBJ.schedule.nameOverrides)[periodID] || \"Break\"\r\n        );\r\n      };\r\n      let dotw = [\r\n        \"monday\",\r\n        \"tuesday\",\r\n        \"wednesday\",\r\n        \"thursday\",\r\n        \"friday\",\r\n        \"saturday\",\r\n        \"sunday\",\r\n      ][moment().isoWeekday() - 1];\r\n      let formattedClasses =\r\n        schedule[dotw] &&\r\n        schedule[dotw].map((clas) => {\r\n          return {\r\n            period: clas.period,\r\n            timeStart:\r\n              moment(clas.timeStart, \"hh:mma\")\r\n                .add((convertedMoment - currentMoment) / 60, \"hours\")\r\n                .unix() * 1000,\r\n            timeEnd:\r\n              moment(clas.timeEnd, \"hh:mma\")\r\n                .add((convertedMoment - currentMoment) / 60, \"hours\")\r\n                .unix() * 1000,\r\n          };\r\n        });\r\n      //Check for current class first\r\n      let currentClass = formattedClasses.filter(\r\n        (x) => x.timeStart < Date.now() && Date.now() < x.timeEnd\r\n      )[0];\r\n\r\n      if (currentClass) {\r\n        let endingInString = `${\r\n          currentClass.timeEnd - Date.now() > 60000\r\n            ? currentClass.timeEnd - Date.now() > 3600000\r\n              ? `${Math.round(\r\n                  moment.duration(currentClass.timeEnd - Date.now()).asHours()\r\n                )} hours`\r\n              : `${Math.round(\r\n                  moment.duration(currentClass.timeEnd - Date.now()).asMinutes()\r\n                )} minutes`\r\n            : `${Math.round(\r\n                moment.duration(currentClass.timeEnd - Date.now()).asSeconds()\r\n              )} seconds`\r\n        }`;\r\n\r\n        //Try to push a notif if class is starting soon\r\n        if (\r\n          currentClass.timeEnd - Date.now() < 120 * 1000 &&\r\n          Date.now() - lastTimeBasedNotif > 240 * 1000\r\n        ) {\r\n          lastTimeBasedNotif = Date.now();\r\n\r\n          Notifications.pushNotification(\r\n            undefined,\r\n            undefined,\r\n            `${getPeriodName(currentClass.period)} is ending soon!`,\r\n            `Hey ${user.firstName}, ${getPeriodName(\r\n              currentClass.period\r\n            )} is about to end in ${endingInString}!`\r\n          );\r\n        }\r\n\r\n        return `${getPeriodName(\r\n          currentClass.period\r\n        )} ends in ${endingInString}`;\r\n      }\r\n      //Check for next upcoming class\r\n      let nextClass = formattedClasses.filter(\r\n        (x) => x.timeStart > Date.now()\r\n      )[0];\r\n\r\n      if (nextClass) {\r\n        let startingInString = `${\r\n          nextClass.timeStart - Date.now() > 60000\r\n            ? nextClass.timeStart - Date.now() > 3600000\r\n              ? `${Math.round(\r\n                  moment.duration(nextClass.timeStart - Date.now()).asHours()\r\n                )} hours`\r\n              : `${Math.round(\r\n                  moment.duration(nextClass.timeStart - Date.now()).asMinutes()\r\n                )} minutes`\r\n            : `${Math.round(\r\n                moment.duration(nextClass.timeStart - Date.now()).asSeconds()\r\n              )} seconds`\r\n        }`;\r\n        if (\r\n          nextClass.timeStart - Date.now() < 120 * 1000 &&\r\n          Date.now() - lastTimeBasedNotif > 240 * 1000\r\n        ) {\r\n          lastTimeBasedNotif = Date.now();\r\n\r\n          Notifications.pushNotification(\r\n            undefined,\r\n            undefined,\r\n            `${getPeriodName(nextClass.period)} is starting soon!`,\r\n            `Hey ${user.firstName}, ${getPeriodName(\r\n              nextClass.period\r\n            )} is about to start in ${startingInString}!`\r\n          );\r\n        }\r\n\r\n        return `${getPeriodName(\r\n          nextClass.period\r\n        )} starts in ${startingInString}`;\r\n      }\r\n\r\n      //Check for what was the previous class\r\n      let lastClass = formattedClasses\r\n        .filter((x) => Date.now() > x.timeEnd)\r\n        .pop();\r\n      if (lastClass) {\r\n        let lastEnded = `${\r\n          Date.now() - lastClass.timeEnd > 60000\r\n            ? Date.now() - lastClass.timeEnd > 60000\r\n              ? `${Math.round(\r\n                  moment.duration(Date.now() - lastClass.timeEnd).asHours()\r\n                )} hours`\r\n              : `${Math.round(\r\n                  moment.duration(Date.now() - lastClass.timeEnd).asMinutes()\r\n                )} minutes`\r\n            : `${Math.round(\r\n                moment.duration(Date.now() - lastClass.timeEnd).asSeconds()\r\n              )} seconds`\r\n        }`;\r\n        return `${getPeriodName(lastClass.period)} ended ${lastEnded} ago`;\r\n      }\r\n\r\n      //If no classes exist for the day\r\n      return `No classes today! Take a break, you deserve it :)`;\r\n    } catch (error) {\r\n      return \"\";\r\n    }\r\n  }\r\n  render() {\r\n\r\n    if (window.innerWidth <= 1000) {\r\n      return (\r\n        <div\r\n          style={{\r\n            marginTop: \"5%\",\r\n          }}\r\n        >\r\n          <Card\r\n            style={{\r\n              display: \"block\",\r\n              verticalAlign: \"top\",\r\n              width: \"90%\",\r\n              margin: \"5%\",\r\n            }}\r\n          >\r\n            <CTimeSmall />\r\n            <Typography\r\n              variant=\"h5\"\r\n              style={{\r\n                fontSize: 28,\r\n              }}\r\n            >\r\n              {this.getTimePhrase()}\r\n            </Typography>\r\n          </Card>\r\n          <Card\r\n            style={{\r\n              overflowY: \"scroll\",\r\n              padding: \"2%\",\r\n              paddingBottom: \"0%\",\r\n              margin: \"5%\",\r\n              /* max-height: 50vw!important; */\r\n              /* height: 50vw; */\r\n              width: \"90%\",\r\n\r\n              borderRadius: 5,\r\n              borderWidth: 0,\r\n              background: \"rgba(0,0,0,0)\",\r\n            }}\r\n          >\r\n            <Schedule />\r\n          </Card>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div\r\n        style={{\r\n          marginTop: \"5%\",\r\n        }}\r\n      >\r\n        <Card\r\n          style={{\r\n            overflowY: \"scroll\",\r\n            padding: \"2%\",\r\n            paddingBottom: \"0%\",\r\n            /* max-height: 50vw!important; */\r\n            /* height: 50vw; */\r\n            width: \"60%\",\r\n            maxWidth: \"60%\",\r\n            display: \"inline-block\",\r\n            background: \"rgba(0,0,0,0)\",\r\n            borderRadius: 10,\r\n            borderWidth: 0,\r\n          }}\r\n        >\r\n          <Schedule />\r\n        </Card>\r\n        <Card\r\n          style={{\r\n            display: \"inline-block\",\r\n            verticalAlign: \"top\",\r\n            width: \"30vw\",\r\n            height: \"30vw\",\r\n            marginLeft: \"2vw\",\r\n            padding: \"2%\",\r\n            position: \"relative\",\r\n            background: \"rgba(0,0,0,0)\",\r\n            borderRadius: \"1.25vw!important\",\r\n          }}\r\n        />\r\n        <Card\r\n          style={{\r\n            borderRadius: \"1.25vw!important\",\r\n            display: \"inline-block\",\r\n            verticalAlign: \"top\",\r\n            width: \"30vw\",\r\n            height: \"30vw\",\r\n            marginLeft: \"2vw\",\r\n            padding: \"2%\",\r\n            position: \"fixed\",\r\n            right: \"5%\",\r\n            top: \"19.5vh\",\r\n            \r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              position: \"absolute\",\r\n              top: \"50%\",\r\n              left: \"50%\",\r\n              transform: \"translate(-50%,-50%)\",\r\n             \r\n            }}\r\n          >\r\n            <CTime />\r\n            <Typography\r\n              variant=\"h5\"\r\n              align=\"left\"\r\n              style={{\r\n                fontSize: \"2vw\",\r\n              }}\r\n            >\r\n              {this.getTimePhrase()}\r\n            </Typography>\r\n          </div>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect()(withSnackbar(ScheduleInfo));\r\n"],"sourceRoot":""}