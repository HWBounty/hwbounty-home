{"version":3,"sources":["util/getTimePhrase.js","util/notifications.js","components/Home/CTime.js","components/Calendar/PeriodList.js","components/Calendar/DesktopSchedule.js","components/Calendar/Schedule.js","util/getScheduleTimePhrase.js","components/Calendar/MobileSchedule.js","pages/schedule.js"],"names":["lastTimeBasedNotif","getTimePhrase","localStorage","getItem","scheduleOBJ","JSON","parse","schedule","user","convertedMoment","classes","moment","tz","timePeriod","utcOffset","currentMoment","getPeriodName","periodID","nameOverrides","dotw","isoWeekday","formattedClasses","map","clas","period","timeStart","add","unix","timeEnd","currentClass","filter","x","Date","now","endingInString","Math","round","duration","asHours","asMinutes","asSeconds","Notifications","pushNotification","undefined","firstName","nextClass","startingInString","lastClass","pop","lastEnded","error","Notification","permission","requestPermission","icon","img","title","text","body","image","CTime2","props","Typography","variant","style","fontSize","fontFamily","format","fontWeight","useStyles","makeStyles","theme","cardTitle","cardSubtitles1","card","boxShadow","generatePeriodColors","stops","retarr","index","push","cardWidth","cardHeight","PeriodButton","UI","Card","borderRadius","backgroundColor","color","width","height","display","padding","flexDirection","alignItems","margin","className","name","startTime","endTime","connect","state","periodData","scheduleData","zoomLinkInfo","offset","scheduleDay","ogHasOffset","allClasses","Map","length","forEach","set","course","id","today","colors","i","courseInfo","has","value","get","course_title","zoom","links","linkGroup","link","decodeHTML","flat","tSS","tES","nofill","parsePeriods","periodMapped","React","Children","toArray","root","border","marginTop","paddingBottom","cursor","position","fullHeight","minHeight","maxHeight","background","popupTitle","themedText","forceUpdate","useForceUpdate","useState","speedDialOpen","setSpeedDialOpen","alternateScheduleDialog","setAlternateScheduleDialog","handleClose","sleep","TetLib","speedDialActions","authenticated","privateID","createdBy","Today","runID","useEffect","run","a","justifyContent","maxwidth","flexGrow","document","getElementById","marginLeft","marginRight","offsetWidth","Divider","setTimeout","Container","SpeedDial","ariaLabel","speedDial","hidden","SpeedDialIcon","onClose","onOpen","open","bottom","right","action","SpeedDialAction","tooltipTitle","onClick","Dialog","fullWidth","maxWidth","aria-labelledby","DialogTitle","DialogContent","string","gt","replace","$0","$1","String","fromCharCode","toLowerCase","parseInt","substr","hasOwnProperty","useButtonStyles","enqueueSnackbar","useSnackbar","timePassed","expanded","setExpanded","notDoneCol","marginBottom","align","window","innerWidth","left","t","mins","Collapse","in","z","Button","e","event","stopPropagation","newWindow","opener","handleZoomLinkClicked","fetchAndSet","setCourseInfo","setScheduleData","setCannotFetch","console","trace","dayOffset","s","fetching","setFetching","cannotFetch","linkUserSchoology","CircularProgress","periods","splice","p","CTimeSmall","verticalAlign","minWidth","withSnackbar","setOffset","adjustedMoment","borderWidth","IconButton","ChevronLeft","ChevronRight","updateSchedule","addEventListener","removeEventListener","cachedSchedule","setSchedule","removeItem","store","dispatch","DesktopSchedule","MobileSchedule"],"mappings":"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","file":"static/js/16.0ba91a21.chunk.js","sourcesContent":["import moment from \"moment-timezone\";\nimport Notifications from \"../util/notifications\";\nlet lastTimeBasedNotif = 0;\nexport const getTimePhrase = () => {\n\ttry {\n\t\tif (!localStorage.getItem(\"cachedSchedule\")) return \"\";\n\t\tlet scheduleOBJ = JSON.parse(localStorage.getItem(\"cachedSchedule\"));\n\t\tlet classData = JSON.parse(localStorage.getItem(\"cachedCourseInfo\"));\n\t\tlet schedule = JSON.parse(scheduleOBJ.schedule.schedule);\n\t\tlet user = JSON.parse(localStorage.getItem(\"user\"));\n\t\tlet allClasses = scheduleOBJ.classes;\n\t\tlet convertedMoment = moment().tz(schedule.timePeriod).utcOffset();\n\t\tlet currentMoment = moment().utcOffset();\n\t\tlet currentTime = moment();\n\t\tlet getPeriodName = (periodID) => {\n\t\t\treturn (\n\t\t\t\tJSON.parse(scheduleOBJ.schedule.nameOverrides)[periodID] || \"Break\"\n\t\t\t);\n\t\t};\n\t\tlet dotw = [\n\t\t\t\"monday\",\n\t\t\t\"tuesday\",\n\t\t\t\"wednesday\",\n\t\t\t\"thursday\",\n\t\t\t\"friday\",\n\t\t\t\"saturday\",\n\t\t\t\"sunday\",\n\t\t][moment().isoWeekday() - 1];\n\t\tlet formattedClasses =\n\t\t\tschedule[dotw] &&\n\t\t\tschedule[dotw].map((clas) => {\n\t\t\t\treturn {\n\t\t\t\t\tperiod: clas.period,\n\t\t\t\t\ttimeStart:\n\t\t\t\t\t\tmoment(clas.timeStart, \"hh:mma\")\n\t\t\t\t\t\t\t.add((convertedMoment - currentMoment) / 60, \"hours\")\n\t\t\t\t\t\t\t.unix() * 1000,\n\t\t\t\t\ttimeEnd:\n\t\t\t\t\t\tmoment(clas.timeEnd, \"hh:mma\")\n\t\t\t\t\t\t\t.add((convertedMoment - currentMoment) / 60, \"hours\")\n\t\t\t\t\t\t\t.unix() * 1000,\n\t\t\t\t};\n\t\t\t});\n\t\t//Check for current class first\n\t\tlet currentClass = formattedClasses.filter(\n\t\t\t(x) => x.timeStart < Date.now() && Date.now() < x.timeEnd\n\t\t)[0];\n\n\t\tif (currentClass) {\n\t\t\tlet endingInString = `${currentClass.timeEnd - Date.now() > 60000\n\t\t\t\t? currentClass.timeEnd - Date.now() > 3600000\n\t\t\t\t\t? `${Math.round(\n\t\t\t\t\t\tmoment.duration(currentClass.timeEnd - Date.now()).asHours()\n\t\t\t\t\t)} hours`\n\t\t\t\t\t: `${Math.round(\n\t\t\t\t\t\tmoment.duration(currentClass.timeEnd - Date.now()).asMinutes()\n\t\t\t\t\t)} minutes`\n\t\t\t\t: `${Math.round(\n\t\t\t\t\tmoment.duration(currentClass.timeEnd - Date.now()).asSeconds()\n\t\t\t\t)} seconds`\n\t\t\t\t}`;\n\n\t\t\t//Try to push a notif if class is starting soon\n\t\t\tif (\n\t\t\t\tcurrentClass.timeEnd - Date.now() < 120 * 1000 &&\n\t\t\t\tDate.now() - lastTimeBasedNotif > 240 * 1000\n\t\t\t) {\n\t\t\t\tlastTimeBasedNotif = Date.now();\n\n\t\t\t\tNotifications.pushNotification(\n\t\t\t\t\tundefined,\n\t\t\t\t\tundefined,\n\t\t\t\t\t`${getPeriodName(currentClass.period)} is ending soon!`,\n\t\t\t\t\t`Hey ${user.firstName}, ${getPeriodName(\n\t\t\t\t\t\tcurrentClass.period\n\t\t\t\t\t)} is about to end in ${endingInString}!`\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn `${getPeriodName(\n\t\t\t\tcurrentClass.period\n\t\t\t)} ends in ${endingInString}`;\n\t\t}\n\t\t//Check for next upcoming class\n\t\tlet nextClass = formattedClasses.filter(\n\t\t\t(x) => x.timeStart > Date.now()\n\t\t)[0];\n\n\t\tif (nextClass) {\n\t\t\tlet startingInString = `${nextClass.timeStart - Date.now() > 60000\n\t\t\t\t? nextClass.timeStart - Date.now() > 3600000\n\t\t\t\t\t? `${Math.round(\n\t\t\t\t\t\tmoment.duration(nextClass.timeStart - Date.now()).asHours()\n\t\t\t\t\t)} hours`\n\t\t\t\t\t: `${Math.round(\n\t\t\t\t\t\tmoment.duration(nextClass.timeStart - Date.now()).asMinutes()\n\t\t\t\t\t)} minutes`\n\t\t\t\t: `${Math.round(\n\t\t\t\t\tmoment.duration(nextClass.timeStart - Date.now()).asSeconds()\n\t\t\t\t)} seconds`\n\t\t\t\t}`;\n\t\t\tif (\n\t\t\t\tnextClass.timeStart - Date.now() < 120 * 1000 &&\n\t\t\t\tDate.now() - lastTimeBasedNotif > 240 * 1000\n\t\t\t) {\n\t\t\t\tlastTimeBasedNotif = Date.now();\n\n\t\t\t\tNotifications.pushNotification(\n\t\t\t\t\tundefined,\n\t\t\t\t\tundefined,\n\t\t\t\t\t`${getPeriodName(nextClass.period)} is starting soon!`,\n\t\t\t\t\t`Hey ${user.firstName}, ${getPeriodName(\n\t\t\t\t\t\tnextClass.period\n\t\t\t\t\t)} is about to start in ${startingInString}!`\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn `${getPeriodName(\n\t\t\t\tnextClass.period\n\t\t\t)} starts in ${startingInString}`;\n\t\t}\n\n\t\t//Check for what was the previous class\n\t\tlet lastClass = formattedClasses\n\t\t\t.filter((x) => Date.now() > x.timeEnd)\n\t\t\t.pop();\n\t\tif (lastClass) {\n\t\t\tlet lastEnded = `${Date.now() - lastClass.timeEnd > 60000\n\t\t\t\t? Date.now() - lastClass.timeEnd > 60000\n\t\t\t\t\t? `${Math.round(\n\t\t\t\t\t\tmoment.duration(Date.now() - lastClass.timeEnd).asHours()\n\t\t\t\t\t)} hours`\n\t\t\t\t\t: `${Math.round(\n\t\t\t\t\t\tmoment.duration(Date.now() - lastClass.timeEnd).asMinutes()\n\t\t\t\t\t)} minutes`\n\t\t\t\t: `${Math.round(\n\t\t\t\t\tmoment.duration(Date.now() - lastClass.timeEnd).asSeconds()\n\t\t\t\t)} seconds`\n\t\t\t\t}`;\n\t\t\treturn `${getPeriodName(lastClass.period)} ended ${lastEnded} ago`;\n\t\t}\n\n\t\t//If no classes exist for the day\n\t\treturn `No classes today! Take a break, you deserve it :)`;\n\t} catch (error) {\n\t\treturn \"\";\n\t}\n};\nexport const getWhenSchoolEnds = (offset) => {\n\ttry {\n\t\tif (!localStorage.getItem(\"cachedSchedule\")) return \"\";\n\t\tlet scheduleOBJ = JSON.parse(localStorage.getItem(\"cachedSchedule\"));\n\t\tlet classData = JSON.parse(localStorage.getItem(\"cachedCourseInfo\"));\n\t\tlet schedule = JSON.parse(scheduleOBJ.schedule.schedule);\n\t\tlet user = JSON.parse(localStorage.getItem(\"user\"));\n\t\tlet allClasses = scheduleOBJ.classes;\n\t\tlet convertedMoment = moment().tz(schedule.timePeriod).utcOffset();\n\t\tlet currentMoment = moment().utcOffset();\n\t\tlet currentTime = moment();\n\t\tlet getPeriodName = (periodID) => {\n\t\t\treturn (\n\t\t\t\tJSON.parse(scheduleOBJ.schedule.nameOverrides)[periodID] || \"Break\"\n\t\t\t);\n\t\t};\n\t\tlet scheduleDay = moment(Date.now());\n\t\tlet ogHasOffset = !!offset;\n\t\tif (offset)\n\t\t\toffset = ((scheduleDay.isoWeekday() - 1) + (offset % 7 + 7) % 7) % 7;\n\t\telse\n\t\t\toffset = (scheduleDay.isoWeekday() - 1);\n\t\tlet dotw = [\n\t\t\t\"monday\",\n\t\t\t\"tuesday\",\n\t\t\t\"wednesday\",\n\t\t\t\"thursday\",\n\t\t\t\"friday\",\n\t\t\t\"saturday\",\n\t\t\t\"sunday\",\n\t\t][offset];\n\t\tlet formattedClasses =\n\t\t\tschedule[dotw] &&\n\t\t\tschedule[dotw].map((clas) => {\n\t\t\t\tlet courseInfo = classData.filter(x => x.course.id === allClasses[clas.period].value).length\n\t\t\t\t\t? allClasses[clas.period]\n\t\t\t\t\t: null;\n\t\t\t\tif (!(courseInfo) && clas.period !== \"break\") return null;\n\t\t\t\treturn {\n\t\t\t\t\tperiod: clas.period,\n\t\t\t\t\ttimeStart:\n\t\t\t\t\t\tmoment(clas.timeStart, \"hh:mma\")\n\t\t\t\t\t\t\t.add((convertedMoment - currentMoment) / 60, \"hours\")\n\t\t\t\t\t\t\t.unix() * 1000,\n\t\t\t\t\ttimeEnd:\n\t\t\t\t\t\tmoment(clas.timeEnd, \"hh:mma\")\n\t\t\t\t\t\t\t.add((convertedMoment - currentMoment) / 60, \"hours\")\n\t\t\t\t\t\t\t.unix() * 1000,\n\t\t\t\t\tendTime: clas.timeEnd,\n\t\t\t\t};\n\t\t\t}).filter(x => x);\n\t\tformattedClasses.sort((a, b) => b.timeEnd - a.timeEnd);\n\t\tif (!formattedClasses.length) return \"No school today!\";\n\t\treturn ``\n\t} catch (er) {\n\t\tconsole.trace(er);\n\t}\n};\nexport default getTimePhrase;","class Notifications {\n\tconstructor() {\n\t\tif (Notification.permission !== \"granted\") {\n\t\t\tNotification.requestPermission();\n\t\t}\n\t}\n\tstatic pushNotification(icon, img, title, text) {\n\t\ttry {\n\t\t\tif (Notification.permission !== \"granted\") {\n\t\t\t\tNotification.requestPermission();\n\t\t\t}\n\t\t\treturn new Notification(title || \"HWBounty Notification\", {body: text || \"\", icon: icon, image: img});\n\t\t} catch (error) {\n\t\t\t\n\t\t}\n\t\t\n\t}\n}\nexport default Notifications;","import moment from \"moment\";\n\nimport { Typography } from \"@material-ui/core\";\n\nexport const CTime = (props) => {\n  return (\n    <div\n      style={{\n        verticalAlign: \"middle\",\n        width: \"100%\",\n        minWidth: \"100%\",\n      }}\n    >\n      <Typography\n        variant=\"h5\"\n        style={{\n          fontSize: \"3.5vw\",\n          fontFamily: \"Poppins\",\n        }}\n      >\n        {\n          /*moment().format(window.innerWidth <= 1368 ? \"M/D/YYYY h:mm:ss A\" : \"dddd MMMM Do h:mm:ss A\")*/ moment().format(\n            \"h:mm:ss A\"\n          )\n        }\n      </Typography>\n      <Typography\n        variant=\"h5\"\n        style={{\n          fontSize: \"1.65vw\",\n          fontFamily: \"Poppins\",\n          fontWeight: \"20\",\n        }}\n      >\n        {\n          /*moment().format(window.innerWidth <= 1368 ? \"M/D/YYYY h:mm:ss A\" : \"dddd MMMM Do h:mm:ss A\")*/ moment().format(\n            \"dddd M/D/YYYY\"\n          )\n        }\n      </Typography>\n    </div>\n  );\n};\nexport const CTime2 = (props) => {\n  return (\n    <div>\n      <Typography\n        variant=\"h5\"\n        style={{\n          fontSize: \"3rem\",\n          fontFamily: \"Poppins\",\n        }}\n      >\n        {\n          /*moment().format(window.innerWidth <= 1368 ? \"M/D/YYYY h:mm:ss A\" : \"dddd MMMM Do h:mm:ss A\")*/ moment().format(\n            \"h:mm:ss A\"\n          )\n        }\n      </Typography>\n      <Typography\n        variant=\"h5\"\n        style={{\n          fontSize: \"2rem\",\n          fontFamily: \"Poppins\",\n          fontWeight: \"20\",\n        }}\n      >\n        {\n          /*moment().format(window.innerWidth <= 1368 ? \"M/D/YYYY h:mm:ss A\" : \"dddd MMMM Do h:mm:ss A\")*/ moment().format(\n            \"dddd M/D/YYYY\"\n          )\n        }\n      </Typography>\n    </div>\n  );\n};\nexport default CTime;\n","import React from \"react\";\n\nimport { makeStyles, Card, Typography } from \"@material-ui/core\";\n\nimport { connect } from \"react-redux\";\n\nimport moment from \"moment\";\nimport \"moment-timezone\";\nconst useStyles = makeStyles((theme) => ({\n  cardTitle: {\n    fontFamily: \"Raleway\",\n    fontSize: \"2.5rem\",\n  },\n  cardSubtitles1: {\n    fontFamily: \"Raleway\",\n    fontSize: \"1.25rem\",\n    fontWeight: \"200\",\n  },\n  card: {\n    boxShadow: (theme) =>\n      theme === 1\n        ? \"0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23)!important\"\n        : \"0 3px 6px rgba(0,0,0,0.1), 0 3px 6px rgba(0,0,0,0.01)!important\",\n  },\n}));\nconst generatePeriodColors = (stops, theme) => {\n  let retarr = [];\n  for (let index = 0; index < stops; index++)\n    //50 => 25, 70 => 30 for Dark mode\n\n    retarr.push([0 + (index / stops) * 360, 0, theme ? 30 : 70]);\n  return retarr;\n};\nconst parsePeriods = (scheduleData, zoomLinkInfo, theme, offset) => {\n  let scheduleDay = moment(Date.now());\n  let ogHasOffset = offset;\n  if (offset)\n    offset = (scheduleDay.isoWeekday() - 1 + (((offset % 7) + 7) % 7)) % 7;\n  else offset = scheduleDay.isoWeekday() - 1;\n  let dotw = [\n    \"monday\",\n    \"tuesday\",\n    \"wednesday\",\n    \"thursday\",\n    \"friday\",\n    \"saturday\",\n    \"sunday\",\n  ][offset];\n  let allClasses = scheduleData.classes || {};\n  let classes = new Map();\n  let nameOverrides = JSON.parse(scheduleData.schedule.nameOverrides);\n  let convertedMoment = moment()\n    .tz(JSON.parse(scheduleData.schedule.schedule).timePeriod)\n    .utcOffset();\n  let currentMoment = moment().utcOffset();\n  if (zoomLinkInfo?.length)\n    zoomLinkInfo.forEach((x) => {\n      classes.set(x.course.id, x);\n    });\n  let today = JSON.parse(scheduleData.schedule.schedule)[dotw];\n  let colors = generatePeriodColors(today.length, theme);\n  return today\n    .map((x, i) => {\n      let courseInfo = classes.has(\n        allClasses[x.period] && allClasses[x.period].value\n      )\n        ? classes.get(allClasses[x.period] && allClasses[x.period].value)\n        : null;\n      // if (!(courseInfo) && x.period !== \"break\") return null;\n      return {\n        period: nameOverrides[x.period] || x.period,\n        color: colors[i],\n        name:\n          courseInfo && courseInfo.course\n            ? courseInfo.course.course_title\n            : nameOverrides[x.period],\n        zoom:\n          courseInfo && courseInfo.links\n            ? courseInfo.links\n              .map((linkGroup) => {\n                return linkGroup.links.map((link) => {\n                  return { link: link, title: decodeHTML(linkGroup.title) };\n                });\n              })\n              .flat(10000)\n            : [],\n        timeStart:\n          moment(x.timeStart, \"hh:mma\")\n            .add((convertedMoment - currentMoment) / 60, \"hours\")\n            .unix() * 1000,\n        timeEnd:\n          moment(x.timeEnd, \"hh:mma\")\n            .add((convertedMoment - currentMoment) / 60, \"hours\")\n            .unix() * 1000,\n        tSS: x.timeStart,\n        tES: x.timeEnd,\n        duration: x.timeEnd - x.timeStart,\n        nofill: ogHasOffset,\n      };\n    })\n    .filter((x) => x);\n};\nconst PeriodList = (props) => {\n  const classes = useStyles(props.UI.theme);\n  const periodData = parsePeriods(\n    props.scheduleData,\n    props.zoomLinkInfo,\n    props.UI.theme,\n    props.offset\n  );\n  let periodColors = generatePeriodColors(periodData.length, 0);\n  let periodMapped = periodData.map((periodData, i) => {\n    return (\n      <PeriodButton\n        color={props.UI.theme ? \"rgb(40,40,40)\" : `rgb(250,250,250)`}\n        name={periodData.name}\n        UI={props.UI}\n        startTime={periodData.tSS}\n        endTime={periodData.tES}\n        duration={`${Math.round(\n          (periodData.timeEnd - periodData.timeStart) / (1000 * 60)\n        )} minutes`}\n      />\n    );\n  });\n\n  return <div>{React.Children.toArray(periodMapped)}</div>;\n};\nconst cardWidth = \"25vw\";\nconst cardHeight = \"9rem\";\nconst PeriodButton = (props) => {\n  const classes = useStyles(props.UI.theme);\n  return (\n    <Card\n      style={{\n        borderRadius: \"0.5rem\",\n        backgroundColor: props.color,\n        width: `clamp(${cardWidth},${cardWidth},${cardWidth})`,\n        height: `clamp(${cardHeight},${cardHeight},${cardHeight})`,\n        display: \"flex\",\n        padding: \"1.5rem\",\n        flexDirection: \"column\",\n        alignItems: \"flex-start\",\n        margin: \"2rem\",\n      }}\n      className={`${classes.card}`}\n    >\n      <Typography\n        className={`${classes.cardTitle}`}\n        style={{ color: props.UI.theme === 1 ? \"white\" : \"rgb(110,110,110)\" }}\n      >\n        {props.name}\n      </Typography>\n      <Typography\n        className={`${classes.cardSubtitles1}`}\n      >{`${props.startTime} - ${props.endTime} (${props.duration})`}</Typography>\n    </Card>\n  );\n};\nconst mapStateToProps = (state) => ({\n  UI: state.UI,\n});\n\nexport default connect(mapStateToProps)(PeriodList);\n","// React\nimport React, { useState, useEffect } from \"react\";\n\n// MUI\nimport Card from \"@material-ui/core/Card\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport { Container, Dialog, DialogContent, DialogTitle, Divider, Typography } from \"@material-ui/core\";\nimport { SpeedDial, SpeedDialAction, SpeedDialIcon } from \"@material-ui/lab\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { Today } from \"@material-ui/icons\";\n\n// Redux\nimport { connect } from \"react-redux\";\n\nimport { CTime2 } from \"../Home/CTime\";\nimport PeriodList from \"./PeriodList\";\nimport TetLib from \"../../util/TetLib\";\nimport useForceUpdate from \"../../util/useForceUpdate\";\n\nconst decodeHTML = (string) => {\n\tconst map = { gt: \">\" /* , … */ };\n\treturn string.replace(/&(#(?:x[0-9a-f]+|\\d+)|[a-z]+);?/gi, ($0, $1) => {\n\t\tif ($1[0] === \"#\") {\n\t\t\treturn String.fromCharCode(\n\t\t\t\t$1[1].toLowerCase() === \"x\"\n\t\t\t\t\t? parseInt($1.substr(2), 16)\n\t\t\t\t\t: parseInt($1.substr(1), 10)\n\t\t\t);\n\t\t} else {\n\t\t\treturn map.hasOwnProperty($1) ? map[$1] : $0;\n\t\t}\n\t});\n};\nconst useButtonStyles = makeStyles({\n\troot: {\n\t\tborder: 0,\n\t\tborderRadius: \"1rem!important\",\n\t\tmarginTop: \"2vw\",\n\t\tpaddingBottom: 10,\n\t\tdisplay: \"block\",\n\t\tcursor: \"pointer\",\n\t\tposition: \"relative\",\n\t\tboxShadow: \" 4px 6px 5px 4px rgba(0,0,0,0.2)!important\",\n\t},\n});\nconst useStyles = makeStyles((theme) => ({\n\tfullHeight: {\n\t\theight: \"100%\",\n\t\tminHeight: \"100%\",\n\t\tmaxHeight: \"100%\",\n\t},\n\tcard: {\n\t\tboxShadow: (theme) =>\n\t\t\ttheme === 1\n\t\t\t\t? \"0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23)!important\"\n\t\t\t\t: \"0 3px 6px rgba(0,0,0,0.1), 0 3px 6px rgba(0,0,0,0.01)!important\",\n\t\tbackground: (theme) => (theme === 1 ? \"rgb(40,40,40)\" : \"rgb(250,250,250)\"),\n\t\tborderRadius: \"1vmin\",\n\t},\n\tpopupTitle: {\n\t\tfontSize: \"1.5rem\",\n\t\tfontWeight: \"bold\",\n\t\tfontFamily: \"Roboto, sans-serif\",\n\t},\n\tthemedText: {\n\t\tcolor: (theme) => (theme === 1 ? \"rgb(255,255,255)!important\" : \"rgb(0,0,0)!o\"),\n\t}\n}));\nconst DesktopSchedulePage = (props) => {\n\tconst {\n\t\tUI: { theme },\n\t\tuser,\n\t\tschedule,\n\t} = props;\n\tconst forceUpdate = useForceUpdate();\n\tconst [scheduleData, setScheduleData] = useState(false);\n\tconst [speedDialOpen, setSpeedDialOpen] = useState(false);\n\tconst [alternateScheduleDialog, setAlternateScheduleDialog] = useState(false);\n\tconst handleOpen = () => {\n\t\tsetSpeedDialOpen(true);\n\t};\n\n\tconst handleClose = () => {\n\t\tsetSpeedDialOpen(false);\n\t};\n\tconst handleCloseAlternateScheduleDialog = () => {\n\t\tsetAlternateScheduleDialog(false);\n\t};\n\tconst { sleep } = TetLib;\n\tconst speedDialActions = [];\n\tif (user?.authenticated) {\n\t\tspeedDialActions.push({ icon: <EditIcon />, name: \"Create a new event\" });\n\t}\n\tif (user?.user?.privateID === schedule?.schedule?.createdBy) {\n\t\tspeedDialActions.push({\n\t\t\ticon: <Today />,\n\t\t\tname: \"Add an Alternate Schedule Day\",\n\t\t\trunID: \"openAlternateSchedule\"\n\t\t});\n\t}\n\tconst onSpeedDialAction = (name) => {\n\t\thandleClose()\n\t\tif (name === \"openAlternateSchedule\") {\n\t\t\tsetAlternateScheduleDialog(true);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tlet run = true;\n\t\t(async () => {\n\t\t\tawait sleep(250 - (Date.now() % 250));\n\t\t\tlet lastTime = Date.now();\n\t\t\twhile (run) {\n\t\t\t\tawait sleep(250 - (Date.now() % 250));\n\t\t\t\tforceUpdate();\n\t\t\t\tlastTime = Date.now();\n\t\t\t}\n\t\t})();\n\t\treturn () => {\n\t\t\trun = false;\n\t\t};\n\t}, []);\n\tconst renderMain = () => {\n\t\tif (!document.getElementById(\"divSize\")) {\n\t\t\tsetTimeout(() => forceUpdate(), 1);\n\t\t\treturn null;\n\t\t}\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\t// width: \"clamp(0vw, 30%, 50vw)\",\n\t\t\t\t\tflexGrow: \"1\",\n\t\t\t\t\tmarginTop: \"2rem\",\n\t\t\t\t\tmarginLeft: \"5rem\",\n\t\t\t\t\tposition: \"fixed\",\n\t\t\t\t\tmarginRight: \"5rem\",\n\t\t\t\t}}\n\t\t\t\tclassName={`${classes.fullHeight}`}\n\t\t\t>\n\t\t\t\t<Card\n\t\t\t\t\tclassName={classes.card}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tmargin: \"0 auto\",\n\t\t\t\t\t\tmaxHeight: \"95%\",\n\t\t\t\t\t\tminHeight: \"95%\",\n\t\t\t\t\t\tpadding: \"1rem\",\n\t\t\t\t\t\twidth: `calc(${document.getElementById(\"divSize\").offsetWidth\n\t\t\t\t\t\t\t}px - 6rem)`,\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<CTime2 />\n\t\t\t\t\t<br />\n\t\t\t\t\t<Divider />\n\t\t\t\t</Card>\n\t\t\t</div>\n\t\t);\n\t};\n\tconst classes = useStyles(theme);\n\tif (!schedule) return null;\n\treturn (\n\t\t<div\n\t\t\tstyle={{\n\t\t\t\tdisplay: \"flex\",\n\t\t\t\tflexDirection: \"row\",\n\t\t\t\tjustifyContent: \"space-between\",\n\t\t\t\tmaxwidth: \"calc(100vw - 5rem)\",\n\t\t\t\tposition: \"relative\",\n\t\t\t}}\n\t\t\tclassName={`${classes.fullHeight}`}\n\t\t>\n\t\t\t<div style={{ flexGrow: \"1\" }} id=\"divSize\">\n\t\t\t\t{renderMain()}\n\t\t\t</div>\n\t\t\t<Container\n\t\t\t\tstyle={{\n\t\t\t\t\tdisplay: \"flex\",\n          /*backgroundColor: \"black\",*/ justifyContent: \"center\",\n\t\t\t\t\twidth: \"33vw\",\n\t\t\t\t}}\n\t\t\t\tclassName={`${classes.fullHeight}`}\n\t\t\t>\n\t\t\t\t<PeriodList scheduleData={schedule} zoomLinkInfo={[]} offset={0} />\n\t\t\t</Container>\n\t\t\t<SpeedDial\n\t\t\t\tariaLabel=\"SpeedDial openIcon example\"\n\t\t\t\tclassName={classes.speedDial}\n\t\t\t\thidden={speedDialActions.length == 0}\n\t\t\t\ticon={<SpeedDialIcon />}\n\t\t\t\tonClose={handleClose}\n\t\t\t\tonOpen={handleOpen}\n\t\t\t\topen={speedDialOpen}\n\t\t\t\tstyle={{ position: \"fixed\", bottom: \"16px\", right: \"16px\" }}\n\t\t\t>\n\t\t\t\t{speedDialActions.map((action) => (\n\t\t\t\t\t<SpeedDialAction\n\t\t\t\t\t\tkey={action.name}\n\t\t\t\t\t\ticon={action.icon}\n\t\t\t\t\t\ttooltipTitle={action.name}\n\t\t\t\t\t\tonClick={() => { onSpeedDialAction(action.runID) }}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</SpeedDial>\n\t\t\t<Dialog\n\t\t\t\tfullWidth={true}\n\t\t\t\tmaxWidth={\"xl\"}\n\t\t\t\topen={alternateScheduleDialog}\n\t\t\t\tonClose={handleCloseAlternateScheduleDialog}\n\t\t\t\taria-labelledby=\"max-width-dialog-title\"\n\t\t\t>\n\t\t\t\t<DialogTitle className={`${classes.themedText}`}>\n\t\t\t\t\tCreate an Alternate Schedule Day </DialogTitle>\n\t\t\t\t<DialogContent style={{ height: \"512px\" }}>\n\t\t\t\t\t<Typography color=\"textPrimary\">hi!</Typography>\n\t\t\t\t</DialogContent>\n\t\t\t</Dialog>\n\t\t</div>\n\t);\n};\n\nconst mapStateToProps = (state) => ({\n\tUI: state.UI,\n\tuser: state.user,\n});\nconst mapActionsToProps = {};\nexport default connect(mapStateToProps, mapActionsToProps)(DesktopSchedulePage);\n","// React\nimport React, { useEffect, useState } from \"react\";\n\n// MUI\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport moment from \"moment-timezone\";\nimport { CircularProgress, Container } from \"@material-ui/core\";\n\n// Redux\nimport { connect } from \"react-redux\";\nimport { linkUserSchoology } from \"../../redux/actions/userActions\";\n\nimport axios from \"axios\";\n// Translations\nimport t from \"../../util/localization/localization\";\nimport { useSnackbar } from \"notistack\";\nimport TetLib from \"../../util/TetLib\";\n\n\nconst decodeHTML = (string) => {\n  const map = { gt: \">\" /* , … */ };\n  return string.replace(/&(#(?:x[0-9a-f]+|\\d+)|[a-z]+);?/gi, ($0, $1) => {\n    if ($1[0] === \"#\") {\n      return String.fromCharCode(\n        $1[1].toLowerCase() === \"x\"\n          ? parseInt($1.substr(2), 16)\n          : parseInt($1.substr(1), 10)\n      );\n    } else {\n      return map.hasOwnProperty($1) ? map[$1] : $0;\n    }\n  });\n};\nconst useButtonStyles = makeStyles({\n  root: {\n    border: 0,\n    borderRadius: \"1rem!important\",\n    marginTop: \"2vw\",\n    paddingBottom: 10,\n    display: \"block\",\n    cursor: \"pointer\",\n    position: \"relative\",\n    boxShadow: (theme) =>\n      theme === 1\n        ? \"0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23)!important\"\n        : \"0 3px 6px rgba(0,0,0,0.1), 0 3px 6px rgba(0,0,0,0.01)!important\",\n  },\n});\n\nconst generatePeriodColors = (stops, theme) => {\n  return [\n    [248, 255, 229],\n    [6, 214, 160],\n    [27, 154, 170],\n    [44, 66, 63],\n    [255, 196, 61],\n    [232, 93, 117],\n    [153, 95, 163],\n    [255, 74, 28],\n  ].splice(0, stops);\n\n};\n\nconst PeriodButton = (props) => {\n  const classes = useButtonStyles();\n  const {\n    theme,\n    period,\n    name,\n    zoom,\n    color,\n    timeStart,\n    timeEnd,\n    tSS,\n    tES,\n    duration,\n    nofill,\n    periodID,\n  } = props;\n  //% from 0 to 100\n  const { enqueueSnackbar } = useSnackbar();\n  let timePassed = 0;\n  //If we are past the end time, set time passed to 100%\n  if (nofill > 0) timePassed = 0;\n  else if (nofill < 0) timePassed = 100;\n  else if (Date.now() - timeEnd > 0) timePassed = 100;\n  //If we are in class, set time passed to (current-start)/(End-start) * 100\n  else if (Date.now() - timeStart > 0 && timeEnd - Date.now() > 0)\n    timePassed = ((Date.now() - timeStart) * 100) / (timeEnd - timeStart);\n  //If the class is upcoming, set time passed to 0\n  else timePassed = 0;\n  const [expanded, setExpanded] = React.useState(false);\n  const handleButtonClicked = () => {\n    if (zoom.length) setExpanded(!expanded);\n    else enqueueSnackbar(\"No Zoom Links found for this class!\");\n  };\n\n  const handleZoomLinkClicked = (event, link) => {\n    event.stopPropagation();\n    const newWindow = window.open(link, \"_blank\", \"noopener,noreferrer\");\n    if (newWindow) newWindow.opener = null;\n  };\n  let notDoneCol = color.filter((x) => true);\n\n  //Set to 40 for Darkmode\n  notDoneCol[2] = theme ? 76 : 90;\n  color[2] = theme ? 60 : 80;\n  if (periodID === \"break\") {\n    notDoneCol[2] = theme ? 1 : 100;\n    color[2] = theme ? 10 : 95;\n  }\n  return (\n    <div\n      style={{\n        marginBottom: \"2vh\",\n      }}\n    >\n      <Card\n        className={classes.root}\n        onClick={handleButtonClicked}\n        style={{\n          background: `linear-gradient(90deg, hsl(${color[0]},${color[1]}%,${color[2]\n            }%) 0%, hsl(${color[0]},${color[1]}%,${color[2]\n            }%) ${timePassed}%, hsl(${notDoneCol[0]},${notDoneCol[1]}%,${notDoneCol[2]\n            }%) ${timePassed + 0.000001}%, hsl(${notDoneCol[0]},${notDoneCol[1]\n            }%,${notDoneCol[2]}%) 100%)`,\n          borderRadius: \"0.1rem!important\",\n          padding: \"10px\",\n        }}\n      >\n        <Typography\n          variant=\"h5\"\n          align=\"left\"\n          style={{\n            marginLeft: \"4%\",\n            fontSize: window.innerWidth ** 0.4 + 32,\n            marginBottom: window.innerWidth <= 960 ? \"12%\" : \"6%\",\n            position: \"relative\",\n            marginTop: window.innerWidth <= 960 ? \"4%\" : \"2%\",\n            // left: \"5%\"\n          }}\n        >\n          {name}\n        </Typography>\n        {expanded ? null : (\n          <Typography\n            align=\"left\"\n            variant=\"h5\"\n            style={{\n              fontSize:\n                window.innerWidth <= 960\n                  ? window.innerWidth ** 0.3 + 10\n                  : window.innerWidth ** 0.4 + 10,\n              margin: 10,\n              marginBottom: 10,\n              marginTop: 0,\n              bottom: window.innerWidth <= 960 ? \"70%\" : \"1%\",\n              left: \"4%\",\n              bottom: \"10%\",\n              position: \"absolute\",\n              fontFamily: \"'Nunito'\",\n            }}\n          >\n            {t(\"schedule.minsFormatting\", {\n              period,\n              tSS,\n              tES,\n              mins: Math.round(duration / 60000),\n            })}\n          </Typography>\n        )}\n\n        <Collapse in={expanded}>\n          {React.Children.toArray(\n            zoom.map((z) => {\n              return (\n                <Button onClick={(e) => handleZoomLinkClicked(e, z.link)}>\n                  {z.title}\n                </Button>\n              );\n            })\n          )}\n        </Collapse>\n      </Card>\n    </div>\n  );\n};\n\nconst parsePeriods = (scheduleData, zoomLinkInfo, theme, offset) => {\n  let scheduleDay = moment(Date.now());\n  let ogHasOffset = offset;\n  if (offset)\n    offset = (scheduleDay.isoWeekday() - 1 + (((offset % 7) + 7) % 7)) % 7;\n  else offset = scheduleDay.isoWeekday() - 1;\n  let dotw = [\n    \"monday\",\n    \"tuesday\",\n    \"wednesday\",\n    \"thursday\",\n    \"friday\",\n    \"saturday\",\n    \"sunday\",\n  ][offset];\n  let allClasses = scheduleData.classes || {};\n  let classes = new Map();\n  let nameOverrides = JSON.parse(scheduleData.schedule.nameOverrides);\n  let convertedMoment = moment()\n    .tz(JSON.parse(scheduleData.schedule.schedule).timePeriod)\n    .utcOffset();\n  let currentMoment = moment().utcOffset();\n  if (zoomLinkInfo?.length)\n    zoomLinkInfo.forEach((x) => {\n      classes.set(x.course.id, x);\n    });\n  let today = JSON.parse(scheduleData.schedule.schedule)[dotw];\n  let colors = generatePeriodColors(today.length, theme);\n  return today\n    .map((x, i) => {\n      let courseInfo = classes.has(\n        allClasses[x.period] && allClasses[x.period].value\n      )\n        ? classes.get(allClasses[x.period] && allClasses[x.period].value)\n        : null;\n      // if (!(courseInfo) && x.period !== \"break\") return null;\n      return {\n        period: nameOverrides[x.period] || x.period,\n        periodID: x.period,\n        color: colors[i],\n        name:\n          courseInfo && courseInfo.course\n            ? courseInfo.course.course_title\n            : nameOverrides[x.period],\n        zoom:\n          courseInfo && courseInfo.links\n            ? courseInfo.links\n              .map((linkGroup) => {\n                return linkGroup.links.map((link) => {\n                  return { link: link, title: decodeHTML(linkGroup.title) };\n                });\n              })\n              .flat(10000)\n            : [],\n        timeStart:\n          moment(x.timeStart, \"hh:mma\")\n            .add((convertedMoment - currentMoment) / 60, \"hours\")\n            .unix() * 1000,\n        timeEnd:\n          moment(x.timeEnd, \"hh:mma\")\n            .add((convertedMoment - currentMoment) / 60, \"hours\")\n            .unix() * 1000,\n        tSS: x.timeStart,\n        tES: x.timeEnd,\n        duration: x.timeEnd - x.timeStart,\n        nofill: ogHasOffset,\n      };\n    })\n    .filter((x) => x);\n};\nlet done = false;\nconst fetchAndSet = async (setCourseInfo, setScheduleData, setCannotFetch) => {\n  try {\n    if (localStorage.getItem(\"cachedSchedule\"))\n      setScheduleData(JSON.parse(localStorage.getItem(\"cachedSchedule\")));\n    if (localStorage.getItem(\"cachedCourseInfo\"))\n      setCourseInfo(JSON.parse(localStorage.getItem(\"cachedCourseInfo\")));\n\n  } catch (error) {\n    console.trace(error);\n    setCannotFetch(true);\n  }\n};\nconst useForceUpdate = () => {\n  const set = useState(0)[1];\n  return () => set((s) => s + 1);\n};\nexport const Schedule = (props) => {\n  const {\n    UI: { theme },\n  } = props;\n  const dayOffset = props.dayOffset;\n  const forceUpdate = useForceUpdate();\n  useEffect(() => {\n    let run = true;\n    (async () => {\n      await TetLib.sleep(1000 - (Date.now() % 1000));\n      while (run) {\n        await TetLib.sleep(1000)\n        forceUpdate();\n      }\n    })();\n    return () => {\n      run = false;\n    }\n  }, [])\n  const [courseInfo, setCourseInfo] = useState(null);\n  const [scheduleData, setScheduleData] = useState(null);\n  const [fetching, setFetching] = useState(false);\n  const [cannotFetch, setCannotFetch] = useState(false);\n  if ((!scheduleData && !courseInfo) || (!scheduleData && localStorage.getItem(\"anonStorage\"))) {\n    if (!fetching) {\n      setFetching(true);\n      fetchAndSet(setCourseInfo, setScheduleData, setCannotFetch);\n      return null;\n    }\n    if (cannotFetch)\n      return (\n        <div>\n          <Typography>{t(\"schedule.linkSchoologyPrompt\")}</Typography>\n          <Button\n            variant=\"contained\"\n            onClick={(x) => {\n              linkUserSchoology();\n            }}\n          >\n            {t(\"schedule.linkSchoology\")}\n          </Button>\n        </div>\n      );\n    return (\n      <div>\n        <Typography>{t(\"schedule.fetching\")}</Typography>\n        <CircularProgress />\n      </div>\n    );\n  }\n  if (!scheduleData?.schedule)\n    return (\n      <div>\n        <Typography>{t(\"schedule.noSchedule\")}</Typography>\n      </div>\n    );\n  const periods = parsePeriods(scheduleData, courseInfo, theme, dayOffset);\n  return (\n    <Container style={{ marginBottom: \"50px\", width: \"100%\", padding: \"0px\" }}>\n      {React.Children.toArray(\n        periods.map((p) => {\n          return (\n            <PeriodButton\n              theme={theme}\n              period={p.period}\n              name={p.name}\n              zoom={p.zoom}\n              color={p.color}\n              timeStart={p.timeStart}\n              timeEnd={p.timeEnd}\n              tSS={p.tSS}\n              tES={p.tES}\n              duration={p.timeEnd - p.timeStart}\n              nofill={p.nofill}\n              periodID={p.periodID}\n            />\n          );\n        })\n      )}\n    </Container>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  UI: state.UI,\n});\n\nexport default connect(mapStateToProps)(Schedule);\n","export const getTimePhrase = () => {\n  try {\n    if (!localStorage.getItem(\"cachedSchedule\")) return \"\";\n    let scheduleOBJ = JSON.parse(localStorage.getItem(\"cachedSchedule\"));\n    let schedule = JSON.parse(scheduleOBJ.schedule.schedule);\n    let user = JSON.parse(localStorage.getItem(\"user\"));\n    let allClasses = scheduleOBJ.classes;\n    let convertedMoment = moment().tz(schedule.timePeriod).utcOffset();\n    let currentMoment = moment().utcOffset();\n    let currentTime = moment();\n    let getPeriodName = (periodID) => {\n      return (\n        JSON.parse(scheduleOBJ.schedule.nameOverrides)[periodID] || \"Break\"\n      );\n    };\n    let dotw = [\n      \"monday\",\n      \"tuesday\",\n      \"wednesday\",\n      \"thursday\",\n      \"friday\",\n      \"saturday\",\n      \"sunday\",\n    ][moment().isoWeekday() - 1];\n    let formattedClasses =\n      schedule[dotw] &&\n      schedule[dotw].map((clas) => {\n        return {\n          period: clas.period,\n          timeStart:\n            moment(clas.timeStart, \"hh:mma\")\n              .add((convertedMoment - currentMoment) / 60, \"hours\")\n              .unix() * 1000,\n          timeEnd:\n            moment(clas.timeEnd, \"hh:mma\")\n              .add((convertedMoment - currentMoment) / 60, \"hours\")\n              .unix() * 1000,\n        };\n      });\n    //Check for current class first\n    let currentClass = formattedClasses.filter(\n      (x) => x.timeStart < Date.now() && Date.now() < x.timeEnd\n    )[0];\n\n    if (currentClass) {\n      let endingInString = `${currentClass.timeEnd - Date.now() > 60000\n        ? currentClass.timeEnd - Date.now() > 3600000\n          ? `${Math.round(\n            moment.duration(currentClass.timeEnd - Date.now()).asHours()\n          )} hours`\n          : `${Math.round(\n            moment.duration(currentClass.timeEnd - Date.now()).asMinutes()\n          )} minutes`\n        : `${Math.round(\n          moment.duration(currentClass.timeEnd - Date.now()).asSeconds()\n        )} seconds`\n        }`;\n\n      //Try to push a notif if class is starting soon\n      if (\n        currentClass.timeEnd - Date.now() < 120 * 1000 &&\n        Date.now() - lastTimeBasedNotif > 240 * 1000\n      ) {\n        lastTimeBasedNotif = Date.now();\n\n        Notifications.pushNotification(\n          undefined,\n          undefined,\n          `${getPeriodName(currentClass.period)} is ending soon!`,\n          `Hey ${user?.firstName || \"\"}, ${getPeriodName(\n            currentClass.period\n          )} is about to end in ${endingInString}!`\n        );\n      }\n\n      return `${getPeriodName(\n        currentClass.period\n      )} ends in ${endingInString}`;\n    }\n    //Check for next upcoming class\n    let nextClass = formattedClasses.filter(\n      (x) => x.timeStart > Date.now()\n    )[0];\n\n    if (nextClass) {\n      let startingInString = `${nextClass.timeStart - Date.now() > 60000\n        ? nextClass.timeStart - Date.now() > 3600000\n          ? `${Math.round(\n            moment.duration(nextClass.timeStart - Date.now()).asHours()\n          )} hours`\n          : `${Math.round(\n            moment.duration(nextClass.timeStart - Date.now()).asMinutes()\n          )} minutes`\n        : `${Math.round(\n          moment.duration(nextClass.timeStart - Date.now()).asSeconds()\n        )} seconds`\n        }`;\n      if (\n        nextClass.timeStart - Date.now() < 120 * 1000 &&\n        Date.now() - lastTimeBasedNotif > 240 * 1000\n      ) {\n        lastTimeBasedNotif = Date.now();\n\n        Notifications.pushNotification(\n          undefined,\n          undefined,\n          `${getPeriodName(nextClass.period)} is starting soon!`,\n          `Hey ${user?.firstName || \"\"}, ${getPeriodName(\n            nextClass.period\n          )} is about to start in ${startingInString}!`\n        );\n      }\n\n      return `${getPeriodName(\n        nextClass.period\n      )} starts in ${startingInString}`;\n    }\n\n    //Check for what was the previous class\n    let lastClass = formattedClasses\n      .filter((x) => Date.now() > x.timeEnd)\n      .pop();\n    if (lastClass) {\n      let lastEnded = `${Date.now() - lastClass.timeEnd > 60000\n        ? Date.now() - lastClass.timeEnd > 60000\n          ? `${Math.round(\n            moment.duration(Date.now() - lastClass.timeEnd).asHours()\n          )} hours`\n          : `${Math.round(\n            moment.duration(Date.now() - lastClass.timeEnd).asMinutes()\n          )} minutes`\n        : `${Math.round(\n          moment.duration(Date.now() - lastClass.timeEnd).asSeconds()\n        )} seconds`\n        }`;\n      return `${getPeriodName(lastClass.period)} ended ${lastEnded} ago`;\n    }\n\n    //If no classes exist for the day\n    return `No classes today! Take a break, you deserve it :)`;\n  } catch (error) {\n    return \"\";\n  }\n}\nexport default getTimePhrase;","import { Component, useEffect, useState } from \"react\";\n\nimport { Card, IconButton, Typography } from \"@material-ui/core\";\nimport { ChevronLeft, ChevronRight } from \"@material-ui/icons\";\n\nimport moment from \"moment\";\n\nimport { connect } from \"react-redux\";\n\nimport { withSnackbar } from \"notistack\";\n\nimport Schedule from \"./Schedule\";\nimport Notifications from \"../../util/notifications\";\nimport { getWhenSchoolEnds } from \"../../util/getTimePhrase\";\nimport { getTimePhrase } from \"../../util/getScheduleTimePhrase\";\nimport TetLib from \"../../util/TetLib\";\nimport useForceUpdate from \"../../util/useForceUpdate\";\n\nconst CTime = (props) => {\n  const [fakeCurrentDate, setFakeCurrentDate] = useState(new Date()); // default value can be anything you want\n  return (\n    <div\n      style={{\n        verticalAlign: \"middle\",\n        width: \"100%\",\n        minWidth: \"100%\",\n      }}\n    >\n      <Typography\n        variant=\"h5\"\n        style={{\n          fontSize: \"5.5vw\",\n          textAlign: \"left\",\n        }}\n      >\n        {\n          /*moment().format(window.innerWidth <= 1368 ? \"M/D/YYYY h:mm:ss A\" : \"dddd MMMM Do h:mm:ss A\")*/ moment().format(\n          \"h:mm:ss A\"\n        )\n        }\n      </Typography>\n      <Typography\n        variant=\"h5\"\n        style={{\n          fontSize: \"2.5vw\",\n          textAlign: \"left\",\n        }}\n      >\n        {\n          /*moment().format(window.innerWidth <= 1368 ? \"M/D/YYYY h:mm:ss A\" : \"dddd MMMM Do h:mm:ss A\")*/ moment().format(\n          \"M/D/YYYY dddd\"\n        )\n        }\n      </Typography>\n    </div>\n  );\n};\nconst CTimeSmall = (props) => {\n  const [fakeCurrentDate, setFakeCurrentDate] = useState(new Date()); // default value can be anything you want\n  return (\n    <div\n      style={{\n        verticalAlign: \"middle\",\n        width: \"100%\",\n        minWidth: \"100%\",\n      }}\n    >\n\n      <Typography\n        variant=\"h5\"\n        style={{\n          fontSize: \"5.65vw\",\n          fontFamily: \"Nunito\"\n        }}\n      >\n        {\n          /*moment().format(window.innerWidth <= 1368 ? \"M/D/YYYY h:mm:ss A\" : \"dddd MMMM Do h:mm:ss A\")*/ moment().format(\n          \"dddd\"\n        )\n        }\n      </Typography>\n    </div>\n  );\n};\nlet lastTimeBasedNotif = 0;\nconst MobileSchedulePage = (props) => {\n  const forceUpdate = useForceUpdate();\n  const [offset, setOffset] = useState(0);\n  const goBackADay = () => {\n    setOffset(offset - 1);\n  };\n  const fastForwardADay = () => {\n    setOffset(offset + 1);\n  };\n  let adjustedMoment = moment().add(offset * 24, \"hours\");\n  useEffect(() => {\n    let run = true;\n    (async () => {\n      await TetLib.sleep(1000 - (Date.now() % 1000));\n      while (run) {\n        await TetLib.sleep(1000)\n        forceUpdate();\n      }\n    })();\n    return () => {\n      run = false;\n    }\n  }, [])\n  return (\n    <div\n      style={{\n        marginTop: \"5%\",\n      }}\n    >\n      <Card\n        style={{\n          padding: \"2%\",\n          paddingBottom: \"0%\",\n          margin: \"5%\",\n          /* max-height: 50vw!important; */\n          /* height: 50vw; */\n          width: \"90%\",\n\n          borderRadius: 5,\n          borderWidth: 0,\n          background: \"rgba(0,0,0,0)\",\n        }}\n      >\n        <div>\n          <span\n            style={{\n              display: \"inline-flex\",\n              alignItems: \"center\",\n            }}\n          >\n            <IconButton onClick={goBackADay}>\n              {\" \"}\n              <ChevronLeft />{\" \"}\n            </IconButton>{\" \"}\n            <Typography\n              style={{\n                fontFamily: \"Poppins\",\n                fontWeight: \"400\",\n                fontSize: \"24px\",\n              }}\n            >\n              {adjustedMoment.format(\"MM/DD/YYYY\")}\n            </Typography>\n            <IconButton onClick={fastForwardADay}>\n              {\" \"}\n              <ChevronRight />{\" \"}\n            </IconButton>\n          </span>\n          <CTimeSmall />\n          <Typography\n            variant=\"h5\"\n            style={{\n              fontSize: 32,\n              fontFamily: \"Nunito\",\n            }}\n          >\n            {getTimePhrase()}\n          </Typography>\n        </div>\n        <Schedule dayOffset={offset} />\n      </Card>\n    </div>\n  );\n}\n// class ScheduleInfo extends Component {\n//   constructor(p) {\n//     super(p);\n//     setTimeout(\n//       () => setInterval(() => this.forceUpdate(), 1000),\n//       1000 - (Date.now() % 1000)\n//     );\n//     this.state = {\n//       offset: 0,\n//     };\n//   }\n//   goBackADay(salf) {\n//     salf.setState({ offset: salf.state.offset - 1 });\n//   }\n//   fastForwardADay(salf) {\n//     salf.setState({ offset: salf.state.offset + 1 });\n//   }\n//   getTimePhrase() {\n//     try {\n//       if (!localStorage.getItem(\"cachedSchedule\")) return \"\";\n//       let scheduleOBJ = JSON.parse(localStorage.getItem(\"cachedSchedule\"));\n//       let schedule = JSON.parse(scheduleOBJ.schedule.schedule);\n//       let user = JSON.parse(localStorage.getItem(\"user\"));\n//       let allClasses = scheduleOBJ.classes;\n//       let convertedMoment = moment().tz(schedule.timePeriod).utcOffset();\n//       let currentMoment = moment().utcOffset();\n//       let currentTime = moment();\n//       let getPeriodName = (periodID) => {\n//         return (\n//           JSON.parse(scheduleOBJ.schedule.nameOverrides)[periodID] || \"Break\"\n//         );\n//       };\n//       let dotw = [\n//         \"monday\",\n//         \"tuesday\",\n//         \"wednesday\",\n//         \"thursday\",\n//         \"friday\",\n//         \"saturday\",\n//         \"sunday\",\n//       ][moment().isoWeekday() - 1];\n//       let formattedClasses =\n//         schedule[dotw] &&\n//         schedule[dotw].map((clas) => {\n//           return {\n//             period: clas.period,\n//             timeStart:\n//               moment(clas.timeStart, \"hh:mma\")\n//                 .add((convertedMoment - currentMoment) / 60, \"hours\")\n//                 .unix() * 1000,\n//             timeEnd:\n//               moment(clas.timeEnd, \"hh:mma\")\n//                 .add((convertedMoment - currentMoment) / 60, \"hours\")\n//                 .unix() * 1000,\n//           };\n//         });\n//       //Check for current class first\n//       let currentClass = formattedClasses.filter(\n//         (x) => x.timeStart < Date.now() && Date.now() < x.timeEnd\n//       )[0];\n\n//       if (currentClass) {\n//         let endingInString = `${currentClass.timeEnd - Date.now() > 60000\n//           ? currentClass.timeEnd - Date.now() > 3600000\n//             ? `${Math.round(\n//               moment.duration(currentClass.timeEnd - Date.now()).asHours()\n//             )} hours`\n//             : `${Math.round(\n//               moment.duration(currentClass.timeEnd - Date.now()).asMinutes()\n//             )} minutes`\n//           : `${Math.round(\n//             moment.duration(currentClass.timeEnd - Date.now()).asSeconds()\n//           )} seconds`\n//           }`;\n\n//         //Try to push a notif if class is starting soon\n//         if (\n//           currentClass.timeEnd - Date.now() < 120 * 1000 &&\n//           Date.now() - lastTimeBasedNotif > 240 * 1000\n//         ) {\n//           lastTimeBasedNotif = Date.now();\n\n//           Notifications.pushNotification(\n//             undefined,\n//             undefined,\n//             `${getPeriodName(currentClass.period)} is ending soon!`,\n//             `Hey ${user.firstName}, ${getPeriodName(\n//               currentClass.period\n//             )} is about to end in ${endingInString}!`\n//           );\n//         }\n\n//         return `${getPeriodName(\n//           currentClass.period\n//         )} ends in ${endingInString}`;\n//       }\n//       //Check for next upcoming class\n//       let nextClass = formattedClasses.filter(\n//         (x) => x.timeStart > Date.now()\n//       )[0];\n\n//       if (nextClass) {\n//         let startingInString = `${nextClass.timeStart - Date.now() > 60000\n//           ? nextClass.timeStart - Date.now() > 3600000\n//             ? `${Math.round(\n//               moment.duration(nextClass.timeStart - Date.now()).asHours()\n//             )} hours`\n//             : `${Math.round(\n//               moment.duration(nextClass.timeStart - Date.now()).asMinutes()\n//             )} minutes`\n//           : `${Math.round(\n//             moment.duration(nextClass.timeStart - Date.now()).asSeconds()\n//           )} seconds`\n//           }`;\n//         if (\n//           nextClass.timeStart - Date.now() < 120 * 1000 &&\n//           Date.now() - lastTimeBasedNotif > 240 * 1000\n//         ) {\n//           lastTimeBasedNotif = Date.now();\n\n//           Notifications.pushNotification(\n//             undefined,\n//             undefined,\n//             `${getPeriodName(nextClass.period)} is starting soon!`,\n//             `Hey ${user.firstName}, ${getPeriodName(\n//               nextClass.period\n//             )} is about to start in ${startingInString}!`\n//           );\n//         }\n\n//         return `${getPeriodName(\n//           nextClass.period\n//         )} starts in ${startingInString}`;\n//       }\n\n//       //Check for what was the previous class\n//       let lastClass = formattedClasses\n//         .filter((x) => Date.now() > x.timeEnd)\n//         .pop();\n//       if (lastClass) {\n//         let lastEnded = `${Date.now() - lastClass.timeEnd > 60000\n//           ? Date.now() - lastClass.timeEnd > 60000\n//             ? `${Math.round(\n//               moment.duration(Date.now() - lastClass.timeEnd).asHours()\n//             )} hours`\n//             : `${Math.round(\n//               moment.duration(Date.now() - lastClass.timeEnd).asMinutes()\n//             )} minutes`\n//           : `${Math.round(\n//             moment.duration(Date.now() - lastClass.timeEnd).asSeconds()\n//           )} seconds`\n//           }`;\n//         return `${getPeriodName(lastClass.period)} ended ${lastEnded} ago`;\n//       }\n\n//       //If no classes exist for the day\n//       return `No classes today! Take a break, you deserve it :)`;\n//     } catch (error) {\n//       return \"\";\n//     }\n//   }\n//   render() {\n//     let offset = this.state.offset;\n//     let adjustedMoment = moment().add(offset * 24, \"hours\");\n//     if (window.innerWidth <= 1000) {\n//       return (\n//         <div\n//           style={{\n//             marginTop: \"5%\",\n//           }}\n//         >\n//           <Card\n//             style={{\n//               padding: \"2%\",\n//               paddingBottom: \"0%\",\n//               margin: \"5%\",\n//               /* max-height: 50vw!important; */\n//               /* height: 50vw; */\n//               width: \"90%\",\n\n//               borderRadius: 5,\n//               borderWidth: 0,\n//               background: \"rgba(0,0,0,0)\",\n//             }}\n//           >\n//             <div>\n//               <span\n//                 style={{\n//                   display: \"inline-flex\",\n//                   alignItems: \"center\",\n//                 }}\n//               >\n//                 <IconButton onClick={(x) => this.goBackADay(this)}>\n//                   {\" \"}\n//                   <ChevronLeft />{\" \"}\n//                 </IconButton>{\" \"}\n//                 <Typography\n//                   style={{\n//                     fontFamily: \"Poppins\",\n//                     fontWeight: \"400\",\n//                     fontSize: \"24px\",\n//                   }}\n//                 >\n//                   {adjustedMoment.format(\"MM/DD/YYYY\")}\n//                 </Typography>\n//                 <IconButton onClick={(x) => this.fastForwardADay(this)}>\n//                   {\" \"}\n//                   <ChevronRight />{\" \"}\n//                 </IconButton>\n//               </span>\n//               <CTimeSmall />\n//               <Typography\n//                 variant=\"h5\"\n//                 style={{\n//                   fontSize: 32,\n//                   fontFamily: \"Nunito\",\n//                 }}\n//               >\n//                 {this.getTimePhrase()}\n//               </Typography>\n//             </div>\n//             <Schedule dayOffset={offset} />\n//           </Card>\n//         </div>\n//       );\n//     }\n//     return (\n//       <div\n//         style={{\n//           marginTop: \"5%\",\n//         }}\n//       >\n//         <Card\n//           style={{\n//             padding: \"2%\",\n//             paddingBottom: \"0%\",\n//             /* max-height: 50vw!important; */\n//             /* height: 50vw; */\n//             width: \"60%\",\n//             maxWidth: \"60%\",\n//             display: \"inline-block\",\n//             background: \"rgba(0,0,0,0)\",\n//             borderRadius: 10,\n//             borderWidth: 0,\n//           }}\n//         >\n//           <div\n//             style={{\n//               textAlign: \"left\",\n//             }}\n//           >\n//             <span\n//               style={{\n//                 display: \"inline-flex\",\n//                 alignItems: \"center\",\n//               }}\n//             >\n//               <IconButton onClick={(x) => this.goBackADay(this)}>\n//                 {\" \"}\n//                 <ChevronLeft />{\" \"}\n//               </IconButton>{\" \"}\n//               <Typography\n//                 style={{\n//                   fontFamily: \"Poppins\",\n//                   fontWeight: \"400\",\n//                   fontSize: \"32px\",\n//                 }}\n//               >\n//                 {adjustedMoment.format(\"dddd MMMM D\")}\n//               </Typography>\n//               <IconButton onClick={(x) => this.fastForwardADay(this)}>\n//                 {\" \"}\n//                 <ChevronRight />{\" \"}\n//               </IconButton>\n//             </span>\n//           </div>\n//           <Schedule dayOffset={offset} />\n//         </Card>\n//         <Card\n//           style={{\n//             display: \"inline-block\",\n//             verticalAlign: \"top\",\n//             width: \"30vw\",\n//             height: \"30vw\",\n//             marginLeft: \"2vw\",\n//             padding: \"2%\",\n//             position: \"relative\",\n//             background: \"rgba(0,0,0,0)\",\n//             borderRadius: \"1rem!important\",\n//             boxShadow: \"none\",\n//           }}\n//         />\n//         <Card\n//           style={{\n//             display: \"inline-flex\",\n//             verticalAlign: \"top\",\n//             width: \"30vw\",\n//             height: \"30vw\",\n//             marginLeft: \"2vw\",\n//             padding: \"2%\",\n//             position: \"fixed\",\n//             right: \"5%\",\n//             borderRadius: \"0.5rem\",\n//             boxShadow: \"4px 6px 5px 4px rgba(0,0,0,0.6)\",\n//           }}\n//         >\n//           <div\n//             style={{\n//               position: \"absolute\",\n//               top: \"50%\",\n//               left: \"50%\",\n//               transform: \"translate(-50%,-50%)\",\n//             }}\n//           >\n//             <CTime />\n//             <Typography\n//               variant=\"h5\"\n//               align=\"left\"\n//               style={{\n//                 fontSize: \"2vw\",\n//               }}\n//             >\n//               {this.getTimePhrase()}\n//             </Typography>\n//           </div>\n//         </Card>\n//       </div>\n//     );\n//   }\n// }\nexport default connect()(withSnackbar(MobileSchedulePage));\n","import { useEffect, useState } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport DesktopSchedulePage from \"../components/Calendar/DesktopSchedule\";\nimport MobileSchedulePage from \"../components/Calendar/MobileSchedule\";\nimport TetLib from \"../util/TetLib\";\nimport useForceUpdate from \"../util/useForceUpdate\";\nimport t from \"../util/localization/localization\";\nimport { updateSchedule } from \"../redux/actions/dataActions\";\nimport store from \"../redux/store\";\nconst Schedule = (props) => {\n  const forceUpdate = useForceUpdate();\n  useEffect(() => {\n    let run = true;\n    window.addEventListener(\"resize\", forceUpdate);\n    return () => {\n      window.removeEventListener(\"resize\", forceUpdate);\n    };\n  }, []);\n  const [schedule, setSchedule] = useState(JSON.parse(localStorage.cachedSchedule || \"null\"));\n  useEffect(() => {\n    (async () => {\n      localStorage.removeItem(\"cachedSchedule\");\n      store.dispatch(updateSchedule());\n      while (!localStorage.cachedSchedule) await TetLib.sleep(100);\n      setSchedule(JSON.parse(localStorage.cachedSchedule));\n    })();\n  }, []);\n\n  if (!schedule) return null;\n\n  if (window.innerWidth >= 1100) {\n    return <DesktopSchedulePage schedule={schedule} />;\n  } else {\n    return <MobileSchedulePage schedule={schedule} />;\n  }\n};\nconst mapActionsToProps = {\n  updateSchedule\n};\nexport default connect()(Schedule);\n"],"sourceRoot":""}