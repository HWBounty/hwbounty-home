{"version":3,"sources":["redux/actions/moduleActions.js","components/Modules/Calculator/History.js","util/latex/preprocessMathQuill.js","components/Modules/Calculator/CalcTools.js","components/Modules/Calculator/Calculator.js","components/Modules/Calculator/CalcSettings.js","components/Modules/Calculator/CalculatorModule.js","pages/modules.js"],"names":["calc_setInput","latex","dispatch","type","CALC_SET_INPUT","payload","connect","state","module","props","history","calculator","HistoryButton","ans","ListItem","button","onClick","style","flex","cursor","Typography","List","React","Children","toArray","map","x","Divider","mathquillToMathJS","fromMQ","noBraceSub","convertSubscript","fracToDivision","tex","mathjs","reduce","acc","r","str","find","replaceWith","replace","RegExp","escapeRegExp","expr","subStart","indexOf","numStart","length","closingBrace","slice","frac","fracStart","divIdx","startIdx","braces","openingBrace","undefined","Error","stack","j","findClosingBrace","useStyles","makeStyles","numPadRoot","symbolPadRoot","SymbolButton","symbol","classes","Button","className","variant","NumPad","NumRow","arr","Grid","container","item","spacing","wrap","num","disabled","direction","SymbolPad","obj","addStyles","LatexInput","onChange","onSubmit","mathquillDidMount","height","fontSize","config","autoCommands","autoOperatorNames","handlers","enter","calc_addHistory","CALC_ADD_HISTORY","withStyles","theme","spreadIt","symbolPadGrid","paddingTop","parser","input","useState","answer","setAnswer","error","setError","mathField","useRef","useEffect","current","console","log","Paper","paper","rootPadding","InputBase","inputComponent","inputProps","val","evaluate","err","value","fullWidth","xs","write","focus","cmd","color","calc_addVariable","variable","CALC_ADD_VARIABLE","calc_removeVariable","CALC_REMOVE_VARIABLE","VariableField","variables","name","startVal","setDisabled","setValue","inputRef","select","handleSubmit","event","preventDefault","set","TextField","placeholder","target","onBlur","math","number","precision","root","margin","marginLeft","marginRight","marginTop","paddingLeft","paddingRight","minHeight"],"mappings":"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","file":"static/js/17.5506e8ae.chunk.js","sourcesContent":["import {\n  CALC_ADD_HISTORY,\n  CALC_SET_INPUT,\n  CALC_ADD_VARIABLE,\n  CALC_REMOVE_VARIABLE,\n} from \"../types\";\n\nexport const calc_addHistory = (latex) => (dispatch) => {\n  dispatch({ type: CALC_ADD_HISTORY, payload: latex });\n};\n\nexport const calc_setInput = (latex) => (dispatch) => {\n  dispatch({ type: CALC_SET_INPUT, payload: latex });\n};\nexport const calc_addVariable = (variable) => (dispatch) => {\n  dispatch({ type: CALC_ADD_VARIABLE, payload: variable });\n};\nexport const calc_removeVariable = (variable) => (dispatch) => {\n  dispatch({ type: CALC_REMOVE_VARIABLE, payload: variable });\n};\n","// React\nimport React, { useState } from \"react\";\n\n// MUI\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Typography from \"@material-ui/core/Typography\";\n\n// Redux\nimport { connect } from \"react-redux\";\nimport { calc_setInput } from \"../../../redux/actions/moduleActions\";\n\n// Math\nimport { StaticMathField } from \"react-mathquill\";\n\nexport const History = (props) => {\n  const {\n    module: {\n      calculator: { history },\n    },\n    calc_setInput,\n  } = props;\n\n  const HistoryButton = (props) => {\n    const { latex, ans } = props;\n    return (\n      <ListItem button onClick={() => calc_setInput(latex)}>\n        <StaticMathField style={{ flex: 1, cursor: \"pointer\" }}>{latex}</StaticMathField>\n        <Typography>= {ans}</Typography>\n      </ListItem>\n    );\n  };\n\n  return (\n    <div>\n      <List>\n        {React.Children.toArray(\n          history.map((x) => (\n            <>\n              <Divider />\n              <HistoryButton latex={x.latex} ans={x.ans} />\n            </>\n          ))\n        )}\n      </List>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  module: state.module,\n});\n\nexport default connect(mapStateToProps, { calc_setInput })(History);\n","/**\n * Thank you ChristopherChudzicki for this code! (copy-paste)\n *\n * Makes a series of replacements on MathQuill-generated LaTeX strings so that\n * they can be parsed by MathJS.\n *\n * Notes:\n *  1. This is pretty heuristic. Might discover updates needed.\n *  2. Much of this could be used to preprocess LaTeX generated by other means\n * (i.e., not MathQuill.) The main bit that is MathQuill-specific is probably\n * the operatorname replacements.\n *\n * @param  {string} fromMQ a MathQuill-generated LaTeX expression\n * @return {string} the input expression with LaTeX commands converted to mathjs\n */\nexport default function mathquillToMathJS(fromMQ) {\n  const replacements = [\n    { tex: \"\\\\operatorname{diff}\", mathjs: \"diff\" },\n    { tex: \"\\\\operatorname{pdiff}\", mathjs: \"pdiff\" },\n    { tex: \"\\\\operatorname{curl}\", mathjs: \"curl\" },\n    { tex: \"\\\\operatorname{div}\", mathjs: \"div\" },\n    { tex: \"\\\\operatorname{norm}\", mathjs: \"norm\" },\n    { tex: \"\\\\operatorname{mod}\", mathjs: \"mod\" },\n    { tex: \"\\\\operatorname{abs}\", mathjs: \"abs\" },\n    { tex: \"\\\\operatorname{unitT}\", mathjs: \"unitT\" },\n    { tex: \"\\\\operatorname{unitN}\", mathjs: \"unitN\" },\n    { tex: \"\\\\operatorname{unitB}\", mathjs: \"unitB\" },\n    { tex: \"\\\\operatorname{arccosh}\", mathjs: \"arccosh\" },\n    { tex: \"\\\\operatorname{arcsinh}\", mathjs: \"arcsinh\" },\n    { tex: \"\\\\operatorname{arctanh}\", mathjs: \"arctanh\" },\n    { tex: \"\\\\cdot\", mathjs: \" * \" },\n    { tex: \"\\\\left\", mathjs: \"\" },\n    { tex: \"\\\\right\", mathjs: \"\" },\n    { tex: \"{\", mathjs: \"(\" },\n    { tex: \"}\", mathjs: \")\" },\n    { tex: \"~\", mathjs: \" \" },\n    { tex: \"\\\\\", mathjs: \" \" },\n  ];\n\n  // remove fractions, then apply replacements\n  const noFrac = fracToDivision(fromMQ);\n  const noBraceSub = convertSubscript(noFrac);\n  return replacements.reduce(\n    (acc, r) => replaceAll(acc, r[\"tex\"], r[\"mathjs\"]),\n    noBraceSub\n  );\n}\n\n/**\n * Recursively removes braces from LaTeX subscripts\n *   - example: x_{12foo_{bar123_{evenlower}}} --> x_12foo_bar123_evenlower\n */\nexport function convertSubscript(expr) {\n  const sub = \"_{\";\n  const subStart = expr.indexOf(sub);\n\n  if (subStart < 0) {\n    return expr;\n  }\n\n  const numStart = subStart + sub.length;\n  const closingBrace = expr.indexOf(\"}\", numStart);\n  const newExpr =\n    expr.slice(0, subStart) +\n    \"_\" +\n    expr.slice(numStart, closingBrace) +\n    expr.slice(closingBrace + 1);\n\n  return convertSubscript(newExpr);\n}\n\n/**\n * Recursively replaces LaTeX fractions with normal divison\n *   - example: \\frac{a}{1 + \\frac{b}{c}} --> {a}/{1 + {b}/{c}}\n */\nexport function fracToDivision(expr) {\n  const frac = \"\\\\frac\";\n  const fracStart = expr.indexOf(frac);\n  const numStart = fracStart + frac.length;\n\n  if (fracStart < 0) {\n    return expr;\n  }\n\n  const divIdx = findClosingBrace(expr, numStart);\n  // Remove frac, and add \"/\"\n  const newExpr =\n    expr.slice(0, fracStart) +\n    expr.slice(numStart, divIdx + 1) +\n    \"/\" +\n    expr.slice(divIdx + 1);\n\n  return fracToDivision(newExpr);\n}\n\nexport function capitalize(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n}\n\nexport function escapeRegExp(str) {\n  // from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#Using_Special_Characters\n  // $& means the whole matched string\n  return str.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n}\n\nexport function replaceAll(str, find, replaceWith) {\n  // from https://stackoverflow.com/a/1144788/2747370\n  return str.replace(new RegExp(escapeRegExp(find), \"g\"), replaceWith);\n}\n\nexport function findClosingBrace(str, startIdx) {\n  const braces = {\n    \"[\": \"]\",\n    \"<\": \">\",\n    \"(\": \")\",\n    \"{\": \"}\",\n  };\n\n  const openingBrace = str[startIdx];\n\n  const closingBrace = braces[openingBrace];\n\n  if (closingBrace === undefined) {\n    throw Error(\n      `${str} does not contain an opening brace at position ${startIdx}.`\n    );\n  }\n\n  let stack = 1;\n\n  // eslint-disable-next-line no-plusplus\n  for (let j = startIdx + 1; j < str.length; j++) {\n    if (str[j] === openingBrace) {\n      stack += +1;\n    } else if (str[j] === closingBrace) {\n      stack += -1;\n    }\n    if (stack === 0) {\n      return j;\n    }\n  }\n\n  // stack !== 0\n  throw Error(\n    `${str} has a brace that opens at position ${startIdx} but does not close.`\n  );\n}\n","// React\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// MUI\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nconst useStyles = makeStyles({\n  numPadRoot: {},\n  symbolPadRoot: {},\n  button: {\n    //flex: 1,\n  },\n});\n\nconst SymbolButton = ({ onClick, latex, symbol }) => {\n  const classes = useStyles();\n  return (\n    <Button\n      className={classes.button}\n      variant=\"contained\"\n      onClick={() => onClick(latex)}\n    >\n      {symbol}\n    </Button>\n  );\n};\n\nexport const NumPad = (props) => {\n  const classes = useStyles();\n  const { onClick } = props;\n\n  const NumRow = ({ arr }) => {\n    return (\n      <Grid container item spacing={1} wrap=\"nowrap\">\n        {React.Children.toArray(\n          arr.map((num) => (\n            <Grid item>\n              {num !== null ? (\n                <SymbolButton onClick={onClick} latex={num} symbol={num} />\n              ) : (\n                <Button className={classes.button} disabled />\n              )}\n            </Grid>\n          ))\n        )}\n      </Grid>\n    );\n  };\n  return (\n    <Grid container spacing={1} wrap=\"nowrap\" direction=\"column\">\n      <NumRow arr={[1, 2, 3]} />\n      <NumRow arr={[4, 5, 6]} />\n      <NumRow arr={[7, 8, 9]} />\n      <NumRow arr={[null, 0, \".\"]} />\n    </Grid>\n  );\n};\n\nexport const SymbolPad = (props) => {\n  const { onClick } = props;\n  const symbols = [\n    { symbol: \"+\", latex: \"+\" },\n    { symbol: \"-\", latex: \"-\" },\n    { symbol: \"*\", latex: \"cdot\" },\n    { symbol: \"/\", latex: \"frac\" },\n    { symbol: \"√\", latex: \"sqrt\" },\n    { symbol: \"^\", latex: \"^\" },\n  ];\n\n  return (\n    <div>\n      <Grid container spacing={1}>\n        <Grid container item spacing={1}>\n          {React.Children.toArray(\n            symbols.map((obj) => {\n              return (\n                <Grid item>\n                  <SymbolButton\n                    onClick={onClick}\n                    latex={obj.latex}\n                    symbol={obj.symbol}\n                  />\n                </Grid>\n              );\n            })\n          )}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nNumPad.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nSymbolPad.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","// React\nimport React, { useState, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\n\n// MUI\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\n// Redux\nimport { connect } from \"react-redux\";\nimport {\n  calc_addHistory,\n  calc_setInput,\n} from \"../../../redux/actions/moduleActions\";\n\n// Components\nimport History from \"./History\";\n\n// Math related\nimport mathquillToMathJS from \"../../../util/latex/preprocessMathQuill\";\nimport { addStyles, EditableMathField, StaticMathField } from \"react-mathquill\";\nimport { NumPad, SymbolPad } from \"./CalcTools\";\n\n// required for latex to format correctly\naddStyles();\n\nconst styles = (theme) => ({\n  ...theme.spreadIt,\n  symbolPadGrid: {\n    paddingTop: 15,\n  },\n});\n\nconst LatexInput = (props) => {\n  const { onChange, onSubmit, mathquillDidMount } = props;\n\n  return (\n    <EditableMathField\n      latex=\"\"\n      style={{ height: \"auto\", fontSize: 50, flex: 1 }}\n      config={{\n        autoCommands: \"pi theta sqrt sum\",\n        autoOperatorNames:\n          \"sin cos tan feet ft inches in miles cm sech arcsec arsinh to rad deg radians degrees\",\n        handlers: {\n          enter: onSubmit,\n        },\n      }}\n      onChange={onChange}\n      mathquillDidMount={mathquillDidMount}\n    />\n  );\n};\n\nexport const Calculator = (props) => {\n  const {\n    classes,\n    parser,\n    module: {\n      calculator: { input },\n    },\n    calc_addHistory,\n  } = props;\n\n  const [answer, setAnswer] = useState(\"\");\n  const [error, setError] = useState(false);\n\n  const mathField = useRef(null);\n\n  useEffect(() => {\n    try {\n      mathField.current.latex(input ? input : \"\");\n    } catch {\n      console.log(\"Expression invalid\");\n    }\n  }, [input]);\n\n  const handleSubmit = (val) => {\n    try {\n      // const ans = CalculatorBackend.self.solveEquation(\n      //   mathquillToMathJS(val.latex())\n      // );\n      let ans = parser.evaluate(mathquillToMathJS(val.latex()));\n      setAnswer(`${ans}`);\n      setError(false);\n      calc_addHistory({ latex: val.latex(), ans: `${ans}` });\n    } catch (err) {\n      console.log(err);\n      setAnswer(\"ERROR!!!!\");\n      setError(true);\n    }\n  };\n\n  const handleMathquillMount = (val) => {\n    mathField.current = val;\n  };\n\n  const handleChange = (val) => {\n    calc_setInput(`${val.latex()}`);\n  };\n\n  const handleNumberPressed = (num) => {\n    mathField.current.write(num);\n    mathField.current.focus();\n  };\n\n  const handleSymbolPressed = (symbol) => {\n    mathField.current.cmd(symbol);\n    mathField.current.focus();\n  };\n\n  return (\n    <Paper className={classes.paper}>\n      <div className={classes.rootPadding}>\n        <History />\n        <InputBase\n          inputComponent={LatexInput}\n          inputProps={{\n            onSubmit: handleSubmit,\n            onChange: handleChange,\n            mathquillDidMount: handleMathquillMount,\n          }}\n          /*className={classes.input}*/\n          value=\"\"\n          fullWidth\n        ></InputBase>\n        <Grid container spacing={2} className={classes.symbolPadGrid}>\n          <Grid item xs>\n            <NumPad onClick={handleNumberPressed} />\n          </Grid>\n          <Grid item xs>\n            <SymbolPad onClick={handleSymbolPressed} />\n          </Grid>\n        </Grid>\n        <Typography color={error ? \"error\" : \"initial\"}>{answer}</Typography>\n      </div>\n    </Paper>\n  );\n};\n\nCalculator.propTypes = {\n  parser: PropTypes.any.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  module: state.module,\n});\n\nexport default connect(mapStateToProps, { calc_addHistory, calc_setInput })(\n  withStyles(styles)(Calculator)\n);\n","// React\nimport { useState, useEffect, useRef } from \"react\";\n\n// MUI\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\n// Redux\nimport { connect } from \"react-redux\";\nimport {\n  calc_addVariable,\n  calc_removeVariable,\n} from \"../../../redux/actions/moduleActions\";\n\nconst styles = (theme) => ({\n  ...theme.spreadIt,\n  paper: {\n    ...theme.spreadIt.paper,\n    height: \"100%\",\n  },\n});\n\nexport const CalcSettings = (props) => {\n  const {\n    classes,\n    parser,\n    module: {\n      calculator: { variables },\n    },\n    calc_addVariable,\n    calc_removeVariable,\n  } = props;\n\n  const VariableField = (props) => {\n    const { name, startVal } = props;\n\n    const [disabled, setDisabled] = useState(true);\n    const [value, setValue] = useState(startVal);\n\n    const inputRef = useRef(null);\n\n    useEffect(() => {\n      if (disabled) return;\n      inputRef.current.focus();\n      inputRef.current.select();\n    }, [disabled]);\n\n    const handleSubmit = (event) => {\n      event.preventDefault();\n      setDisabled(true);\n      try {\n        parser.set(name, value);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    const handleClicked = () => {\n      setDisabled(false);\n    };\n\n    const handleVariableChange = (event) => {\n      // change var given name and new val\n      setValue(event.target.value);\n    };\n\n    return (\n      <Button onClick={handleClicked}>\n        <Typography variant=\"body1\">{name}</Typography>\n        <Typography variant=\"body1\">=</Typography>\n        <form onSubmit={handleSubmit}>\n          <TextField\n            variant=\"outlined\"\n            disabled={disabled}\n            placeholder={value}\n            value={value}\n            inputRef={inputRef}\n            onChange={handleVariableChange}\n            onBlur={handleSubmit}\n          />\n        </form>\n      </Button>\n    );\n  };\n\n  return (\n    <Paper className={classes.paper}>\n      <div>hiiiiiiii</div>\n      <VariableField name=\"x\" startVal=\"1023012\" />\n    </Paper>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  module: state.module,\n});\n\nexport default connect(mapStateToProps, {\n  calc_addVariable,\n  calc_removeVariable,\n})(withStyles(styles)(CalcSettings));\n","// React\nimport React, { useState, useEffect, useRef } from \"react\";\n\n// MUI\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\n// Components\nimport Calculator from \"./Calculator\";\nimport CalcSettings from \"./CalcSettings\";\n\n// Math related\nimport mathquillToMathJS from \"../../../util/latex/preprocessMathQuill\";\nimport { addStyles, EditableMathField, StaticMathField } from \"react-mathquill\";\nimport * as math from \"mathjs\";\nimport { NumPad, SymbolPad } from \"./CalcTools\";\n\nconst maths = math.create(math.all, {\n  number: \"BigNumber\",\n  precision: 2,\n});\nconst parser = maths.parser();\n\nconst styles = (theme) => ({\n  ...theme.spreadIt,\n  root: {\n    margin: \"auto\",\n  },\n});\n\nexport const CalculatorModule = (props) => {\n  const { classes } = props;\n\n  return (\n    <Grid container spacing={2} className={classes.root}>\n      <Grid item xs={8}>\n        <Paper className={classes.paper}>\n          <Calculator parser={parser} />\n        </Paper>\n      </Grid>\n      <Grid item xs={4}>\n        <CalcSettings parser={parser} />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(CalculatorModule);\n","// React\n\nimport { Paper } from \"@material-ui/core\";\nimport CalculatorModule from \"../components/Modules/Calculator/CalculatorModule\";\n\n// MUI Stuff\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\nconst styles = (theme) => ({\n  ...theme.spreadIt,\n  root: {\n    marginLeft: 100, // temporary until john fixes his stuff\n    marginRight: 30,\n    marginTop: 50,\n    paddingLeft: 50,\n    paddingRight: 50,\n    paddingTop: 30,\n    minHeight: \"90%\",\n  },\n});\n\nconst Modules = (props) => {\n  const { classes } = props;\n  return (\n    <div className={classes.root}>\n      <CalculatorModule />\n    </div>\n  );\n};\n\nexport default withStyles(styles)(Modules);\n"],"sourceRoot":""}