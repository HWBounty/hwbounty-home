{"version":3,"sources":["pages/newSignup.js"],"names":["sleep","delay","Promise","resolve","setTimeout","SignUpPage","props","state","firstNameError","lastNameError","usernameError","emailError","passwordError","cPasswordError","loading","emailVerif","self","setState","firstName","document","getElementById","value","lastName","username","email","password","cpassword","test","length","match","processReady","a","axios","get","hwbountyAPI","data","post","signupRes","status","localStorage","getItem","this","history","push","style","paddingLeft","window","innerWidth","paddingRight","open","autoHideDuration","severity","src","UI","theme","height","variant","fontSize","autoComplete","marginBottom","required","error","id","label","margin","width","helperText","onChange","x","onTextChange","type","disabled","onClick","signup","size","Component","connect","withRouter"],"mappings":"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","file":"static/js/20.8b000a98.chunk.js","sourcesContent":["import {\n  Button,\n  Card,\n  CircularProgress,\n  Container,\n  Snackbar,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport axios from \"axios\";\nimport { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router\";\nimport { hwbountyAPI } from \"../redux/types\";\nconst sleep = (delay) => new Promise((resolve) => setTimeout(resolve, delay));\nclass SignUpPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstNameError: \"\",\n      lastNameError: \"\",\n      usernameError: \"\",\n      emailError: \"\",\n      passwordError: \"\",\n      cPasswordError: \"\",\n      loading: false,\n      emailVerif: false,\n    };\n  }\n  componentDidMount() { }\n  signup(self) {\n    self.setState({ loading: true });\n    let firstName = document.getElementById(\"firstName\").value;\n    let lastName = document.getElementById(\"lastName\").value;\n    let username = document.getElementById(\"username\").value;\n    let email = document.getElementById(\"email\").value;\n    let password = document.getElementById(\"password\").value;\n    let cpassword = document.getElementById(\"cpassword\").value;\n    if (!firstName)\n      self.setState({ firstNameError: \"This field is required!\" });\n    if (!lastName) self.setState({ lastNameError: \"This field is required!\" });\n    if (!username) self.setState({ usernameError: \"This field is required!\" });\n    if (!email) self.setState({ emailError: \"This field is required!\" });\n    if (!password)\n      return self.setState({ passwordError: \"This field is required!\" });\n    if (password !== cpassword)\n      self.setState({\n        passwordError: \"Passwords do not match!\",\n        cPasswordError: \"Passwords do not match!\",\n      });\n    if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email))\n      self.setState({ emailError: \"Invalid Email!\" });\n    if (username.length < 3)\n      self.setState({\n        usernameError: \"Username must be 3 or more characters long!\",\n      });\n    if (!username.match(/^[a-zA-Z0-9_]*$/))\n      self.setState({ usernameError: \"Username must be alphanumeric\" });\n    //Check if usernameTaken\n    //-1 = Failed, 0 = pending, 1 = checks passed\n    let processReady = 0;\n    (async () => {\n      let res = await axios.get(`${hwbountyAPI}/usernameTaken/${username}`);\n      if (res.data) {\n        self.setState({ usernameError: \"This username already exists!\" });\n        processReady = -1;\n      } else {\n        processReady++;\n      }\n    })();\n    (async () => {\n      let res = await axios.get(`${hwbountyAPI}/emailTaken/${email}`);\n      if (res.data) {\n        self.setState({ emailError: \"This is already in use!\" });\n        processReady = -1;\n      } else {\n        processReady++;\n      }\n    })();\n    (async () => {\n      while (processReady === 0 || processReady === 1) await sleep(10);\n      if (processReady === -1) return self.setState({ loading: false });\n      //Process signup;\n      let signupRes = await axios.post(`${hwbountyAPI}/signup`, {\n        email: email,\n        firstName: firstName,\n        lastName: lastName,\n        username: username,\n        password: password,\n      });\n      if (signupRes.status === 200 && signupRes.data)\n        self.setState({ emailVerif: true, loading: false });\n    })();\n  }\n  onTextChange(self) {\n    self.setState({\n      firstNameError: \"\",\n      lastNameError: \"\",\n      usernameError: \"\",\n      emailError: \"\",\n      passwordError: \"\",\n      cPasswordError: \"\",\n    });\n  }\n  render() {\n    if (localStorage.getItem(\"DBIdToken\")) this.props.history.push(\"/\");\n    return (\n      <Container\n        style={{\n          paddingLeft: window.innerWidth <= 960 ? \"0vw\" : \"20vw\",\n          paddingRight: window.innerWidth <= 960 ? \"0vw\" : \"20vw\",\n        }}\n      >\n        <Snackbar open={this.state.emailVerif} autoHideDuration={10000}>\n          <Alert severity=\"success\">\n            We have successfully recieved your signup! Please check your email\n            for the next steps!\n          </Alert>\n        </Snackbar>\n        <Card>\n          <img\n            src={\n              this.props.UI.theme\n                ? \"https://cdn.discordapp.com/attachments/836672960566919228/836863806905778186/logo_min_white.png\"\n                : \"https://cdn.discordapp.com/attachments/806706215693975552/832762321214111765/logo_min.png\"\n            }\n            height=\"100\"\n          ></img>\n          <Typography\n            variant=\"h5\"\n            style={{\n              fontSize: \"3vw\",\n            }}\n          >\n            Registration Form\n          </Typography>\n          <form autoComplete=\"off\">\n            <div style={{ marginBottom: 10 }}>\n              <TextField\n                required\n                error={this.state.firstNameError}\n                id=\"firstName\"\n                label=\"First Name\"\n                variant=\"outlined\"\n                style={{\n                  margin: 5,\n                  width: 200,\n                }}\n                helperText={this.state.firstNameError}\n                onChange={(x) => this.onTextChange(this)}\n              />\n              <TextField\n                required\n                id=\"lastName\"\n                error={this.state.lastNameError}\n                label=\"Last Name\"\n                variant=\"outlined\"\n                style={{\n                  margin: 5,\n                  width: 200,\n                }}\n                helperText={this.state.lastNameError}\n                onChange={(x) => this.onTextChange(this)}\n              />\n            </div>\n            <div style={{ marginBottom: 5 }}>\n              <TextField\n                required\n                id=\"username\"\n                error={this.state.usernameError}\n                label=\"Username\"\n                variant=\"outlined\"\n                style={{\n                  margin: 5,\n                  width: 410,\n                }}\n                helperText={this.state.usernameError}\n                onChange={(x) => this.onTextChange(this)}\n              />\n            </div>\n            <div style={{ marginBottom: 10 }}>\n              <TextField\n                required\n                id=\"email\"\n                error={this.state.emailError}\n                label=\"Email\"\n                variant=\"outlined\"\n                style={{\n                  margin: 5,\n                  width: 410,\n                }}\n                helperText={this.state.emailError}\n                onChange={(x) => this.onTextChange(this)}\n              />\n            </div>\n            <div>\n              <TextField\n                required\n                id=\"password\"\n                error={this.state.passwordError}\n                label=\"Password\"\n                variant=\"outlined\"\n                type=\"password\"\n                style={{\n                  margin: 5,\n                  width: 200,\n                }}\n                helperText={this.state.passwordError}\n                onChange={(x) => this.onTextChange(this)}\n              />\n              <TextField\n                required\n                id=\"cpassword\"\n                error={this.state.cPasswordError}\n                label=\"Confirm Password\"\n                variant=\"outlined\"\n                type=\"password\"\n                style={{\n                  margin: 5,\n                  width: 200,\n                }}\n                helperText={this.state.cPasswordError}\n                onChange={(x) => this.onTextChange(this)}\n              />\n            </div>\n          </form>\n          <Button\n            disabled={this.state.loading}\n            style={{\n              margin: 40,\n              fontSize: 16,\n            }}\n            variant=\"outlined\"\n            onClick={(x) => this.signup(this)}\n          >\n            {\" \"}\n            {this.state.loading ? <CircularProgress size=\"28px\" /> : \"Sign Up\"}\n          </Button>\n        </Card>\n      </Container>\n    );\n  }\n}\nexport default connect((state) => ({ UI: state.UI }))(withRouter(SignUpPage));\n"],"sourceRoot":""}