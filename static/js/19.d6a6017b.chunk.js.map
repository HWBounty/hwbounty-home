{"version":3,"sources":["../node_modules/@material-ui/core/esm/Card/Card.js","pages/profile.js"],"names":["Card","React","props","ref","classes","className","_props$raised","raised","other","_objectWithoutProperties","Paper","_extends","clsx","root","elevation","withStyles","overflow","name","useStyles","makeStyles","width","marginLeft","childCard","maxWidth","display","Profile","userID","useParams","useState","userData","setUserData","loading","setLoading","useEffect","axios","get","hwbountyAPI","then","res","data","catch","err","console","trace","src","pfp","t"],"mappings":"uHAAA,uDAaIA,EAAoBC,cAAiB,SAAcC,EAAOC,GAC5D,IAAIC,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBC,EAAgBJ,EAAMK,OACtBA,OAA2B,IAAlBD,GAAmCA,EAC5CE,EAAQC,YAAyBP,EAAO,CAAC,UAAW,YAAa,WAErE,OAAoBD,gBAAoBS,IAAOC,YAAS,CACtDN,UAAWO,YAAKR,EAAQS,KAAMR,GAC9BS,UAAWP,EAAS,EAAI,EACxBJ,IAAKA,GACJK,OA6BUO,gBA9CK,CAElBF,KAAM,CACJG,SAAU,WA2CoB,CAChCC,KAAM,WADOF,CAEZf,I,8ICtCGkB,EAAYC,IAAW,CAC3BN,KAAM,CACJO,MAAO,OACPC,WAAY,QAEdC,UAAW,CACTC,SAAU,MACVC,QAAS,UAuCEC,UAnCC,SAACvB,GACf,IAAME,EAAUc,IACRQ,EAAWC,cAAXD,OAFiB,EAIOE,mBAAS,MAJhB,mBAIlBC,EAJkB,KAIRC,EAJQ,OAKKF,oBAAS,GALd,mBAKlBG,EALkB,KAKTC,EALS,KAqBzB,OAdAC,qBAAU,WACRD,GAAW,GAEXE,IACGC,IADH,UACUC,IADV,iBAC8BV,IAC3BW,MAAK,SAACC,GACLR,EAAYQ,EAAIC,MAChBP,GAAW,MAEZQ,OAAM,SAACC,GACNC,QAAQC,MAAMF,QAEjB,IAEIV,EACL,2BAEA,eAAC,IAAD,CAAM1B,UAAWD,EAAQS,KAAzB,UACE,cAAC,IAAD,CAAMR,UAAWD,EAAQkB,UAAzB,SACE,8BACE,cAAC,IAAD,CAAQsB,IAAKf,EAASgB,UAG1B,cAAC,IAAD,CAAMxC,UAAWD,EAAQkB,UAAzB,SAAqCwB,YAAE","file":"static/js/19.d6a6017b.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","// React\nimport { useState, useEffect } from 'react';\n\nimport { useParams } from 'react-router';\n\n// Material UI\nimport Card from '@material-ui/core/Card';\nimport Avatar from '@material-ui/core/Avatar';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\n\n// Util\nimport axios from 'axios';\nimport { hwbountyAPI } from '../redux/types';\n\n// Translation\nimport t from '../util/localization/localization';\n\nconst useStyles = makeStyles({\n  root: {\n    width: '80vw',\n    marginLeft: '10vw',\n  },\n  childCard: {\n    maxWidth: '90%',\n    display: 'flex',\n  },\n});\n\nconst Profile = (props) => {\n  const classes = useStyles();\n  const { userID } = useParams();\n\n  const [userData, setUserData] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    setLoading(true);\n\n    axios\n      .get(`${hwbountyAPI}/user/${userID}`)\n      .then((res) => {\n        setUserData(res.data);\n        setLoading(false);\n      })\n      .catch((err) => {\n        console.trace(err);\n      });\n  }, []);\n\n  return loading ? (\n    <button />\n  ) : (\n    <Card className={classes.root}>\n      <Card className={classes.childCard}>\n        <div>\n          <Avatar src={userData.pfp} />\n        </div>\n      </Card>\n      <Card className={classes.childCard}>{t('profile.hi')}</Card>\n    </Card>\n  );\n};\n\nexport default Profile;\n"],"sourceRoot":""}