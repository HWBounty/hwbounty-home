{"version":3,"sources":["../node_modules/@material-ui/core/esm/FormControlLabel/FormControlLabel.js","../node_modules/@material-ui/core/esm/FormGroup/FormGroup.js","../node_modules/@material-ui/core/esm/internal/SwitchBase.js","../node_modules/@material-ui/core/esm/Switch/Switch.js","pages/settings.js"],"names":["FormControlLabel","React","props","ref","checked","classes","className","control","disabledProp","disabled","label","inputRef","_props$labelPlacement","labelPlacement","other","name","onChange","value","_objectWithoutProperties","muiFormControl","useFormControl","controlProps","forEach","key","_extends","clsx","root","concat","capitalize","Typography","component","withStyles","theme","display","alignItems","cursor","verticalAlign","WebkitTapHighlightColor","marginLeft","marginRight","labelPlacementStart","flexDirection","labelPlacementTop","labelPlacementBottom","color","palette","text","FormGroup","_props$row","row","flexWrap","SwitchBase","autoFocus","checkedProp","checkedIcon","defaultChecked","icon","id","inputProps","onBlur","onFocus","readOnly","required","tabIndex","type","_useControlled","useControlled","controlled","default","Boolean","state","_useControlled2","_slicedToArray","setCheckedState","hasLabelFor","IconButton","role","undefined","event","input","newChecked","target","padding","position","opacity","width","height","top","left","margin","zIndex","Switch","_props$color","_props$edge","edge","_props$size","size","thumb","edgeStart","edgeEnd","switchBase","track","overflow","boxSizing","flexShrink","colorAdjust","grey","transition","transitions","create","duration","shortest","transform","colorPrimary","primary","main","backgroundColor","fade","action","hoverOpacity","common","black","white","colorSecondary","secondary","sizeSmall","boxShadow","shadows","borderRadius","useStyles","makeStyles","spreadIt","spacing","small","large","paper","title","fontSize","formLabel","formGroup","Settings","UI","setTheme","enqueueSnackbar","useSnackbar","Paper","variant","nv","newVal","localStorage","setItem","connect","user"],"mappings":"4PAgEIA,EAAgCC,cAAiB,SAA0BC,EAAOC,GACtED,EAAME,QAApB,IACIC,EAAUH,EAAMG,QAChBC,EAAYJ,EAAMI,UAClBC,EAAUL,EAAMK,QAChBC,EAAeN,EAAMO,SAErBC,GADWR,EAAMS,SACTT,EAAMQ,OACdE,EAAwBV,EAAMW,eAC9BA,OAA2C,IAA1BD,EAAmC,MAAQA,EAI5DE,GAHOZ,EAAMa,KACFb,EAAMc,SACTd,EAAMe,MACNC,YAAyBhB,EAAO,CAAC,UAAW,UAAW,YAAa,UAAW,WAAY,WAAY,QAAS,iBAAkB,OAAQ,WAAY,WAE9JiB,EAAiBC,cACjBX,EAAWD,EAES,qBAAbC,GAA8D,qBAA3BF,EAAQL,MAAMO,WAC1DA,EAAWF,EAAQL,MAAMO,UAGH,qBAAbA,GAA4BU,IACrCV,EAAWU,EAAeV,UAG5B,IAAIY,EAAe,CACjBZ,SAAUA,GAOZ,MALA,CAAC,UAAW,OAAQ,WAAY,QAAS,YAAYa,SAAQ,SAAUC,GACnC,qBAAvBhB,EAAQL,MAAMqB,IAA8C,qBAAfrB,EAAMqB,KAC5DF,EAAaE,GAAOrB,EAAMqB,OAGVtB,gBAAoB,QAASuB,YAAS,CACxDlB,UAAWmB,YAAKpB,EAAQqB,KAAMpB,EAA8B,QAAnBO,GAA4BR,EAAQ,iBAAiBsB,OAAOC,YAAWf,KAAmBJ,GAAYJ,EAAQI,UACvJN,IAAKA,GACJW,GAAqBb,eAAmBM,EAASc,GAA4BpB,gBAAoB4B,IAAY,CAC9GC,UAAW,OACXxB,UAAWmB,YAAKpB,EAAQK,MAAOD,GAAYJ,EAAQI,WAClDC,OAmEUqB,eAjKK,SAAgBC,GAClC,MAAO,CAELN,KAAM,CACJO,QAAS,cACTC,WAAY,SACZC,OAAQ,UAERC,cAAe,SACfC,wBAAyB,cACzBC,YAAa,GACbC,YAAa,GAEb,aAAc,CACZJ,OAAQ,YAKZK,oBAAqB,CACnBC,cAAe,cACfH,WAAY,GAEZC,aAAc,IAIhBG,kBAAmB,CACjBD,cAAe,iBACfH,WAAY,IAIdK,qBAAsB,CACpBF,cAAe,SACfH,WAAY,IAId7B,SAAU,GAGVC,MAAO,CACL,aAAc,CACZkC,MAAOZ,EAAMa,QAAQC,KAAKrC,cAqHA,CAChCM,KAAM,uBADOgB,CAEZ/B,GCpJC+C,EAAyB9C,cAAiB,SAAmBC,EAAOC,GACtE,IAAIE,EAAUH,EAAMG,QAChBC,EAAYJ,EAAMI,UAClB0C,EAAa9C,EAAM+C,IACnBA,OAAqB,IAAfD,GAAgCA,EACtClC,EAAQI,YAAyBhB,EAAO,CAAC,UAAW,YAAa,QAErE,OAAoBD,gBAAoB,MAAOuB,YAAS,CACtDlB,UAAWmB,YAAKpB,EAAQqB,KAAMpB,EAAW2C,GAAO5C,EAAQ4C,KACxD9C,IAAKA,GACJW,OA6BUiB,cA1DK,CAElBL,KAAM,CACJO,QAAS,OACTQ,cAAe,SACfS,SAAU,QAIZD,IAAK,CACHR,cAAe,QAgDe,CAChC1B,KAAM,gBADOgB,CAEZgB,G,2CChCCI,EAA0BlD,cAAiB,SAAoBC,EAAOC,GACxE,IAAIiD,EAAYlD,EAAMkD,UAClBC,EAAcnD,EAAME,QACpBkD,EAAcpD,EAAMoD,YACpBjD,EAAUH,EAAMG,QAChBC,EAAYJ,EAAMI,UAClBiD,EAAiBrD,EAAMqD,eACvB/C,EAAeN,EAAMO,SACrB+C,EAAOtD,EAAMsD,KACbC,EAAKvD,EAAMuD,GACXC,EAAaxD,EAAMwD,WACnB/C,EAAWT,EAAMS,SACjBI,EAAOb,EAAMa,KACb4C,EAASzD,EAAMyD,OACf3C,EAAWd,EAAMc,SACjB4C,EAAU1D,EAAM0D,QAChBC,EAAW3D,EAAM2D,SACjBC,EAAW5D,EAAM4D,SACjBC,EAAW7D,EAAM6D,SACjBC,EAAO9D,EAAM8D,KACb/C,EAAQf,EAAMe,MACdH,EAAQI,YAAyBhB,EAAO,CAAC,YAAa,UAAW,cAAe,UAAW,YAAa,iBAAkB,WAAY,OAAQ,KAAM,aAAc,WAAY,OAAQ,SAAU,WAAY,UAAW,WAAY,WAAY,WAAY,OAAQ,UAEnQ+D,EAAiBC,YAAc,CACjCC,WAAYd,EACZe,QAASC,QAAQd,GACjBxC,KAAM,aACNuD,MAAO,YAELC,EAAkBC,YAAeP,EAAgB,GACjD7D,EAAUmE,EAAgB,GAC1BE,EAAkBF,EAAgB,GAElCpD,EAAiBC,cAgCjBX,EAAWD,EAEXW,GACsB,qBAAbV,IACTA,EAAWU,EAAeV,UAI9B,IAAIiE,EAAuB,aAATV,GAAgC,UAATA,EACzC,OAAoB/D,gBAAoB0E,IAAYnD,YAAS,CAC3DM,UAAW,OACXxB,UAAWmB,YAAKpB,EAAQqB,KAAMpB,EAAWF,GAAWC,EAAQD,QAASK,GAAYJ,EAAQI,UACzFA,SAAUA,EACVsD,SAAU,KACVa,UAAMC,EACNjB,QA7CgB,SAAqBkB,GACjClB,GACFA,EAAQkB,GAGN3D,GAAkBA,EAAeyC,SACnCzC,EAAeyC,QAAQkB,IAwCzBnB,OApCe,SAAoBmB,GAC/BnB,GACFA,EAAOmB,GAGL3D,GAAkBA,EAAewC,QACnCxC,EAAewC,OAAOmB,IA+BxB3E,IAAKA,GACJW,GAAqBb,gBAAoB,QAASuB,YAAS,CAC5D4B,UAAWA,EACXhD,QAASiD,EACTE,eAAgBA,EAChBjD,UAAWD,EAAQ0E,MACnBtE,SAAUA,EACVgD,GAAIiB,GAAejB,EACnB1C,KAAMA,EACNC,SApCsB,SAA2B8D,GACjD,IAAIE,EAAaF,EAAMG,OAAO7E,QAC9BqE,EAAgBO,GAEZhE,GAEFA,EAAS8D,EAAOE,IA+BlBnB,SAAUA,EACV1D,IAAKQ,EACLmD,SAAUA,EACVC,SAAUA,EACVC,KAAMA,EACN/C,MAAOA,GACNyC,IAActD,EAAUkD,EAAcE,MA8G5BzB,cAvOK,CAClBL,KAAM,CACJwD,QAAS,GAEX9E,QAAS,GACTK,SAAU,GACVsE,MAAO,CACL5C,OAAQ,UACRgD,SAAU,WACVC,QAAS,EACTC,MAAO,OACPC,OAAQ,OACRC,IAAK,EACLC,KAAM,EACNC,OAAQ,EACRP,QAAS,EACTQ,OAAQ,IAuNsB,CAChC3E,KAAM,qBADOgB,CAEZoB,GCjFCwC,EAAsB1F,cAAiB,SAAgBC,EAAOC,GAChE,IAAIE,EAAUH,EAAMG,QAChBC,EAAYJ,EAAMI,UAClBsF,EAAe1F,EAAM0C,MACrBA,OAAyB,IAAjBgD,EAA0B,YAAcA,EAChDC,EAAc3F,EAAM4F,KACpBA,OAAuB,IAAhBD,GAAiCA,EACxCE,EAAc7F,EAAM8F,KACpBA,OAAuB,IAAhBD,EAAyB,SAAWA,EAC3CjF,EAAQI,YAAyBhB,EAAO,CAAC,UAAW,YAAa,QAAS,OAAQ,SAElFsD,EAAoBvD,gBAAoB,OAAQ,CAClDK,UAAWD,EAAQ4F,QAErB,OAAoBhG,gBAAoB,OAAQ,CAC9CK,UAAWmB,YAAKpB,EAAQqB,KAAMpB,EAAW,CACvC,MAASD,EAAQ6F,UACjB,IAAO7F,EAAQ8F,SACfL,GAAgB,UAATE,GAAoB3F,EAAQ,OAAOsB,OAAOC,YAAWoE,OAChD/F,gBAAoBkD,EAAY3B,YAAS,CACvDwC,KAAM,WACNR,KAAMA,EACNF,YAAaE,EACbnD,QAAS,CACPqB,KAAMD,YAAKpB,EAAQ+F,WAAY/F,EAAQ,QAAQsB,OAAOC,YAAWgB,MACjEmC,MAAO1E,EAAQ0E,MACf3E,QAASC,EAAQD,QACjBK,SAAUJ,EAAQI,UAEpBN,IAAKA,GACJW,IAAsBb,gBAAoB,OAAQ,CACnDK,UAAWD,EAAQgG,YAwGRtE,eA/RK,SAAgBC,GAClC,MAAO,CAELN,KAAM,CACJO,QAAS,cACToD,MAAO,GACPC,OAAQ,GACRgB,SAAU,SACVpB,QAAS,GACTqB,UAAW,aACXpB,SAAU,WACVqB,WAAY,EACZd,OAAQ,EAERtD,cAAe,SAEf,eAAgB,CACdqE,YAAa,UAKjBP,UAAW,CACT5D,YAAa,GAIf6D,QAAS,CACP5D,aAAc,GAIhB6D,WAAY,CACVjB,SAAU,WACVI,IAAK,EACLC,KAAM,EACNE,OAAQ,EAER9C,MAA8B,UAAvBZ,EAAMa,QAAQmB,KAAmBhC,EAAMa,QAAQ6D,KAAK,IAAM1E,EAAMa,QAAQ6D,KAAK,KACpFC,WAAY3E,EAAM4E,YAAYC,OAAO,CAAC,OAAQ,aAAc,CAC1DC,SAAU9E,EAAM4E,YAAYE,SAASC,WAEvC,YAAa,CACXC,UAAW,oBAEb,aAAc,CACZpE,MAA8B,UAAvBZ,EAAMa,QAAQmB,KAAmBhC,EAAMa,QAAQ6D,KAAK,KAAO1E,EAAMa,QAAQ6D,KAAK,MAEvF,qBAAsB,CACpBtB,QAAS,IAEX,sBAAuB,CACrBA,QAAgC,UAAvBpD,EAAMa,QAAQmB,KAAmB,IAAO,KAKrDiD,aAAc,CACZ,YAAa,CACXrE,MAAOZ,EAAMa,QAAQqE,QAAQC,KAC7B,UAAW,CACTC,gBAAiBC,YAAKrF,EAAMa,QAAQqE,QAAQC,KAAMnF,EAAMa,QAAQyE,OAAOC,cACvE,uBAAwB,CACtBH,gBAAiB,iBAIvB,aAAc,CACZxE,MAA8B,UAAvBZ,EAAMa,QAAQmB,KAAmBhC,EAAMa,QAAQ6D,KAAK,KAAO1E,EAAMa,QAAQ6D,KAAK,MAEvF,qBAAsB,CACpBU,gBAAiBpF,EAAMa,QAAQqE,QAAQC,MAEzC,sBAAuB,CACrBC,gBAAwC,UAAvBpF,EAAMa,QAAQmB,KAAmBhC,EAAMa,QAAQ2E,OAAOC,MAAQzF,EAAMa,QAAQ2E,OAAOE,QAKxGC,eAAgB,CACd,YAAa,CACX/E,MAAOZ,EAAMa,QAAQ+E,UAAUT,KAC/B,UAAW,CACTC,gBAAiBC,YAAKrF,EAAMa,QAAQ+E,UAAUT,KAAMnF,EAAMa,QAAQyE,OAAOC,cACzE,uBAAwB,CACtBH,gBAAiB,iBAIvB,aAAc,CACZxE,MAA8B,UAAvBZ,EAAMa,QAAQmB,KAAmBhC,EAAMa,QAAQ6D,KAAK,KAAO1E,EAAMa,QAAQ6D,KAAK,MAEvF,qBAAsB,CACpBU,gBAAiBpF,EAAMa,QAAQ+E,UAAUT,MAE3C,sBAAuB,CACrBC,gBAAwC,UAAvBpF,EAAMa,QAAQmB,KAAmBhC,EAAMa,QAAQ2E,OAAOC,MAAQzF,EAAMa,QAAQ2E,OAAOE,QAKxGG,UAAW,CACTxC,MAAO,GACPC,OAAQ,GACRJ,QAAS,EACT,WAAY,CACVG,MAAO,GACPC,OAAQ,IAEV,gBAAiB,CACfJ,QAAS,EACT,YAAa,CACX8B,UAAW,sBAMjB5G,QAAS,GAGTK,SAAU,GAGVsE,MAAO,CACLS,KAAM,QACNH,MAAO,QAITY,MAAO,CACL6B,UAAW9F,EAAM+F,QAAQ,GACzBX,gBAAiB,eACjB/B,MAAO,GACPC,OAAQ,GACR0C,aAAc,OAIhB3B,MAAO,CACLf,OAAQ,OACRD,MAAO,OACP2C,aAAc,EACdtC,QAAS,EACTiB,WAAY3E,EAAM4E,YAAYC,OAAO,CAAC,UAAW,oBAAqB,CACpEC,SAAU9E,EAAM4E,YAAYE,SAASC,WAEvCK,gBAAwC,UAAvBpF,EAAMa,QAAQmB,KAAmBhC,EAAMa,QAAQ2E,OAAOC,MAAQzF,EAAMa,QAAQ2E,OAAOE,MACpGtC,QAAgC,UAAvBpD,EAAMa,QAAQmB,KAAmB,IAAO,OA2IrB,CAChCjD,KAAM,aADOgB,CAEZ4D,G,kDC1RGsC,EAAYC,KAAW,SAAClG,GAAD,mBAAC,eACzBA,EAAMmG,UADkB,IAE3BzG,KAAM,CACJO,QAAS,OACT,QAAS,CACPwD,OAAQzD,EAAMoG,QAAQ,KAG1BC,MAAO,CACLhD,MAAOrD,EAAMoG,QAAQ,GACrB9C,OAAQtD,EAAMoG,QAAQ,IAExBE,MAAO,CACLjD,MAAOrD,EAAMoG,QAAQ,IACrB9C,OAAQtD,EAAMoG,QAAQ,KAExBG,MAAO,CACLlD,MAAO,OACPC,OAAQ,OACRrD,QAAS,gBAEXuG,MAAO,CACLC,SAAU,QAGZC,UAAW,CACTzG,QAAS,SAEX0G,UAAW,CACV1G,QAAS,eAGC2G,EAAW,SAAC1I,GACvB,IAAMG,EAAU4H,IAERjG,EAEJ9B,EAFF2I,GAAM7G,MACN8G,EACE5I,EADF4I,SAEMC,EAAoBC,cAApBD,gBAWR,OACE,eAACE,EAAA,EAAD,CAAO3I,UAAWD,EAAQkI,MAA1B,UACE,cAAC1G,EAAA,EAAD,CAAYqH,QAAQ,KAAK5I,UAAWD,EAAQmI,MAA5C,sBAGA,cAAC,EAAD,CAAWvF,KAAG,EAAC3C,UAAWD,EAAQsI,UAAlC,SACE,cAAC,EAAD,CACEpI,QACE,cAAC,EAAD,CACEH,QAAmB,IAAV4B,EACThB,SApBW,SAAC8D,EAAOqE,GAC7B,IAAMC,EAASD,EAAK,EAAI,EAExBJ,EADe,IAAXK,EACY,iBAEA,qBAChBC,aAAaC,QAAQ,QAASF,GAC9BN,EAASM,IAcCrI,KAAK,mBAGTL,MAAM,eACNJ,UAAWD,EAAQqI,kBA4Bda,uBALS,SAACjF,GAAD,MAAY,CAClCuE,GAAIvE,EAAMuE,GACVW,KAAMlF,EAAMkF,QAG0B,CAAEV,cAA3BS,CAAuCX","file":"static/js/26.497259a0.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport { useFormControl } from '../FormControl';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      cursor: 'pointer',\n      // For correct alignment with the text.\n      verticalAlign: 'middle',\n      WebkitTapHighlightColor: 'transparent',\n      marginLeft: -11,\n      marginRight: 16,\n      // used for row presentation of radio/checkbox\n      '&$disabled': {\n        cursor: 'default'\n      }\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"start\"`. */\n    labelPlacementStart: {\n      flexDirection: 'row-reverse',\n      marginLeft: 16,\n      // used for row presentation of radio/checkbox\n      marginRight: -11\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"top\"`. */\n    labelPlacementTop: {\n      flexDirection: 'column-reverse',\n      marginLeft: 16\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"bottom\"`. */\n    labelPlacementBottom: {\n      flexDirection: 'column',\n      marginLeft: 16\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the label's Typography component. */\n    label: {\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      }\n    }\n  };\n};\n/**\n * Drop in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\nvar FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(props, ref) {\n  var checked = props.checked,\n      classes = props.classes,\n      className = props.className,\n      control = props.control,\n      disabledProp = props.disabled,\n      inputRef = props.inputRef,\n      label = props.label,\n      _props$labelPlacement = props.labelPlacement,\n      labelPlacement = _props$labelPlacement === void 0 ? 'end' : _props$labelPlacement,\n      name = props.name,\n      onChange = props.onChange,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"className\", \"control\", \"disabled\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"value\"]);\n\n  var muiFormControl = useFormControl();\n  var disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  var controlProps = {\n    disabled: disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(function (key) {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"label\", _extends({\n    className: clsx(classes.root, className, labelPlacement !== 'end' && classes[\"labelPlacement\".concat(capitalize(labelPlacement))], disabled && classes.disabled),\n    ref: ref\n  }, other), /*#__PURE__*/React.cloneElement(control, controlProps), /*#__PURE__*/React.createElement(Typography, {\n    component: \"span\",\n    className: clsx(classes.label, disabled && classes.disabled)\n  }, label));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * A control element. For instance, it can be be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n\n  /**\n   * If `true`, the control will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The text to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The position of the label.\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControlLabel'\n})(FormControlLabel);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexWrap: 'wrap'\n  },\n\n  /* Styles applied to the root element if `row={true}`. */\n  row: {\n    flexDirection: 'row'\n  }\n};\n/**\n * `FormGroup` wraps controls such as `Checkbox` and `Switch`.\n * It provides compact row layout.\n * For the `Radio`, you should be using the `RadioGroup` component instead of this one.\n */\n\nvar FormGroup = /*#__PURE__*/React.forwardRef(function FormGroup(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$row = props.row,\n      row = _props$row === void 0 ? false : _props$row,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"row\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, row && classes.row),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormGroup.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Display group of elements in a compact row.\n   */\n  row: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormGroup'\n})(FormGroup);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v5: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return /*#__PURE__*/React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n// @inheritedComponent IconButton\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      width: 34 + 12 * 2,\n      height: 14 + 12 * 2,\n      overflow: 'hidden',\n      padding: 12,\n      boxSizing: 'border-box',\n      position: 'relative',\n      flexShrink: 0,\n      zIndex: 0,\n      // Reset the stacking context.\n      verticalAlign: 'middle',\n      // For correct alignment with the text.\n      '@media print': {\n        colorAdjust: 'exact'\n      }\n    },\n\n    /* Styles applied to the root element if `edge=\"start\"`. */\n    edgeStart: {\n      marginLeft: -8\n    },\n\n    /* Styles applied to the root element if `edge=\"end\"`. */\n    edgeEnd: {\n      marginRight: -8\n    },\n\n    /* Styles applied to the internal `SwitchBase` component's `root` class. */\n    switchBase: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      zIndex: 1,\n      // Render above the focus ripple.\n      color: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[400],\n      transition: theme.transitions.create(['left', 'transform'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&$checked': {\n        transform: 'translateX(20px)'\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        opacity: 0.5\n      },\n      '&$disabled + $track': {\n        opacity: theme.palette.type === 'light' ? 0.12 : 0.1\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.primary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.secondary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      width: 40,\n      height: 24,\n      padding: 7,\n      '& $thumb': {\n        width: 16,\n        height: 16\n      },\n      '& $switchBase': {\n        padding: 4,\n        '&$checked': {\n          transform: 'translateX(16px)'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the internal `SwitchBase` component's `checked` class. */\n    checked: {},\n\n    /* Pseudo-class applied to the internal SwitchBase component's disabled class. */\n    disabled: {},\n\n    /* Styles applied to the internal SwitchBase component's input element. */\n    input: {\n      left: '-100%',\n      width: '300%'\n    },\n\n    /* Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */\n    thumb: {\n      boxShadow: theme.shadows[1],\n      backgroundColor: 'currentColor',\n      width: 20,\n      height: 20,\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the track element. */\n    track: {\n      height: '100%',\n      width: '100%',\n      borderRadius: 14 / 2,\n      zIndex: -1,\n      transition: theme.transitions.create(['opacity', 'background-color'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white,\n      opacity: theme.palette.type === 'light' ? 0.38 : 0.3\n    }\n  };\n};\nvar Switch = /*#__PURE__*/React.forwardRef(function Switch(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"edge\", \"size\"]);\n\n  var icon = /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.thumb\n  });\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.root, className, {\n      'start': classes.edgeStart,\n      'end': classes.edgeEnd\n    }[edge], size === \"small\" && classes[\"size\".concat(capitalize(size))])\n  }, /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    icon: icon,\n    checkedIcon: icon,\n    classes: {\n      root: clsx(classes.switchBase, classes[\"color\".concat(capitalize(color))]),\n      input: classes.input,\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    ref: ref\n  }, other)), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.track\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the switch.\n   * `small` is equivalent to the dense switch styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSwitch'\n})(Switch);","// React\r\nimport { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// MUI\r\nimport Card from \"@material-ui/core/Card\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport { setTheme, setAuthPopupOpen } from \"../redux/actions/uiActions\";\r\nimport { useSnackbar } from \"notistack\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  ...theme.spreadIt,\r\n  root: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  small: {\r\n    width: theme.spacing(3),\r\n    height: theme.spacing(3),\r\n  },\r\n  large: {\r\n    width: theme.spacing(16),\r\n    height: theme.spacing(16),\r\n  },\r\n  paper: {\r\n    width: \"80vw\",\r\n    height: \"80vw\",\r\n    display: \"inline-block\",\r\n  },\r\n  title: {\r\n    fontSize: \"60px\",\r\n    // fontFamily: \"\",\r\n  },\r\n  formLabel: {\r\n    display: \"block\",\r\n  },\r\n  formGroup: {\r\n\t  display: \"inline\",\r\n  },\r\n}));\r\nexport const Settings = (props) => {\r\n  const classes = useStyles();\r\n  const {\r\n    UI: { theme },\r\n    setTheme,\r\n  } = props;\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const toggleDarkmode = (event, nv) => {\r\n    const newVal = nv ? 1 : 0;\r\n    if (newVal === 0)\r\n    enqueueSnackbar(\"Ouchy, my eyes\")\r\n    else\r\n    enqueueSnackbar(\"Ahhhh much better\")\r\n    localStorage.setItem(\"theme\", newVal);\r\n    setTheme(newVal);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <Typography variant=\"h5\" className={classes.title}>\r\n        Settings\r\n      </Typography>\r\n      <FormGroup row className={classes.formGroup}>\r\n        <FormControlLabel\r\n          control={\r\n            <Switch\r\n              checked={theme === 1}\r\n              onChange={toggleDarkmode}\r\n              name=\"darkmodeToggle\"\r\n            />\r\n          }\r\n          label=\"Dark Mode :)\"\r\n          className={classes.formLabel}\r\n        />\r\n        {/* <FormControlLabel\r\n\t\t\t\t\tcontrol={\r\n\t\t\t\t\t\t<Switch\r\n\t\t\t\t\t\t\tchecked={state.checkedB}\r\n\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\tname=\"checkedB\"\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlabel=\"Primary\"\r\n\t\t\t\t/>\r\n\t\t\t\t<FormControlLabel control={<Switch />} label=\"Uncontrolled\" />\r\n\t\t\t\t<FormControlLabel disabled control={<Switch />} label=\"Disabled\" />\r\n\t\t\t\t<FormControlLabel disabled control={<Switch checked />} label=\"Disabled\" /> */}\r\n      </FormGroup>\r\n    </Paper>\r\n  );\r\n};\r\nSettings.propTypes = {\r\n  setTheme: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  UI: state.UI,\r\n  user: state.user,\r\n});\r\n\r\nexport default connect(mapStateToProps, { setTheme })(Settings);\r\n"],"sourceRoot":""}