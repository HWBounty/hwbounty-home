{"version":3,"sources":["pages/setSchedule.js"],"names":["SetSchedule","props","state","scheduleData","fetching","tab","a","console","log","this","Promise","all","axios","get","location","pathname","split","pop","catch","er","trace","res","selfData","courses","data","nameOverrides","JSON","parse","schedule","assign","self","section","setState","periods","Set","forEach","x","y","add","period","Array","from","keys","setting","periodChoices","sch","post","scheduleID","classes","status","href","parseAllPeriods","options","map","id","name","course_title","concat","style","width","minWidth","margin","required","labelId","value","onChange","event","obj","target","handleChange","React","Children","toArray","option","display","paddingBottom","paddingLeft","paddingRight","textAlign","verticalAlign","variant","height","marginRight","src","user","pfp","align","publicID","marginLeft","moment","parseInt","lastUpdated","fromNow","description","handleDropdowns","paddingTop","borderTop","onClick","ev","handleSet","fetchScheduleData","Component","connect","withRouter"],"mappings":"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","file":"static/js/21.b3585bb1.chunk.js","sourcesContent":["import { Avatar, Button, Card, Container, FormControl, Grid, InputBase, InputLabel, List, MenuItem, MuiThemeProvider, Paper, Select, Tab, Tabs, Typography } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport { Component } from \"react\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport ReactMarkdown from \"react-markdown\";\nimport { withRouter } from \"react-router\";\n\nclass SetSchedule extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tscheduleData: null,\n\t\t\tfetching: false,\n\t\t\ttab: 0,\n\t\t}\n\t}\n\tasync fetchScheduleData() {\n\t\tconsole.log(\"FETCHING\")\n\t\tif (this.state.scheduleData) return console.log(this.state.scheduleData);\n\t\ttry {\n\t\t\t// eslint-disable-next-line no-restricted-globals\n\t\t\tlet [res, selfData, courses] = await Promise.all([axios.get(`https://api.hwbounty.help/schedules/view/${this.props.location.pathname.split(\"/\").pop()}`).catch(er => console.log), axios.get(`https://api.hwbounty.help/@me`).catch(console.trace), axios(`https://api.hwbounty.help/sgy/getCourses`).catch(console.trace)]);\n\t\t\tif (res.data) {\n\t\t\t\tres.data.nameOverrides = JSON.parse(res.data.nameOverrides);\n\t\t\t\tres.data.schedule = JSON.parse(res.data.schedule);\n\t\t\t\tlet assign = {\n\t\t\t\t\tscheduleData: res.data,\n\t\t\t\t}\n\t\t\t\tif (selfData.data) assign.self = selfData.data;\n\t\t\t\tif (courses.data) assign.courses = courses.data.section;\n\t\t\t\tthis.setState(assign);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.trace(error);\n\t\t\tthis.setState({});\n\t\t}\n\n\n\t}\n\tcomponentDidMount(props) {\n\t\tthis.props = props;\n\t}\n\tparseAllPeriods(schedule) {\n\t\tlet periods = new Set();\n\t\t[\"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\", \"sunday\"].forEach(x => {\n\t\t\tschedule[x].forEach(y => {\n\t\t\t\tperiods.add(y.period);\n\t\t\t})\n\t\t})\n\t\treturn Array.from(periods.keys());\n\t}\n\tasync handleSet(self) {\n\t\tif (self.state.setting) return;\n\t\tself.setState({setting: true});\n\t\tlet periodChoices = self.state.periodChoices;\n\t\t// eslint-disable-next-line no-restricted-globals\n\t\tlet sch = this.props.location.pathname.split(\"/\").pop();\n\t\tconsole.log(sch);\n\t\tlet res = await axios.post(`https://api.hwbounty.help/schedules/set`, {\n\t\t\tscheduleID: sch,\n\t\t\tclasses: periodChoices\n\t\t}).catch(console.trace);\n\t\tif (res.status === 200) {\n\t\t\t// eslint-disable-next-line no-restricted-globals\n\t\t\tlocation.href = \"https://hwbounty.help\";\n\t\t}else{\n\t\t\tself.setState({setting:false})\n\t\t}\n\t}\n\thandleDropdowns(self) {\n\t\tlet courses = self.state.courses;\n\t\tlet periods = this.parseAllPeriods(self.state.scheduleData.schedule);\n\t\tlet options = courses.map(x => {\n\t\t\treturn { id: x.id, name: x.course_title };\n\t\t}).concat({ id: \"None\", name: \"None\" });\n\t\tlet nameOverrides = self.state.scheduleData.nameOverrides;\n\t\tconsole.log(periods);\n\t\tconst handleChange = (event, data) => {\n\t\t\tlet obj = self.state.periodChoices || {};\n\t\t\tobj[data] = event.target;\n\t\t\tself.setState({ periodChoices: obj });\n\t\t}\n\t\treturn periods.map(x => {\n\n\t\t\treturn (\n\t\t\t\t<FormControl\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\twidth: \"30%\",\n\t\t\t\t\t\tminWidth: \"30%\",\n\t\t\t\t\t\tmargin: \"1.5%\",\n\t\t\t\t\t}}\n\t\t\t\t\trequired>\n\t\t\t\t\t<InputLabel id={`inputLabel${x}`}>{nameOverrides[x] || x}</InputLabel>\n\t\t\t\t\t<Select\n\t\t\t\t\t\tlabelId={`select${x}Label`}\n\t\t\t\t\t\tid={`select${x}`}\n\t\t\t\t\t\tvalue={self.state.periodChoices && self.state.periodChoices[`${x}`]}\n\t\t\t\t\t\tonChange={event => { handleChange(event, `${x}`) }}\n\t\t\t\t\t>\n\t\t\t\t\t\t{React.Children.toArray(options.map(option => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<MenuItem value={option.id}>{option.name}</MenuItem>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}))}\n\t\t\t\t\t</Select>\n\t\t\t\t</FormControl>\n\t\t\t);\n\t\t});\n\n\t\t// self.state\n\t}\n\trender() {\n\t\tif (!this.state.scheduleData && !this.state.fetching) {\n\t\t\tconsole.log(\"GoFetch\");\n\t\t\tthis.setState({ fetching: true });\n\t\t\tthis.fetchScheduleData();\n\t\t\treturn (<br />);\n\t\t}\n\t\t//Infinite Loop setstate somewhere; Figure out what\n\t\tif (this.state.scheduleData) {\n\t\t\t// this.setState({ fetching: false })\n\t\t\treturn (\n\t\t\t\t<Container>\n\t\t\t\t\t<Card style={{\n\t\t\t\t\t\tdisplay: \"inline-block\",\n\t\t\t\t\t\twidth: \"90%\",\n\t\t\t\t\t\tmargin: \"5%\",\n\t\t\t\t\t\tpaddingBottom: \"1vh\",\n\t\t\t\t\t\tpaddingLeft: \"5%\",\n\t\t\t\t\t\tpaddingRight: \"5%\",\n\t\t\t\t\t\ttextAlign: \"left\",\n\t\t\t\t\t\tverticalAlign: \"middle\",\n\t\t\t\t\t}}>\n\t\t\t\t\t\t{/* <Typography variant=\"h4\">Stats</Typography> */}\n\t\t\t\t\t\t<Typography variant=\"h4\" style={{\n\t\t\t\t\t\t\ttextAlign: \"center\"\n\t\t\t\t\t\t}}>{this.state.scheduleData.name}</Typography>\n\t\t\t\t\t\t<Container style={{\n\t\t\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\t\t\theight: \"10%\",\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t<Typography variant=\"caption\" style={{\n\t\t\t\t\t\t\t\t\ttextAlign: \"left\",\n\t\t\t\t\t\t\t\t\tmarginRight: \"1%\"\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\tBy:\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Avatar src={this.state.scheduleData.user.pfp} align=\"left\" style={{\n\t\t\t\t\t\t\t\t\tdisplay: \"inline-block\",\n\t\t\t\t\t\t\t\t\tverticalAlign: \"middle\",\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t{this.state.scheduleData.user.publicID}\n\t\t\t\t\t\t\t\t</Avatar>\n\t\t\t\t\t\t\t\t<Typography variant=\"h5\" style={{\n\t\t\t\t\t\t\t\t\tverticalAlign: \"middle\",\n\t\t\t\t\t\t\t\t\tmarginLeft: \"1%\",\n\t\t\t\t\t\t\t\t\tdisplay: \"inline-block\",\n\t\t\t\t\t\t\t\t\t// fontSize: \"47px\",\n\t\t\t\t\t\t\t\t\t// height: \"40px\",\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t{this.state.scheduleData.user.publicID}\n\t\t\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t</Container>\n\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\tLast Updated: {moment(parseInt(this.state.scheduleData.lastUpdated)).fromNow()}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<ReactMarkdown>{this.state.scheduleData.description}</ReactMarkdown>\n\t\t\t\t\t\t<Container\n\t\t\t\t\t\t\tstyle={\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\twidth: \"100%\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t{React.Children.toArray(this.handleDropdowns(this))}\n\t\t\t\t\t\t</Container>\n\t\t\t\t\t\t<Container style={{\n\t\t\t\t\t\t\tpaddingTop: \"1vh\",\n\t\t\t\t\t\t\tborderTop: \"2px solid rgba(160, 160, 160, 0.2)\",\n\t\t\t\t\t\t\ttextAlign: \"center\",\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t<Button onClick={ev=>this.handleSet(this)}>Set Classes</Button>\n\t\t\t\t\t\t</Container>\n\n\t\t\t\t\t</Card>\n\t\t\t\t</Container>\n\n\t\t\t)\n\t\t}\n\t\treturn null;\n\t}\n}\nconst DisplayedScheduleDay = (props) => {\n\tconst classes = props.classes;\n\tconst data = props.data;\n\tconst day = props.day;\n\tlet overrides = data.nameOverrides;\n\tlet dayschedule = data.schedule[[\"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\", \"sunday\"][day]].map(x => {\n\t\treturn Object.assign(x, {\n\t\t\tperiod: data.nameOverrides[x.period] || x.period,\n\t\t})\n\t});\n\tconsole.log(dayschedule);\n\tconst renderPeriods = () => {\n\t\tlet children = React.Children.toArray(dayschedule.map(x => {\n\t\t\treturn (\n\t\t\t\t<Container >\n\t\t\t\t\t<Typography variant=\"h4\">{x.period}</Typography>\n\t\t\t\t\t<Typography variant=\"h6\">{x.timeStart}</Typography>\n\t\t\t\t\t<Typography variant=\"h6\">{x.timeEnd}</Typography>\n\t\t\t\t</Container>\n\t\t\t)\n\t\t}));\n\t\tif (!children.length)\n\t\t\treturn (<Typography variant=\"h3\">No School Today!</Typography>);\n\t\treturn children;\n\t}\n\treturn (\n\t\t<Container style={{\n\t\t\tmarginBottom: \"5%\",\n\n\t\t}}>\n\t\t\t{renderPeriods()}\n\t\t</Container>\n\t)\n}\nexport default connect()(withRouter(SetSchedule));"],"sourceRoot":""}