{"version":3,"sources":["redux/actions/moduleActions.js","components/Modules/Calculator/History.js","util/latex/preprocessMathQuill.js","components/Modules/Calculator/CalcTools.js","components/Modules/Calculator/Calculator.js","components/Modules/Calculator/CalcVariables.js","components/Modules/Calculator/CalculatorModule.js","pages/modules.js"],"names":["calc_setInput","latex","dispatch","type","CALC_SET_INPUT","payload","useStyles","makeStyles","theme","root","flex","overflow","connect","state","module","props","history","calculator","classes","HistoryButton","ans","ListItem","button","onClick","style","cursor","Typography","className","length","List","React","Children","toArray","map","x","Divider","mathquillToMathJS","fromMQ","noBraceSub","convertSubscript","fracToDivision","tex","mathjs","reduce","acc","r","str","find","replaceWith","replace","RegExp","escapeRegExp","expr","subStart","indexOf","numStart","closingBrace","slice","frac","fracStart","divIdx","startIdx","braces","openingBrace","undefined","Error","stack","j","findClosingBrace","numPadRoot","symbolPadRoot","SymbolButton","symbol","Button","variant","NumPad","UI","NumRow","arr","Grid","container","item","spacing","wrap","num","disabled","direction","SymbolPad","obj","addStyles","spreadIt","paper","height","rootPadding","flexDirection","display","symbolPadGrid","paddingTop","LatexInput","onChange","onSubmit","mathquillDidMount","fontSize","config","autoCommands","autoOperatorNames","handlers","enter","calc_addHistory","CALC_PUSH_HISTORY","parser","input","useState","answer","setAnswer","error","setError","mathField","useRef","Paper","InputBase","inputComponent","inputProps","val","evaluate","math","precision","current","err","console","log","value","fullWidth","xs","write","focus","cmd","color","calc_addVariable","variable","CALC_ADD_VARIABLE","calc_removeVariable","CALC_REMOVE_VARIABLE","withStyles","variableWrapper","addButton","margin","align","VariableField","startName","startVal","nameDisabled","setNameDisabled","name","setName","nameInputRef","valueDisabled","setValueDisabled","setValue","valueInputRef","useEffect","select","handleSubmit","event","preventDefault","set","remove","TextField","size","paddingLeft","inputRef","target","onBlur","textAlign","paddingRight","placeholder","Object","keys","getAll","key","get","IconButton","letters","split","tmp","filter","c","varName","marginLeft","marginRight","marginTop","minHeight"],"mappings":"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","file":"static/js/19.f9bfeda0.chunk.js","sourcesContent":["import {\r\n  CALC_PUSH_HISTORY,\r\n  CALC_SET_INPUT,\r\n  CALC_ADD_VARIABLE,\r\n  CALC_REMOVE_VARIABLE,\r\n  CALC_POP_HISTORY,\r\n} from \"../types\";\r\n\r\nexport const calc_addHistory = (latex) => (dispatch) => {\r\n  dispatch({ type: CALC_PUSH_HISTORY, payload: latex });\r\n  //dispatch({ type: CALC_POP_HISTORY });\r\n};\r\n\r\nexport const calc_setInput = (latex) => (dispatch) => {\r\n  dispatch({ type: CALC_SET_INPUT, payload: latex });\r\n};\r\nexport const calc_addVariable = (variable) => (dispatch) => {\r\n  dispatch({ type: CALC_ADD_VARIABLE, payload: variable });\r\n};\r\nexport const calc_removeVariable = (variable) => (dispatch) => {\r\n  dispatch({ type: CALC_REMOVE_VARIABLE, payload: variable });\r\n};\r\n","// React\r\nimport React, { useState } from \"react\";\r\n\r\n// MUI\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport { calc_setInput } from \"../../../redux/actions/moduleActions\";\r\n\r\n// Math\r\nimport { StaticMathField } from \"react-mathquill\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flex: 1,\r\n    overflow: \"auto\",\r\n  },\r\n}));\r\n\r\nexport const History = (props) => {\r\n  const {\r\n    module: {\r\n      calculator: { history },\r\n    },\r\n    calc_setInput,\r\n  } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const HistoryButton = (props) => {\r\n    const { latex, ans } = props;\r\n    return (\r\n      <ListItem button onClick={() => calc_setInput(latex)}>\r\n        <StaticMathField style={{ flex: 1, cursor: \"pointer\" }}>\r\n          {latex}\r\n        </StaticMathField>\r\n        <Typography>= {ans}</Typography>\r\n      </ListItem>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {history.length !== 0 ? (\r\n        <List>\r\n          {React.Children.toArray(\r\n            history.map((x) => (\r\n              <>\r\n                <Divider />\r\n                <HistoryButton latex={x.latex} ans={x.ans} />\r\n              </>\r\n            ))\r\n          )}\r\n        </List>\r\n      ) : (\r\n        <h1>\r\n          Type an equation to show history...\r\n          <br /> [insert cool image/space filler here]\r\n        </h1>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  module: state.module,\r\n});\r\n\r\nexport default connect(mapStateToProps, { calc_setInput })(History);\r\n","/**\r\n * Thank you ChristopherChudzicki for this code! (copy-paste)\r\n *\r\n * Makes a series of replacements on MathQuill-generated LaTeX strings so that\r\n * they can be parsed by MathJS.\r\n *\r\n * Notes:\r\n *  1. This is pretty heuristic. Might discover updates needed.\r\n *  2. Much of this could be used to preprocess LaTeX generated by other means\r\n * (i.e., not MathQuill.) The main bit that is MathQuill-specific is probably\r\n * the operatorname replacements.\r\n *\r\n * @param  {string} fromMQ a MathQuill-generated LaTeX expression\r\n * @return {string} the input expression with LaTeX commands converted to mathjs\r\n */\r\nexport default function mathquillToMathJS(fromMQ) {\r\n  const replacements = [\r\n    { tex: \"\\\\operatorname{diff}\", mathjs: \"diff\" },\r\n    { tex: \"\\\\operatorname{pdiff}\", mathjs: \"pdiff\" },\r\n    { tex: \"\\\\operatorname{curl}\", mathjs: \"curl\" },\r\n    { tex: \"\\\\operatorname{div}\", mathjs: \"div\" },\r\n    { tex: \"\\\\operatorname{norm}\", mathjs: \"norm\" },\r\n    { tex: \"\\\\operatorname{mod}\", mathjs: \"mod\" },\r\n    { tex: \"\\\\operatorname{abs}\", mathjs: \"abs\" },\r\n    { tex: \"\\\\operatorname{unitT}\", mathjs: \"unitT\" },\r\n    { tex: \"\\\\operatorname{unitN}\", mathjs: \"unitN\" },\r\n    { tex: \"\\\\operatorname{unitB}\", mathjs: \"unitB\" },\r\n    { tex: \"\\\\operatorname{arccosh}\", mathjs: \"arccosh\" },\r\n    { tex: \"\\\\operatorname{arcsinh}\", mathjs: \"arcsinh\" },\r\n    { tex: \"\\\\operatorname{arctanh}\", mathjs: \"arctanh\" },\r\n    { tex: \"\\\\cdot\", mathjs: \" * \" },\r\n    { tex: \"\\\\left\", mathjs: \"\" },\r\n    { tex: \"\\\\right\", mathjs: \"\" },\r\n    { tex: \"{\", mathjs: \"(\" },\r\n    { tex: \"}\", mathjs: \")\" },\r\n    { tex: \"~\", mathjs: \" \" },\r\n    { tex: \"\\\\\", mathjs: \" \" },\r\n  ];\r\n\r\n  // remove fractions, then apply replacements\r\n  const noFrac = fracToDivision(fromMQ);\r\n  const noBraceSub = convertSubscript(noFrac);\r\n  return replacements.reduce(\r\n    (acc, r) => replaceAll(acc, r[\"tex\"], r[\"mathjs\"]),\r\n    noBraceSub\r\n  );\r\n}\r\n\r\n/**\r\n * Recursively removes braces from LaTeX subscripts\r\n *   - example: x_{12foo_{bar123_{evenlower}}} --> x_12foo_bar123_evenlower\r\n */\r\nexport function convertSubscript(expr) {\r\n  const sub = \"_{\";\r\n  const subStart = expr.indexOf(sub);\r\n\r\n  if (subStart < 0) {\r\n    return expr;\r\n  }\r\n\r\n  const numStart = subStart + sub.length;\r\n  const closingBrace = expr.indexOf(\"}\", numStart);\r\n  const newExpr =\r\n    expr.slice(0, subStart) +\r\n    \"_\" +\r\n    expr.slice(numStart, closingBrace) +\r\n    expr.slice(closingBrace + 1);\r\n\r\n  return convertSubscript(newExpr);\r\n}\r\n\r\n/**\r\n * Recursively replaces LaTeX fractions with normal divison\r\n *   - example: \\frac{a}{1 + \\frac{b}{c}} --> {a}/{1 + {b}/{c}}\r\n */\r\nexport function fracToDivision(expr) {\r\n  const frac = \"\\\\frac\";\r\n  const fracStart = expr.indexOf(frac);\r\n  const numStart = fracStart + frac.length;\r\n\r\n  if (fracStart < 0) {\r\n    return expr;\r\n  }\r\n\r\n  const divIdx = findClosingBrace(expr, numStart);\r\n  // Remove frac, and add \"/\"\r\n  const newExpr =\r\n    expr.slice(0, fracStart) +\r\n    expr.slice(numStart, divIdx + 1) +\r\n    \"/\" +\r\n    expr.slice(divIdx + 1);\r\n\r\n  return fracToDivision(newExpr);\r\n}\r\n\r\nexport function capitalize(string) {\r\n  return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\r\n}\r\n\r\nexport function escapeRegExp(str) {\r\n  // from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#Using_Special_Characters\r\n  // $& means the whole matched string\r\n  return str.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\r\n}\r\n\r\nexport function replaceAll(str, find, replaceWith) {\r\n  // from https://stackoverflow.com/a/1144788/2747370\r\n  return str.replace(new RegExp(escapeRegExp(find), \"g\"), replaceWith);\r\n}\r\n\r\nexport function findClosingBrace(str, startIdx) {\r\n  const braces = {\r\n    \"[\": \"]\",\r\n    \"<\": \">\",\r\n    \"(\": \")\",\r\n    \"{\": \"}\",\r\n  };\r\n\r\n  const openingBrace = str[startIdx];\r\n\r\n  const closingBrace = braces[openingBrace];\r\n\r\n  if (closingBrace === undefined) {\r\n    throw Error(\r\n      `${str} does not contain an opening brace at position ${startIdx}.`\r\n    );\r\n  }\r\n\r\n  let stack = 1;\r\n\r\n  // eslint-disable-next-line no-plusplus\r\n  for (let j = startIdx + 1; j < str.length; j++) {\r\n    if (str[j] === openingBrace) {\r\n      stack += +1;\r\n    } else if (str[j] === closingBrace) {\r\n      stack += -1;\r\n    }\r\n    if (stack === 0) {\r\n      return j;\r\n    }\r\n  }\r\n\r\n  // stack !== 0\r\n  throw Error(\r\n    `${str} has a brace that opens at position ${startIdx} but does not close.`\r\n  );\r\n}\r\n","// React\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// MUI\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles({\r\n  numPadRoot: {},\r\n  symbolPadRoot: {},\r\n  button: {\r\n    //backgroundColor: (props) =>\r\n    //props.UI.theme === 1 ? \"rgb(63,63,63)\" : \"rgb(243,243,243)\",\r\n    //flex: 1,\r\n  },\r\n});\r\n\r\nconst SymbolButton = (props) => {\r\n  const { onClick, latex, symbol } = props;\r\n  const classes = useStyles(props);\r\n  return (\r\n    <Button\r\n      className={classes.button}\r\n      variant=\"contained\"\r\n      onClick={() => onClick(latex)}\r\n    >\r\n      {symbol}\r\n    </Button>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  UI: state.UI,\r\n});\r\nexport const NumPad = connect(mapStateToProps)((props) => {\r\n  const classes = useStyles(props);\r\n  const {\r\n    onClick,\r\n    UI: { theme },\r\n  } = props;\r\n\r\n  const NumRow = ({ arr }) => {\r\n    return (\r\n      <Grid container item spacing={1} wrap=\"nowrap\">\r\n        {React.Children.toArray(\r\n          arr.map((num) => (\r\n            <Grid item>\r\n              {num !== null ? (\r\n                <SymbolButton onClick={onClick} latex={num} symbol={num} />\r\n              ) : (\r\n                <Button\r\n                  className={classes.button}\r\n                  variant=\"contained\"\r\n                  disabled\r\n                />\r\n              )}\r\n            </Grid>\r\n          ))\r\n        )}\r\n      </Grid>\r\n    );\r\n  };\r\n  return (\r\n    <Grid container spacing={1} wrap=\"nowrap\" direction=\"column\">\r\n      <NumRow arr={[1, 2, 3]} />\r\n      <NumRow arr={[4, 5, 6]} />\r\n      <NumRow arr={[7, 8, 9]} />\r\n      <NumRow arr={[null, 0, \".\"]} />\r\n    </Grid>\r\n  );\r\n});\r\n\r\nexport const SymbolPad = (props) => {\r\n  const { onClick } = props;\r\n  const symbols = [\r\n    { symbol: \"+\", latex: \"+\" },\r\n    { symbol: \"-\", latex: \"-\" },\r\n    { symbol: \"*\", latex: \"cdot\" },\r\n    { symbol: \"/\", latex: \"frac\" },\r\n    { symbol: \"√\", latex: \"sqrt\" },\r\n    { symbol: \"^\", latex: \"^\" },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <Grid container spacing={1}>\r\n        <Grid container item spacing={1}>\r\n          {React.Children.toArray(\r\n            symbols.map((obj) => {\r\n              return (\r\n                <Grid item>\r\n                  <SymbolButton\r\n                    onClick={onClick}\r\n                    latex={obj.latex}\r\n                    symbol={obj.symbol}\r\n                  />\r\n                </Grid>\r\n              );\r\n            })\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nNumPad.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nSymbolPad.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","// React\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// MUI\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  calc_addHistory,\r\n  calc_setInput,\r\n} from \"../../../redux/actions/moduleActions\";\r\n\r\n// Components\r\nimport History from \"./History\";\r\n\r\n// Math related\r\nimport mathquillToMathJS from \"../../../util/latex/preprocessMathQuill\";\r\nimport { addStyles, EditableMathField, StaticMathField } from \"react-mathquill\";\r\nimport { NumPad, SymbolPad } from \"./CalcTools\";\r\nimport * as math from \"mathjs\";\r\n\r\n// required for latex to format correctly\r\naddStyles();\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  ...theme.spreadIt,\r\n  paper: {\r\n    ...theme.spreadIt.paper,\r\n    height: \"80vh\",\r\n  },\r\n  rootPadding: {\r\n    ...theme.spreadIt.rootPadding,\r\n    flexDirection: \"column\",\r\n    display: \"flex\",\r\n    height: \"100%\",\r\n  },\r\n  symbolPadGrid: {\r\n    paddingTop: 15,\r\n  },\r\n}));\r\n\r\nconst LatexInput = (props) => {\r\n  const { onChange, onSubmit, mathquillDidMount } = props;\r\n\r\n  return (\r\n    <EditableMathField\r\n      latex=\"\"\r\n      style={{ height: \"auto\", fontSize: 50, flex: 1 }}\r\n      config={{\r\n        autoCommands: \"pi theta sqrt sum\",\r\n        autoOperatorNames:\r\n          \"sin cos tan feet ft inches in miles cm sech arcsec arsinh to rad deg radians degrees\",\r\n        handlers: {\r\n          enter: onSubmit,\r\n        },\r\n      }}\r\n      onChange={onChange}\r\n      mathquillDidMount={mathquillDidMount}\r\n    />\r\n  );\r\n};\r\n\r\nexport const Calculator = (props) => {\r\n  const {\r\n    parser,\r\n    module: {\r\n      calculator: { input },\r\n    },\r\n    calc_addHistory,\r\n    calc_setInput,\r\n  } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [answer, setAnswer] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n\r\n  const mathField = useRef(null);\r\n\r\n  const handleSubmit = (val) => {\r\n    try {\r\n      let ans = parser.evaluate(mathquillToMathJS(val.latex()));\r\n      ans = math.format(ans, { precision: 14 });\r\n      setAnswer(`${ans}`);\r\n      setError(false);\r\n      calc_addHistory({ latex: val.latex(), ans: `${ans}` });\r\n      mathField.current.latex(\"\");\r\n    } catch (err) {\r\n      console.log(err);\r\n      setAnswer(\"ERROR!!!!\");\r\n      setError(true);\r\n    }\r\n  };\r\n\r\n  const handleMathquillMount = (val) => {\r\n    mathField.current = val;\r\n  };\r\n\r\n  const handleNumberPressed = (num) => {\r\n    mathField.current.write(num);\r\n    mathField.current.focus();\r\n  };\r\n\r\n  const handleSymbolPressed = (symbol) => {\r\n    mathField.current.cmd(symbol);\r\n    mathField.current.focus();\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <div className={classes.rootPadding}>\r\n        <History />\r\n        <InputBase\r\n          inputComponent={LatexInput}\r\n          inputProps={{\r\n            onSubmit: handleSubmit,\r\n            //onChange: handleChange,\r\n            mathquillDidMount: handleMathquillMount,\r\n          }}\r\n          /*className={classes.input}*/\r\n          value=\"\"\r\n          fullWidth\r\n        />\r\n        <Grid container spacing={2} className={classes.symbolPadGrid}>\r\n          <Grid item xs>\r\n            <NumPad onClick={handleNumberPressed} />\r\n          </Grid>\r\n          <Grid item xs>\r\n            <SymbolPad onClick={handleSymbolPressed} />\r\n          </Grid>\r\n        </Grid>\r\n        <Typography color={error ? \"error\" : \"initial\"}>{answer}</Typography>\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nCalculator.propTypes = {\r\n  parser: PropTypes.any.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  module: state.module,\r\n});\r\n\r\nexport default connect(mapStateToProps, { calc_addHistory, calc_setInput })(\r\n  Calculator\r\n);\r\n","// React\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\n\r\n// MUI\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  calc_addVariable,\r\n  calc_removeVariable,\r\n} from \"../../../redux/actions/moduleActions\";\r\n\r\nconst styles = (theme) => ({\r\n  ...theme.spreadIt,\r\n  paper: {\r\n    ...theme.spreadIt.paper,\r\n    height: \"80vh\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  variableWrapper: {\r\n    flex: 1,\r\n    overflow: \"auto\",\r\n    paddingTop: 25,\r\n  },\r\n  addButton: {\r\n    margin: \"auto\",\r\n    align: \"right\",\r\n  },\r\n});\r\n\r\nexport const CalcVariables = (props) => {\r\n  const { classes, parser, calc_addVariable, calc_removeVariable } = props;\r\n\r\n  const VariableField = (props) => {\r\n    const { startName, startVal } = props;\r\n\r\n    const [nameDisabled, setNameDisabled] = useState(true);\r\n    const [name, setName] = useState(startName);\r\n    const nameInputRef = useRef(null);\r\n\r\n    const [valueDisabled, setValueDisabled] = useState(true);\r\n    const [value, setValue] = useState(startVal);\r\n    const valueInputRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n      if (nameDisabled) return;\r\n      nameInputRef.current.focus();\r\n      nameInputRef.current.select();\r\n    }, [nameDisabled]);\r\n\r\n    useEffect(() => {\r\n      if (valueDisabled) return;\r\n      valueInputRef.current.focus();\r\n      valueInputRef.current.select();\r\n    }, [valueDisabled]);\r\n\r\n    const handleSubmit = (event) => {\r\n      event.preventDefault();\r\n      setValueDisabled(true);\r\n      setNameDisabled(true);\r\n      try {\r\n        parser.set(name, value);\r\n        parser.remove(startName);\r\n\r\n        calc_addVariable({ name: value });\r\n        calc_removeVariable(startName);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n\r\n    const handleNameClicked = () => {\r\n      setNameDisabled(false);\r\n    };\r\n\r\n    const handleValueClicked = () => {\r\n      setValueDisabled(false);\r\n    };\r\n\r\n    const handleVariableChange = (event) => {\r\n      setValue(event.target.value);\r\n    };\r\n\r\n    const handleNameChange = (event) => {\r\n      setName(event.target.value);\r\n    };\r\n\r\n    const handleRemoveVariable = () => {\r\n      parser.remove(startName);\r\n      calc_removeVariable(startName);\r\n    };\r\n\r\n    return (\r\n      <div style={{ display: \"flex\" }}>\r\n        <Button onClick={handleNameClicked}>\r\n          <form onSubmit={handleSubmit}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              style={{ paddingLeft: 10 }}\r\n              inputProps={{\r\n                style: { cursor: nameDisabled ? \"pointer\" : \"auto\" },\r\n              }}\r\n              disabled={nameDisabled}\r\n              value={name}\r\n              inputRef={nameInputRef}\r\n              onChange={handleNameChange}\r\n              onBlur={handleSubmit}\r\n            />\r\n          </form>\r\n        </Button>\r\n        <Button\r\n          onClick={handleValueClicked}\r\n          fullWidth\r\n          style={{ display: \"flex\" }}\r\n        >\r\n          <Typography variant=\"body1\" style={{ flex: 1, textAlign: \"left\" }}>\r\n            =\r\n          </Typography>\r\n          <form onSubmit={handleSubmit}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              style={{ paddingRight: 10 }}\r\n              inputProps={{\r\n                style: { cursor: valueDisabled ? \"pointer\" : \"auto\" },\r\n              }}\r\n              disabled={valueDisabled}\r\n              placeholder={`${value}`}\r\n              value={value}\r\n              inputRef={valueInputRef}\r\n              onChange={handleVariableChange}\r\n              onBlur={handleSubmit}\r\n            />\r\n          </form>\r\n        </Button>\r\n        <Button onClick={handleRemoveVariable}>\r\n          <DeleteIcon />\r\n        </Button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const addVariable = () => {\r\n    // map over \"common name variables\" (abc...)\r\n    // remove from array based on the variables we already have\r\n    // we can make this over again cuz i'm lazy...\r\n    // also not competitive programming soooo....\r\n    // although O(n) space vs O(n) time so idk...\r\n    let letters = \"abcdefghijklmnopqrstuvwxyz\".split(\"\");\r\n    let x = 1; // increase every loop, we append this to end of each letter until it works...\r\n    let tmp = letters.filter((c) => {\r\n      return !(c in parser.getAll());\r\n    });\r\n\r\n    while (tmp.length === 0) {\r\n      //eslint-disable-next-line\r\n      tmp = letters.map((c) => c + `${x}`);\r\n      tmp = tmp.filter((c) => {\r\n        return !(c in parser.getAll());\r\n      });\r\n\r\n      x++;\r\n    }\r\n\r\n    const varName = tmp[0];\r\n\r\n    parser.set(varName, 1);\r\n    calc_addVariable({ varName: 1 });\r\n\r\n    // The problem is that we need to change state in some way, redux wise...\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <div className={classes.variableWrapper}>\r\n        {Object.keys(parser.getAll()).length !== 0 ? (\r\n          React.Children.toArray(\r\n            Object.keys(parser.getAll()).map((key) => (\r\n              <VariableField startName={key} startVal={parser.get(key)} />\r\n            ))\r\n          )\r\n        ) : (\r\n          <h1>\r\n            Type variables in text box (e.g. x=5) or press the button below\r\n          </h1>\r\n        )}\r\n      </div>\r\n      <IconButton className={classes.addButton} onClick={addVariable}>\r\n        <AddIcon />\r\n      </IconButton>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  module: state.module,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  calc_addVariable,\r\n  calc_removeVariable,\r\n})(withStyles(styles)(CalcVariables));\r\n","// React\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\n\r\n// MUI\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\n\r\n// Components\r\nimport Calculator from \"./Calculator\";\r\nimport CalcVariables from \"./CalcVariables\";\r\n\r\n// Math related\r\nimport mathquillToMathJS from \"../../../util/latex/preprocessMathQuill\";\r\nimport { addStyles, EditableMathField, StaticMathField } from \"react-mathquill\";\r\nimport * as math from \"mathjs\";\r\nimport { NumPad, SymbolPad } from \"./CalcTools\";\r\n\r\nconst parser = math.parser();\r\n\r\nconst styles = (theme) => ({\r\n  ...theme.spreadIt,\r\n  root: {\r\n    margin: \"auto\",\r\n  },\r\n});\r\n\r\nexport const CalculatorModule = (props) => {\r\n  const { classes } = props;\r\n\r\n  return (\r\n    <Grid container spacing={2} className={classes.root}>\r\n      <Grid item xs={8}>\r\n        <Paper className={classes.paper}>\r\n          <Calculator parser={parser} />\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <CalcVariables parser={parser} />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(CalculatorModule);\r\n","// React\r\n\r\nimport { Paper } from \"@material-ui/core\";\r\nimport CalculatorModule from \"../components/Modules/Calculator/CalculatorModule\";\r\n\r\n// MUI Stuff\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\n\r\nconst styles = (theme) => ({\r\n  ...theme.spreadIt,\r\n  root: {\r\n    marginLeft: 100, // temporary until john fixes his stuff\r\n    marginRight: 30,\r\n    marginTop: 50,\r\n    paddingLeft: 50,\r\n    paddingRight: 50,\r\n    paddingTop: 30,\r\n    minHeight: \"90%\",\r\n  },\r\n});\r\n\r\nconst Modules = (props) => {\r\n  const { classes } = props;\r\n  return (\r\n    <div className={classes.root}>\r\n      <CalculatorModule />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(Modules);\r\n"],"sourceRoot":""}