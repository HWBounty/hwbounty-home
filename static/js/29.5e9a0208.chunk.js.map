{"version":3,"sources":["pages/viewSchedule.js"],"names":["Schedule","props","state","scheduleData","fetching","tab","a","this","location","id","pathname","split","pop","query","search","axios","get","catch","console","trace","res","data","nameOverrides","JSON","parse","replace","schedule","setState","event","newValue","self","style","width","maxWidth","margin","display","verticalAlign","align","value","indicatorColor","textColor","onChange","handleTabChange","variant","scrollButtons","label","DisplayedScheduleDay","day","paddingBottom","paddingLeft","paddingRight","textAlign","name","height","marginRight","t","src","user","pfp","publicID","marginLeft","moment","parseInt","lastUpdated","fromNow","description","paddingTop","borderTop","onClick","history","push","disabled","localStorage","getItem","schoologyKey","fetchScheduleData","Component","classes","dayschedule","map","x","Object","assign","period","marginBottom","children","React","Children","toArray","timeStart","timeEnd","length","renderPeriods","connect","withRouter"],"mappings":"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","file":"static/js/29.5e9a0208.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nimport {\n  Avatar,\n  Button,\n  Card,\n  Container,\n  List,\n  Paper,\n  Tab,\n  Tabs,\n  Typography,\n} from \"@material-ui/core\";\n\nimport axios from \"axios\";\n\nimport { connect } from \"react-redux\";\n\nimport moment from \"moment\";\n\nimport ReactMarkdown from \"react-markdown\";\n\nimport { withRouter } from \"react-router-dom\";\n\nimport t from \"../util/localization/localization\";\n\nclass Schedule extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      scheduleData: null,\n      fetching: false,\n      tab: 0,\n    };\n  }\n  async fetchScheduleData() {\n    if (this.state.scheduleData) return;\n    const location = this.props.location;\n    let id =\n      location.pathname.split(\"/\").pop() ||\n      location?.state?.query ||\n      location.search.split(\"?id=\").pop();\n    let res = await axios\n      .get(`https://api.hwbounty.help/schedules/view/${id}`)\n      .catch(console.trace);\n    if (res.data) {\n      res.data.nameOverrides = JSON.parse(\n        res.data.nameOverrides.replace(/\\\\\"/g, '\"')\n      );\n      res.data.schedule = JSON.parse(res.data.schedule);\n      this.setState({ scheduleData: res.data });\n    }\n  }\n  componentDidMount(props) {\n    this.props = props;\n  }\n  handleTabChange(event, newValue, self) {\n    self.setState({ tab: newValue });\n  }\n  render() {\n    if (!this.state.scheduleData && !this.state.fetching) {\n      this.setState({ fetching: true });\n      this.fetchScheduleData();\n      return <br />;\n    }\n    if (this.state.scheduleData) {\n      return (\n        <Container>\n          <Paper\n            style={{\n              width: \"40%\",\n              maxWidth: \"40%\",\n              margin: \"5%\",\n              display: \"inline-block\",\n              verticalAlign: \"middle\",\n            }}\n            align=\"left\"\n          >\n            <Tabs\n              value={this.state.tab}\n              indicatorColor=\"primary\"\n              textColor=\"primary\"\n              onChange={(event, value) => {\n                this.handleTabChange(event, value, this);\n              }}\n              variant=\"scrollable\"\n              scrollButtons=\"auto\"\n            >\n              <Tab label=\"Mon\" />\n              <Tab label=\"Tue\" />\n              <Tab label=\"Wed\" />\n              <Tab label=\"Thu\" />\n              <Tab label=\"Fri\" />\n              <Tab label=\"Sat\" />\n              <Tab label=\"Sun\" />\n            </Tabs>\n            <List>\n              {this.state.tab === 0 && (\n                <DisplayedScheduleDay\n                  day={this.state.tab}\n                  data={this.state.scheduleData}\n                />\n              )}\n              {this.state.tab === 1 && (\n                <DisplayedScheduleDay\n                  day={this.state.tab}\n                  data={this.state.scheduleData}\n                />\n              )}\n              {this.state.tab === 2 && (\n                <DisplayedScheduleDay\n                  day={this.state.tab}\n                  data={this.state.scheduleData}\n                />\n              )}\n              {this.state.tab === 3 && (\n                <DisplayedScheduleDay\n                  day={this.state.tab}\n                  data={this.state.scheduleData}\n                />\n              )}\n              {this.state.tab === 4 && (\n                <DisplayedScheduleDay\n                  day={this.state.tab}\n                  data={this.state.scheduleData}\n                />\n              )}\n              {this.state.tab === 5 && (\n                <DisplayedScheduleDay\n                  day={this.state.tab}\n                  data={this.state.scheduleData}\n                />\n              )}\n              {this.state.tab === 6 && (\n                <DisplayedScheduleDay\n                  day={this.state.tab}\n                  data={this.state.scheduleData}\n                />\n              )}\n            </List>\n          </Paper>\n          <Card\n            style={{\n              display: \"inline-block\",\n              width: \"40%\",\n              margin: \"5%\",\n              paddingBottom: \"1vh\",\n              paddingLeft: \"5%\",\n              paddingRight: \"5%\",\n              textAlign: \"left\",\n              verticalAlign: \"middle\",\n            }}\n          >\n            <Typography\n              variant=\"h4\"\n              style={{\n                textAlign: \"center\",\n              }}\n            >\n              {this.state.scheduleData.name}\n            </Typography>\n            <Container\n              style={{\n                width: \"100%\",\n                height: \"10%\",\n              }}\n            >\n              <span>\n                <Typography\n                  variant=\"caption\"\n                  style={{\n                    textAlign: \"left\",\n                    marginRight: \"3%\",\n                  }}\n                >\n                  {t(\"viewSchedule.by\")}\n                </Typography>\n                <Avatar\n                  src={this.state.scheduleData.user.pfp}\n                  align=\"left\"\n                  style={{\n                    display: \"inline-block\",\n                    verticalAlign: \"middle\",\n                  }}\n                >\n                  {this.state.scheduleData.user.publicID}\n                </Avatar>\n                <Typography\n                  variant=\"h5\"\n                  style={{\n                    verticalAlign: \"middle\",\n                    marginLeft: \"3%\",\n                    display: \"inline-block\",\n                  }}\n                >\n                  {this.state.scheduleData.user.publicID}\n                </Typography>\n              </span>\n            </Container>\n            <Typography>\n              {t(\"viewSchedule.lastUpdated\")}{\" \"}\n              {moment(parseInt(this.state.scheduleData.lastUpdated)).fromNow()}\n            </Typography>\n            <ReactMarkdown>{this.state.scheduleData.description}</ReactMarkdown>\n\n            <Container\n              style={{\n                paddingTop: \"1vh\",\n                borderTop: \"2px solid rgba(160, 160, 160, 0.2)\",\n                textAlign: \"center\",\n              }}\n            >\n              <Button\n                onClick={() =>\n                  this.props.history.push(\n                    `/schedule/set/${this.props.location.pathname\n                      .split(\"/\")\n                      .pop()}`\n                  )\n                }\n                disabled={\n                  !JSON.parse(localStorage.getItem(\"user\") || \"[]\")\n                    ?.schoologyKey\n                }\n              >\n                {JSON.parse(localStorage.getItem(\"user\") || \"[]\")?.schoologyKey\n                  ? \"Use this Schedule\"\n                  : \"Link School Account First\"}\n              </Button>\n            </Container>\n          </Card>\n        </Container>\n      );\n    }\n    return null;\n  }\n}\nconst DisplayedScheduleDay = (props) => {\n  const classes = props.classes;\n  const data = props.data;\n  const day = props.day;\n  let overrides = data.nameOverrides;\n  let dayschedule = data.schedule[\n    [\n      \"monday\",\n      \"tuesday\",\n      \"wednesday\",\n      \"thursday\",\n      \"friday\",\n      \"saturday\",\n      \"sunday\",\n    ][day]\n  ].map((x) => {\n    return Object.assign(x, {\n      period: data.nameOverrides[x.period] || x.period,\n    });\n  });\n  const renderPeriods = () => {\n    let children = React.Children.toArray(\n      dayschedule.map((x) => {\n        return (\n          <Container>\n            <Typography variant=\"h4\">{x.period}</Typography>\n            <Typography variant=\"h6\">{x.timeStart}</Typography>\n            <Typography variant=\"h6\">{x.timeEnd}</Typography>\n          </Container>\n        );\n      })\n    );\n    if (!children.length)\n      return <Typography variant=\"h3\">{t(\"viewSchedule.noSchool\")}</Typography>;\n    return children;\n  };\n  return (\n    <Container\n      style={{\n        marginBottom: \"5%\",\n      }}\n    >\n      {renderPeriods()}\n    </Container>\n  );\n};\nexport default connect()(withRouter(Schedule));\n"],"sourceRoot":""}