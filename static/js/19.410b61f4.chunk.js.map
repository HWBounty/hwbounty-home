{"version":3,"sources":["util/notifications.js","components/Home/CTime.js","components/Calendar/PeriodList.js","components/Calendar/DesktopSchedule.js","components/Calendar/Schedule.js","util/getScheduleTimePhrase.js","util/getScheduleTimeEnd.js","components/Calendar/MobileSchedule.js","pages/schedule.js"],"names":["Notifications","Notification","permission","requestPermission","icon","img","title","text","body","image","error","CTime2","props","Typography","variant","style","fontSize","fontFamily","moment","format","fontWeight","useStyles","makeStyles","theme","cardTitle","cardSubtitles1","card","boxShadow","generatePeriodColors","stops","retarr","index","push","cardWidth","cardHeight","PeriodButton","classes","UI","Card","borderRadius","backgroundColor","color","width","height","display","padding","flexDirection","alignItems","margin","className","name","startTime","endTime","duration","connect","state","periodData","scheduleData","zoomLinkInfo","offset","scheduleDay","Date","now","ogHasOffset","dotw","isoWeekday","allClasses","Map","nameOverrides","JSON","parse","schedule","convertedMoment","tz","timePeriod","utcOffset","currentMoment","length","forEach","x","set","course","id","today","colors","map","i","courseInfo","has","period","value","get","course_title","zoom","links","linkGroup","link","decodeHTML","flat","timeStart","add","unix","timeEnd","tSS","tES","nofill","filter","parsePeriods","periodMapped","Math","round","React","Children","toArray","root","border","marginTop","paddingBottom","cursor","position","fullHeight","minHeight","maxHeight","background","popupTitle","themedText","user","forceUpdate","useForceUpdate","useState","speedDialOpen","setSpeedDialOpen","alternateScheduleDialog","setAlternateScheduleDialog","handleClose","sleep","TetLib","speedDialActions","authenticated","privateID","createdBy","Today","runID","useEffect","run","a","justifyContent","maxwidth","flexGrow","document","getElementById","marginLeft","marginRight","offsetWidth","Divider","setTimeout","Container","SpeedDial","ariaLabel","speedDial","hidden","SpeedDialIcon","onClose","onOpen","open","bottom","right","action","SpeedDialAction","tooltipTitle","onClick","Dialog","fullWidth","maxWidth","aria-labelledby","DialogTitle","DialogContent","string","gt","replace","$0","$1","String","fromCharCode","toLowerCase","parseInt","substr","hasOwnProperty","useButtonStyles","periodID","enqueueSnackbar","useSnackbar","timePassed","expanded","setExpanded","notDoneCol","marginBottom","align","window","innerWidth","left","t","mins","Collapse","in","z","Button","e","event","stopPropagation","newWindow","opener","handleZoomLinkClicked","fetchAndSet","setCourseInfo","setScheduleData","setCannotFetch","localStorage","getItem","console","trace","dayOffset","s","fetching","setFetching","cannotFetch","linkUserSchoology","CircularProgress","periods","splice","p","getTimePhrase","scheduleOBJ","getPeriodName","formattedClasses","clas","currentClass","endingInString","asHours","asMinutes","asSeconds","lastTimeBasedNotif","pushNotification","undefined","firstName","nextClass","startingInString","lastClass","pop","lastEnded","getScheduleTimeEnd","sort","b","withSnackbar","setOffset","popupForceClosed","setPopupForceClosed","adjustedMoment","borderWidth","IconButton","ChevronLeft","ChevronRight","verticalAlign","minWidth","textAlign","Snackbar","Fragment","Alert","severity","reason","fromNow","size","paddingTop","updateSchedule","addEventListener","removeEventListener","cachedSchedule","setSchedule","removeItem","store","dispatch","DesktopSchedule","MobileSchedule"],"mappings":"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","file":"static/js/19.410b61f4.chunk.js","sourcesContent":["class Notifications {\n\tconstructor() {\n\t\tif (Notification.permission !== \"granted\") {\n\t\t\tNotification.requestPermission();\n\t\t}\n\t}\n\tstatic pushNotification(icon, img, title, text) {\n\t\ttry {\n\t\t\tif (Notification.permission !== \"granted\") {\n\t\t\t\tNotification.requestPermission();\n\t\t\t}\n\t\t\treturn new Notification(title || \"HWBounty Notification\", {body: text || \"\", icon: icon, image: img});\n\t\t} catch (error) {\n\t\t\t\n\t\t}\n\t\t\n\t}\n}\nexport default Notifications;","import moment from \"moment\";\n\nimport { Typography } from \"@material-ui/core\";\n\nexport const CTime = (props) => {\n  return (\n    <div\n      style={{\n        verticalAlign: \"middle\",\n        width: \"100%\",\n        minWidth: \"100%\",\n      }}\n    >\n      <Typography\n        variant=\"h5\"\n        style={{\n          fontSize: \"3.5vw\",\n          fontFamily: \"Poppins\",\n        }}\n      >\n        {\n          /*moment().format(window.innerWidth <= 1368 ? \"M/D/YYYY h:mm:ss A\" : \"dddd MMMM Do h:mm:ss A\")*/ moment().format(\n            \"h:mm:ss A\"\n          )\n        }\n      </Typography>\n      <Typography\n        variant=\"h5\"\n        style={{\n          fontSize: \"1.65vw\",\n          fontFamily: \"Poppins\",\n          fontWeight: \"20\",\n        }}\n      >\n        {\n          /*moment().format(window.innerWidth <= 1368 ? \"M/D/YYYY h:mm:ss A\" : \"dddd MMMM Do h:mm:ss A\")*/ moment().format(\n            \"dddd M/D/YYYY\"\n          )\n        }\n      </Typography>\n    </div>\n  );\n};\nexport const CTime2 = (props) => {\n  return (\n    <div>\n      <Typography\n        variant=\"h5\"\n        style={{\n          fontSize: \"3rem\",\n          fontFamily: \"Poppins\",\n        }}\n      >\n        {\n          /*moment().format(window.innerWidth <= 1368 ? \"M/D/YYYY h:mm:ss A\" : \"dddd MMMM Do h:mm:ss A\")*/ moment().format(\n            \"h:mm:ss A\"\n          )\n        }\n      </Typography>\n      <Typography\n        variant=\"h5\"\n        style={{\n          fontSize: \"2rem\",\n          fontFamily: \"Poppins\",\n          fontWeight: \"20\",\n        }}\n      >\n        {\n          /*moment().format(window.innerWidth <= 1368 ? \"M/D/YYYY h:mm:ss A\" : \"dddd MMMM Do h:mm:ss A\")*/ moment().format(\n            \"dddd M/D/YYYY\"\n          )\n        }\n      </Typography>\n    </div>\n  );\n};\nexport default CTime;\n","import React from \"react\";\n\nimport { makeStyles, Card, Typography } from \"@material-ui/core\";\n\nimport { connect } from \"react-redux\";\n\nimport moment from \"moment\";\nimport \"moment-timezone\";\nconst useStyles = makeStyles((theme) => ({\n  cardTitle: {\n    fontFamily: \"Raleway\",\n    fontSize: \"2.5rem\",\n  },\n  cardSubtitles1: {\n    fontFamily: \"Raleway\",\n    fontSize: \"1.25rem\",\n    fontWeight: \"200\",\n  },\n  card: {\n    boxShadow: (theme) =>\n      theme === 1\n        ? \"0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23)!important\"\n        : \"0 3px 6px rgba(0,0,0,0.1), 0 3px 6px rgba(0,0,0,0.01)!important\",\n  },\n}));\nconst generatePeriodColors = (stops, theme) => {\n  let retarr = [];\n  for (let index = 0; index < stops; index++)\n    //50 => 25, 70 => 30 for Dark mode\n\n    retarr.push([0 + (index / stops) * 360, 0, theme ? 30 : 70]);\n  return retarr;\n};\nconst parsePeriods = (scheduleData, zoomLinkInfo, theme, offset) => {\n  let scheduleDay = moment(Date.now());\n  let ogHasOffset = offset;\n  if (offset)\n    offset = (scheduleDay.isoWeekday() - 1 + (((offset % 7) + 7) % 7)) % 7;\n  else offset = scheduleDay.isoWeekday() - 1;\n  let dotw = [\n    \"monday\",\n    \"tuesday\",\n    \"wednesday\",\n    \"thursday\",\n    \"friday\",\n    \"saturday\",\n    \"sunday\",\n  ][offset];\n  let allClasses = scheduleData.classes || {};\n  let classes = new Map();\n  let nameOverrides = JSON.parse(scheduleData.schedule.nameOverrides);\n  let convertedMoment = moment()\n    .tz(JSON.parse(scheduleData.schedule.schedule).timePeriod)\n    .utcOffset();\n  let currentMoment = moment().utcOffset();\n  if (zoomLinkInfo?.length)\n    zoomLinkInfo.forEach((x) => {\n      classes.set(x.course.id, x);\n    });\n  let today = JSON.parse(scheduleData.schedule.schedule)[dotw];\n  let colors = generatePeriodColors(today.length, theme);\n  return today\n    .map((x, i) => {\n      let courseInfo = classes.has(\n        allClasses[x.period] && allClasses[x.period].value\n      )\n        ? classes.get(allClasses[x.period] && allClasses[x.period].value)\n        : null;\n      // if (!(courseInfo) && x.period !== \"break\") return null;\n      return {\n        period: nameOverrides[x.period] || x.period,\n        color: colors[i],\n        name:\n          courseInfo && courseInfo.course\n            ? courseInfo.course.course_title\n            : nameOverrides[x.period],\n        zoom:\n          courseInfo && courseInfo.links\n            ? courseInfo.links\n              .map((linkGroup) => {\n                return linkGroup.links.map((link) => {\n                  return { link: link, title: decodeHTML(linkGroup.title) };\n                });\n              })\n              .flat(10000)\n            : [],\n        timeStart:\n          moment(x.timeStart, \"hh:mma\")\n            .add((convertedMoment - currentMoment) / 60, \"hours\")\n            .unix() * 1000,\n        timeEnd:\n          moment(x.timeEnd, \"hh:mma\")\n            .add((convertedMoment - currentMoment) / 60, \"hours\")\n            .unix() * 1000,\n        tSS: x.timeStart,\n        tES: x.timeEnd,\n        duration: x.timeEnd - x.timeStart,\n        nofill: ogHasOffset,\n      };\n    })\n    .filter((x) => x);\n};\nconst PeriodList = (props) => {\n  const classes = useStyles(props.UI.theme);\n  const periodData = parsePeriods(\n    props.scheduleData,\n    props.zoomLinkInfo,\n    props.UI.theme,\n    props.offset\n  );\n  let periodColors = generatePeriodColors(periodData.length, 0);\n  let periodMapped = periodData.map((periodData, i) => {\n    return (\n      <PeriodButton\n        color={props.UI.theme ? \"rgb(40,40,40)\" : `rgb(250,250,250)`}\n        name={periodData.name}\n        UI={props.UI}\n        startTime={periodData.tSS}\n        endTime={periodData.tES}\n        duration={`${Math.round(\n          (periodData.timeEnd - periodData.timeStart) / (1000 * 60)\n        )} minutes`}\n      />\n    );\n  });\n\n  return <div>{React.Children.toArray(periodMapped)}</div>;\n};\nconst cardWidth = \"25vw\";\nconst cardHeight = \"9rem\";\nconst PeriodButton = (props) => {\n  const classes = useStyles(props.UI.theme);\n  return (\n    <Card\n      style={{\n        borderRadius: \"0.5rem\",\n        backgroundColor: props.color,\n        width: `clamp(${cardWidth},${cardWidth},${cardWidth})`,\n        height: `clamp(${cardHeight},${cardHeight},${cardHeight})`,\n        display: \"flex\",\n        padding: \"1.5rem\",\n        flexDirection: \"column\",\n        alignItems: \"flex-start\",\n        margin: \"2rem\",\n      }}\n      className={`${classes.card}`}\n    >\n      <Typography\n        className={`${classes.cardTitle}`}\n        style={{ color: props.UI.theme === 1 ? \"white\" : \"rgb(110,110,110)\" }}\n      >\n        {props.name}\n      </Typography>\n      <Typography\n        className={`${classes.cardSubtitles1}`}\n      >{`${props.startTime} - ${props.endTime} (${props.duration})`}</Typography>\n    </Card>\n  );\n};\nconst mapStateToProps = (state) => ({\n  UI: state.UI,\n});\n\nexport default connect(mapStateToProps)(PeriodList);\n","// React\nimport React, { useState, useEffect } from \"react\";\n\n// MUI\nimport Card from \"@material-ui/core/Card\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport { Container, Dialog, DialogContent, DialogTitle, Divider, Typography } from \"@material-ui/core\";\nimport { SpeedDial, SpeedDialAction, SpeedDialIcon } from \"@material-ui/lab\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { Today } from \"@material-ui/icons\";\n\n// Redux\nimport { connect } from \"react-redux\";\n\nimport { CTime2 } from \"../Home/CTime\";\nimport PeriodList from \"./PeriodList\";\nimport TetLib from \"../../util/TetLib\";\nimport useForceUpdate from \"../../util/useForceUpdate\";\n\nconst decodeHTML = (string) => {\n\tconst map = { gt: \">\" /* , … */ };\n\treturn string.replace(/&(#(?:x[0-9a-f]+|\\d+)|[a-z]+);?/gi, ($0, $1) => {\n\t\tif ($1[0] === \"#\") {\n\t\t\treturn String.fromCharCode(\n\t\t\t\t$1[1].toLowerCase() === \"x\"\n\t\t\t\t\t? parseInt($1.substr(2), 16)\n\t\t\t\t\t: parseInt($1.substr(1), 10)\n\t\t\t);\n\t\t} else {\n\t\t\treturn map.hasOwnProperty($1) ? map[$1] : $0;\n\t\t}\n\t});\n};\nconst useButtonStyles = makeStyles({\n\troot: {\n\t\tborder: 0,\n\t\tborderRadius: \"1rem!important\",\n\t\tmarginTop: \"2vw\",\n\t\tpaddingBottom: 10,\n\t\tdisplay: \"block\",\n\t\tcursor: \"pointer\",\n\t\tposition: \"relative\",\n\t\tboxShadow: \" 4px 6px 5px 4px rgba(0,0,0,0.2)!important\",\n\t},\n});\nconst useStyles = makeStyles((theme) => ({\n\tfullHeight: {\n\t\theight: \"100%\",\n\t\tminHeight: \"100%\",\n\t\tmaxHeight: \"100%\",\n\t},\n\tcard: {\n\t\tboxShadow: (theme) =>\n\t\t\ttheme === 1\n\t\t\t\t? \"0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23)!important\"\n\t\t\t\t: \"0 3px 6px rgba(0,0,0,0.1), 0 3px 6px rgba(0,0,0,0.01)!important\",\n\t\tbackground: (theme) => (theme === 1 ? \"rgb(40,40,40)\" : \"rgb(250,250,250)\"),\n\t\tborderRadius: \"1vmin\",\n\t},\n\tpopupTitle: {\n\t\tfontSize: \"1.5rem\",\n\t\tfontWeight: \"bold\",\n\t\tfontFamily: \"Roboto, sans-serif\",\n\t},\n\tthemedText: {\n\t\tcolor: (theme) => (theme === 1 ? \"rgb(255,255,255)!important\" : \"rgb(0,0,0)!o\"),\n\t}\n}));\nconst DesktopSchedulePage = (props) => {\n\tconst {\n\t\tUI: { theme },\n\t\tuser,\n\t\tschedule,\n\t} = props;\n\tconst forceUpdate = useForceUpdate();\n\tconst [scheduleData, setScheduleData] = useState(false);\n\tconst [speedDialOpen, setSpeedDialOpen] = useState(false);\n\tconst [alternateScheduleDialog, setAlternateScheduleDialog] = useState(false);\n\tconst handleOpen = () => {\n\t\tsetSpeedDialOpen(true);\n\t};\n\n\tconst handleClose = () => {\n\t\tsetSpeedDialOpen(false);\n\t};\n\tconst handleCloseAlternateScheduleDialog = () => {\n\t\tsetAlternateScheduleDialog(false);\n\t};\n\tconst { sleep } = TetLib;\n\tconst speedDialActions = [];\n\tif (user?.authenticated) {\n\t\tspeedDialActions.push({ icon: <EditIcon />, name: \"Create a new event\" });\n\t}\n\tif (user?.user?.privateID === schedule?.schedule?.createdBy) {\n\t\tspeedDialActions.push({\n\t\t\ticon: <Today />,\n\t\t\tname: \"Add an Alternate Schedule Day\",\n\t\t\trunID: \"openAlternateSchedule\"\n\t\t});\n\t}\n\tconst onSpeedDialAction = (name) => {\n\t\thandleClose()\n\t\tif (name === \"openAlternateSchedule\") {\n\t\t\tsetAlternateScheduleDialog(true);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tlet run = true;\n\t\t(async () => {\n\t\t\tawait sleep(250 - (Date.now() % 250));\n\t\t\tlet lastTime = Date.now();\n\t\t\twhile (run) {\n\t\t\t\tawait sleep(250 - (Date.now() % 250));\n\t\t\t\tforceUpdate();\n\t\t\t\tlastTime = Date.now();\n\t\t\t}\n\t\t})();\n\t\treturn () => {\n\t\t\trun = false;\n\t\t};\n\t}, []);\n\tconst renderMain = () => {\n\t\tif (!document.getElementById(\"divSize\")) {\n\t\t\tsetTimeout(() => forceUpdate(), 1);\n\t\t\treturn null;\n\t\t}\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\t// width: \"clamp(0vw, 30%, 50vw)\",\n\t\t\t\t\tflexGrow: \"1\",\n\t\t\t\t\tmarginTop: \"2rem\",\n\t\t\t\t\tmarginLeft: \"5rem\",\n\t\t\t\t\tposition: \"fixed\",\n\t\t\t\t\tmarginRight: \"5rem\",\n\t\t\t\t}}\n\t\t\t\tclassName={`${classes.fullHeight}`}\n\t\t\t>\n\t\t\t\t<Card\n\t\t\t\t\tclassName={classes.card}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tmargin: \"0 auto\",\n\t\t\t\t\t\tmaxHeight: \"95%\",\n\t\t\t\t\t\tminHeight: \"95%\",\n\t\t\t\t\t\tpadding: \"1rem\",\n\t\t\t\t\t\twidth: `calc(${document.getElementById(\"divSize\").offsetWidth\n\t\t\t\t\t\t\t}px - 6rem)`,\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<CTime2 />\n\t\t\t\t\t<br />\n\t\t\t\t\t<Divider />\n\t\t\t\t</Card>\n\t\t\t</div>\n\t\t);\n\t};\n\tconst classes = useStyles(theme);\n\tif (!schedule) return null;\n\treturn (\n\t\t<div\n\t\t\tstyle={{\n\t\t\t\tdisplay: \"flex\",\n\t\t\t\tflexDirection: \"row\",\n\t\t\t\tjustifyContent: \"space-between\",\n\t\t\t\tmaxwidth: \"calc(100vw - 5rem)\",\n\t\t\t\tposition: \"relative\",\n\t\t\t}}\n\t\t\tclassName={`${classes.fullHeight}`}\n\t\t>\n\t\t\t<div style={{ flexGrow: \"1\" }} id=\"divSize\">\n\t\t\t\t{renderMain()}\n\t\t\t</div>\n\t\t\t<Container\n\t\t\t\tstyle={{\n\t\t\t\t\tdisplay: \"flex\",\n          /*backgroundColor: \"black\",*/ justifyContent: \"center\",\n\t\t\t\t\twidth: \"33vw\",\n\t\t\t\t}}\n\t\t\t\tclassName={`${classes.fullHeight}`}\n\t\t\t>\n\t\t\t\t<PeriodList scheduleData={schedule} zoomLinkInfo={[]} offset={0} />\n\t\t\t</Container>\n\t\t\t<SpeedDial\n\t\t\t\tariaLabel=\"SpeedDial openIcon example\"\n\t\t\t\tclassName={classes.speedDial}\n\t\t\t\thidden={speedDialActions.length == 0}\n\t\t\t\ticon={<SpeedDialIcon />}\n\t\t\t\tonClose={handleClose}\n\t\t\t\tonOpen={handleOpen}\n\t\t\t\topen={speedDialOpen}\n\t\t\t\tstyle={{ position: \"fixed\", bottom: \"16px\", right: \"16px\" }}\n\t\t\t>\n\t\t\t\t{speedDialActions.map((action) => (\n\t\t\t\t\t<SpeedDialAction\n\t\t\t\t\t\tkey={action.name}\n\t\t\t\t\t\ticon={action.icon}\n\t\t\t\t\t\ttooltipTitle={action.name}\n\t\t\t\t\t\tonClick={() => { onSpeedDialAction(action.runID) }}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</SpeedDial>\n\t\t\t<Dialog\n\t\t\t\tfullWidth={true}\n\t\t\t\tmaxWidth={\"xl\"}\n\t\t\t\topen={alternateScheduleDialog}\n\t\t\t\tonClose={handleCloseAlternateScheduleDialog}\n\t\t\t\taria-labelledby=\"max-width-dialog-title\"\n\t\t\t>\n\t\t\t\t<DialogTitle className={`${classes.themedText}`}>\n\t\t\t\t\tCreate an Alternate Schedule Day </DialogTitle>\n\t\t\t\t<DialogContent style={{ height: \"512px\" }}>\n\t\t\t\t\t<Typography color=\"textPrimary\">hi!</Typography>\n\t\t\t\t</DialogContent>\n\t\t\t</Dialog>\n\t\t</div>\n\t);\n};\n\nconst mapStateToProps = (state) => ({\n\tUI: state.UI,\n\tuser: state.user,\n});\nconst mapActionsToProps = {};\nexport default connect(mapStateToProps, mapActionsToProps)(DesktopSchedulePage);\n","// React\nimport React, { useEffect, useState } from \"react\";\n\n// MUI\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport moment from \"moment-timezone\";\nimport { CircularProgress, Container } from \"@material-ui/core\";\n\n// Redux\nimport { connect } from \"react-redux\";\nimport { linkUserSchoology } from \"../../redux/actions/userActions\";\n\nimport axios from \"axios\";\n// Translations\nimport t from \"../../util/localization/localization\";\nimport { useSnackbar } from \"notistack\";\nimport TetLib from \"../../util/TetLib\";\n\n\nconst decodeHTML = (string) => {\n  const map = { gt: \">\" /* , … */ };\n  return string.replace(/&(#(?:x[0-9a-f]+|\\d+)|[a-z]+);?/gi, ($0, $1) => {\n    if ($1[0] === \"#\") {\n      return String.fromCharCode(\n        $1[1].toLowerCase() === \"x\"\n          ? parseInt($1.substr(2), 16)\n          : parseInt($1.substr(1), 10)\n      );\n    } else {\n      return map.hasOwnProperty($1) ? map[$1] : $0;\n    }\n  });\n};\nconst useButtonStyles = makeStyles({\n  root: {\n    border: 0,\n    borderRadius: \"1rem!important\",\n    marginTop: \"2vw\",\n    paddingBottom: 10,\n    display: \"block\",\n    cursor: \"pointer\",\n    position: \"relative\",\n    boxShadow: (theme) =>\n      theme === 1\n        ? \"0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23)!important\"\n        : \"0 3px 6px rgba(0,0,0,0.1), 0 3px 6px rgba(0,0,0,0.01)!important\",\n  },\n});\n\nconst generatePeriodColors = (stops, theme) => {\n  return [\n    [248, 255, 229],\n    [6, 214, 160],\n    [27, 154, 170],\n    [44, 66, 63],\n    [255, 196, 61],\n    [232, 93, 117],\n    [153, 95, 163],\n    [255, 74, 28],\n  ].splice(0, stops);\n\n};\n\nconst PeriodButton = (props) => {\n  const classes = useButtonStyles();\n  const {\n    theme,\n    period,\n    name,\n    zoom,\n    color,\n    timeStart,\n    timeEnd,\n    tSS,\n    tES,\n    duration,\n    nofill,\n    periodID,\n  } = props;\n  //% from 0 to 100\n  const { enqueueSnackbar } = useSnackbar();\n  let timePassed = 0;\n  //If we are past the end time, set time passed to 100%\n  if (nofill > 0) timePassed = 0;\n  else if (nofill < 0) timePassed = 100;\n  else if (Date.now() - timeEnd > 0) timePassed = 100;\n  //If we are in class, set time passed to (current-start)/(End-start) * 100\n  else if (Date.now() - timeStart > 0 && timeEnd - Date.now() > 0)\n    timePassed = ((Date.now() - timeStart) * 100) / (timeEnd - timeStart);\n  //If the class is upcoming, set time passed to 0\n  else timePassed = 0;\n  const [expanded, setExpanded] = React.useState(false);\n  const handleButtonClicked = () => {\n    if (zoom.length) setExpanded(!expanded);\n    else enqueueSnackbar(\"No Zoom Links found for this class!\");\n  };\n\n  const handleZoomLinkClicked = (event, link) => {\n    event.stopPropagation();\n    const newWindow = window.open(link, \"_blank\", \"noopener,noreferrer\");\n    if (newWindow) newWindow.opener = null;\n  };\n  let notDoneCol = color.filter((x) => true);\n\n  //Set to 40 for Darkmode\n  notDoneCol[2] = theme ? 76 : 90;\n  color[2] = theme ? 60 : 80;\n  if (periodID === \"break\") {\n    notDoneCol[2] = theme ? 1 : 100;\n    color[2] = theme ? 10 : 95;\n  }\n  return (\n    <div\n      style={{\n        marginBottom: \"2vh\",\n      }}\n    >\n      <Card\n        className={classes.root}\n        onClick={handleButtonClicked}\n        style={{\n          background: `linear-gradient(90deg, hsl(${color[0]},${color[1]}%,${color[2]\n            }%) 0%, hsl(${color[0]},${color[1]}%,${color[2]\n            }%) ${timePassed}%, hsl(${notDoneCol[0]},${notDoneCol[1]}%,${notDoneCol[2]\n            }%) ${timePassed + 0.000001}%, hsl(${notDoneCol[0]},${notDoneCol[1]\n            }%,${notDoneCol[2]}%) 100%)`,\n          borderRadius: \"0.1rem!important\",\n          padding: \"10px\",\n        }}\n      >\n        <Typography\n          variant=\"h5\"\n          align=\"left\"\n          style={{\n            marginLeft: \"4%\",\n            fontSize: window.innerWidth ** 0.4 + 32,\n            marginBottom: window.innerWidth <= 960 ? \"12%\" : \"6%\",\n            position: \"relative\",\n            marginTop: window.innerWidth <= 960 ? \"4%\" : \"2%\",\n            // left: \"5%\"\n          }}\n        >\n          {name}\n        </Typography>\n        {expanded ? null : (\n          <Typography\n            align=\"left\"\n            variant=\"h5\"\n            style={{\n              fontSize:\n                window.innerWidth <= 960\n                  ? window.innerWidth ** 0.3 + 10\n                  : window.innerWidth ** 0.4 + 10,\n              margin: 10,\n              marginBottom: 10,\n              marginTop: 0,\n              bottom: window.innerWidth <= 960 ? \"70%\" : \"1%\",\n              left: \"4%\",\n              bottom: \"10%\",\n              position: \"absolute\",\n              fontFamily: \"'Nunito'\",\n            }}\n          >\n            {t(\"schedule.minsFormatting\", {\n              period,\n              tSS,\n              tES,\n              mins: Math.round(duration / 60000),\n            })}\n          </Typography>\n        )}\n\n        <Collapse in={expanded}>\n          {React.Children.toArray(\n            zoom.map((z) => {\n              return (\n                <Button onClick={(e) => handleZoomLinkClicked(e, z.link)}>\n                  {z.title}\n                </Button>\n              );\n            })\n          )}\n        </Collapse>\n      </Card>\n    </div>\n  );\n};\n\nconst parsePeriods = (scheduleData, zoomLinkInfo, theme, offset) => {\n  let scheduleDay = moment(Date.now());\n  let ogHasOffset = offset;\n  if (offset)\n    offset = (scheduleDay.isoWeekday() - 1 + (((offset % 7) + 7) % 7)) % 7;\n  else offset = scheduleDay.isoWeekday() - 1;\n  let dotw = [\n    \"monday\",\n    \"tuesday\",\n    \"wednesday\",\n    \"thursday\",\n    \"friday\",\n    \"saturday\",\n    \"sunday\",\n  ][offset];\n  let allClasses = scheduleData.classes || {};\n  let classes = new Map();\n  let nameOverrides = JSON.parse(scheduleData.schedule.nameOverrides);\n  let convertedMoment = moment()\n    .tz(JSON.parse(scheduleData.schedule.schedule).timePeriod)\n    .utcOffset();\n  let currentMoment = moment().utcOffset();\n  if (zoomLinkInfo?.length)\n    zoomLinkInfo.forEach((x) => {\n      classes.set(x.course.id, x);\n    });\n  let today = JSON.parse(scheduleData.schedule.schedule)[dotw];\n  let colors = generatePeriodColors(today.length, theme);\n  return today\n    .map((x, i) => {\n      let courseInfo = classes.has(\n        allClasses[x.period] && allClasses[x.period].value\n      )\n        ? classes.get(allClasses[x.period] && allClasses[x.period].value)\n        : null;\n      // if (!(courseInfo) && x.period !== \"break\") return null;\n      return {\n        period: nameOverrides[x.period] || x.period,\n        periodID: x.period,\n        color: colors[i],\n        name:\n          courseInfo && courseInfo.course\n            ? courseInfo.course.course_title\n            : nameOverrides[x.period],\n        zoom:\n          courseInfo && courseInfo.links\n            ? courseInfo.links\n              .map((linkGroup) => {\n                return linkGroup.links.map((link) => {\n                  return { link: link, title: decodeHTML(linkGroup.title) };\n                });\n              })\n              .flat(10000)\n            : [],\n        timeStart:\n          moment(x.timeStart, \"hh:mma\")\n            .add((convertedMoment - currentMoment) / 60, \"hours\")\n            .unix() * 1000,\n        timeEnd:\n          moment(x.timeEnd, \"hh:mma\")\n            .add((convertedMoment - currentMoment) / 60, \"hours\")\n            .unix() * 1000,\n        tSS: x.timeStart,\n        tES: x.timeEnd,\n        duration: x.timeEnd - x.timeStart,\n        nofill: ogHasOffset,\n      };\n    })\n    .filter((x) => x);\n};\nlet done = false;\nconst fetchAndSet = async (setCourseInfo, setScheduleData, setCannotFetch) => {\n  try {\n    if (localStorage.getItem(\"cachedSchedule\"))\n      setScheduleData(JSON.parse(localStorage.getItem(\"cachedSchedule\")));\n    if (localStorage.getItem(\"cachedCourseInfo\"))\n      setCourseInfo(JSON.parse(localStorage.getItem(\"cachedCourseInfo\")));\n\n  } catch (error) {\n    console.trace(error);\n    setCannotFetch(true);\n  }\n};\nconst useForceUpdate = () => {\n  const set = useState(0)[1];\n  return () => set((s) => s + 1);\n};\nexport const Schedule = (props) => {\n  const {\n    UI: { theme },\n  } = props;\n  const dayOffset = props.dayOffset;\n  const forceUpdate = useForceUpdate();\n  useEffect(() => {\n    let run = true;\n    (async () => {\n      await TetLib.sleep(1000 - (Date.now() % 1000));\n      while (run) {\n        await TetLib.sleep(1000)\n        forceUpdate();\n      }\n    })();\n    return () => {\n      run = false;\n    }\n  }, [])\n  const [courseInfo, setCourseInfo] = useState(null);\n  const [scheduleData, setScheduleData] = useState(null);\n  const [fetching, setFetching] = useState(false);\n  const [cannotFetch, setCannotFetch] = useState(false);\n  if ((!scheduleData && !courseInfo) || (!scheduleData && localStorage.getItem(\"anonStorage\"))) {\n    if (!fetching) {\n      setFetching(true);\n      fetchAndSet(setCourseInfo, setScheduleData, setCannotFetch);\n      return null;\n    }\n    if (cannotFetch)\n      return (\n        <div>\n          <Typography>{t(\"schedule.linkSchoologyPrompt\")}</Typography>\n          <Button\n            variant=\"contained\"\n            onClick={(x) => {\n              linkUserSchoology();\n            }}\n          >\n            {t(\"schedule.linkSchoology\")}\n          </Button>\n        </div>\n      );\n    return (\n      <div>\n        <Typography>{t(\"schedule.fetching\")}</Typography>\n        <CircularProgress />\n      </div>\n    );\n  }\n  if (!scheduleData?.schedule)\n    return (\n      <div>\n        <Typography>{t(\"schedule.noSchedule\")}</Typography>\n      </div>\n    );\n  const periods = parsePeriods(scheduleData, courseInfo, theme, dayOffset);\n  return (\n    <Container style={{ marginBottom: \"50px\", width: \"100%\", padding: \"0px\" }}>\n      {React.Children.toArray(\n        periods.map((p) => {\n          return (\n            <PeriodButton\n              theme={theme}\n              period={p.period}\n              name={p.name}\n              zoom={p.zoom}\n              color={p.color}\n              timeStart={p.timeStart}\n              timeEnd={p.timeEnd}\n              tSS={p.tSS}\n              tES={p.tES}\n              duration={p.timeEnd - p.timeStart}\n              nofill={p.nofill}\n              periodID={p.periodID}\n            />\n          );\n        })\n      )}\n    </Container>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  UI: state.UI,\n});\n\nexport default connect(mapStateToProps)(Schedule);\n","import moment from \"moment\";\n\nexport const getTimePhrase = (offset) => {\n  try {\n    if (!localStorage.getItem(\"cachedSchedule\")) return \"\";\n    let scheduleOBJ = JSON.parse(localStorage.getItem(\"cachedSchedule\"));\n    let schedule = JSON.parse(scheduleOBJ.schedule.schedule);\n    let user = JSON.parse(localStorage.getItem(\"user\"));\n    let allClasses = scheduleOBJ.classes;\n    let convertedMoment = moment().tz(schedule.timePeriod).utcOffset();\n    let currentMoment = moment().utcOffset();\n    let currentTime = moment();\n    let getPeriodName = (periodID) => {\n      return (\n        JSON.parse(scheduleOBJ.schedule.nameOverrides)[periodID] || \"Break\"\n      );\n    };\n    let dotw = [\n      \"monday\",\n      \"tuesday\",\n      \"wednesday\",\n      \"thursday\",\n      \"friday\",\n      \"saturday\",\n      \"sunday\",\n    ][(moment().isoWeekday() - 1 + (offset || 0)) % 7];\n    let formattedClasses =\n      schedule[dotw] &&\n      schedule[dotw].map((clas) => {\n        return {\n          period: clas.period,\n          timeStart:\n            moment(clas.timeStart, \"hh:mma\")\n              .add((convertedMoment - currentMoment) / 60, \"hours\")\n              .unix() * 1000,\n          timeEnd:\n            moment(clas.timeEnd, \"hh:mma\")\n              .add((convertedMoment - currentMoment) / 60, \"hours\")\n              .unix() * 1000,\n        };\n      });\n\n    //Check for current class first\n    let currentClass = formattedClasses.filter(\n      (x) => x.timeStart < Date.now() && Date.now() < x.timeEnd\n    )[0];\n\n    if (currentClass) {\n      let endingInString = `${currentClass.timeEnd - Date.now() > 60000\n        ? currentClass.timeEnd - Date.now() > 3600000\n          ? `${Math.round(\n            moment.duration(currentClass.timeEnd - Date.now()).asHours()\n          )} hours`\n          : `${Math.round(\n            moment.duration(currentClass.timeEnd - Date.now()).asMinutes()\n          )} minutes`\n        : `${Math.round(\n          moment.duration(currentClass.timeEnd - Date.now()).asSeconds()\n        )} seconds`\n        }`;\n\n      //Try to push a notif if class is starting soon\n      if (\n        currentClass.timeEnd - Date.now() < 120 * 1000 &&\n        Date.now() - lastTimeBasedNotif > 240 * 1000\n      ) {\n        lastTimeBasedNotif = Date.now();\n\n        Notifications.pushNotification(\n          undefined,\n          undefined,\n          `${getPeriodName(currentClass.period)} is ending soon!`,\n          `Hey ${user?.firstName || \"\"}, ${getPeriodName(\n            currentClass.period\n          )} is about to end in ${endingInString}!`\n        );\n      }\n\n      return `${getPeriodName(\n        currentClass.period\n      )} ends in ${endingInString}`;\n    }\n    //Check for next upcoming class\n    let nextClass = formattedClasses.filter(\n      (x) => x.timeStart > Date.now()\n    )[0];\n\n    if (nextClass) {\n      let startingInString = `${nextClass.timeStart - Date.now() > 60000\n        ? nextClass.timeStart - Date.now() > 3600000\n          ? `${Math.round(\n            moment.duration(nextClass.timeStart - Date.now()).asHours()\n          )} hours`\n          : `${Math.round(\n            moment.duration(nextClass.timeStart - Date.now()).asMinutes()\n          )} minutes`\n        : `${Math.round(\n          moment.duration(nextClass.timeStart - Date.now()).asSeconds()\n        )} seconds`\n        }`;\n      if (\n        nextClass.timeStart - Date.now() < 120 * 1000 &&\n        Date.now() - lastTimeBasedNotif > 240 * 1000\n      ) {\n        lastTimeBasedNotif = Date.now();\n\n        Notifications.pushNotification(\n          undefined,\n          undefined,\n          `${getPeriodName(nextClass.period)} is starting soon!`,\n          `Hey ${user?.firstName || \"\"}, ${getPeriodName(\n            nextClass.period\n          )} is about to start in ${startingInString}!`\n        );\n      }\n\n      return `${getPeriodName(\n        nextClass.period\n      )} starts in ${startingInString}`;\n    }\n\n    //Check for what was the previous class\n    let lastClass = formattedClasses\n      .filter((x) => Date.now() > x.timeEnd)\n      .pop();\n    if (lastClass) {\n      let lastEnded = `${Date.now() - lastClass.timeEnd > 60000\n        ? Date.now() - lastClass.timeEnd > 60000\n          ? `${Math.round(\n            moment.duration(Date.now() - lastClass.timeEnd).asHours()\n          )} hours`\n          : `${Math.round(\n            moment.duration(Date.now() - lastClass.timeEnd).asMinutes()\n          )} minutes`\n        : `${Math.round(\n          moment.duration(Date.now() - lastClass.timeEnd).asSeconds()\n        )} seconds`\n        }`;\n      return `${getPeriodName(lastClass.period)} ended ${lastEnded} ago`;\n    }\n\n    //If no classes exist for the day\n    return `No classes today! Take a break, you deserve it :)`;\n  } catch (error) {\n    // console.trace(error)\n    return \"\";\n  }\n}\nexport default getTimePhrase;","import moment from \"moment\";\n\nexport const getScheduleTimeEnd = (offset) => {\n  try {\n    if (!localStorage.getItem(\"cachedSchedule\")) return \"\";\n    let scheduleOBJ = JSON.parse(localStorage.getItem(\"cachedSchedule\"));\n    let schedule = JSON.parse(scheduleOBJ.schedule.schedule);\n    let user = JSON.parse(localStorage.getItem(\"user\"));\n    let allClasses = scheduleOBJ.classes;\n    let convertedMoment = moment().tz(schedule.timePeriod).utcOffset();\n    let currentMoment = moment().utcOffset();\n    let currentTime = moment();\n    let getPeriodName = (periodID) => {\n      return (\n        JSON.parse(scheduleOBJ.schedule.nameOverrides)[periodID] || \"Break\"\n      );\n    };\n    let dotw = [\n      \"monday\",\n      \"tuesday\",\n      \"wednesday\",\n      \"thursday\",\n      \"friday\",\n      \"saturday\",\n      \"sunday\",\n    ][(moment().isoWeekday() - 1 + (offset || 0)) % 7];\n    let formattedClasses =\n      schedule[dotw] &&\n      schedule[dotw].map((clas) => {\n        return {\n          period: clas.period,\n          timeStart:\n            moment(clas.timeStart, \"hh:mma\")\n              .add((convertedMoment - currentMoment) / 60, \"hours\")\n              .unix() * 1000,\n          timeEnd:\n            moment(clas.timeEnd, \"hh:mma\")\n              .add((convertedMoment - currentMoment) / 60, \"hours\")\n              .unix() * 1000,\n        };\n      });\n\n    //Check for current class first\n    let currentClass = formattedClasses.sort(\n      (a, b) => b.timeStart - a.timeStart\n    )[0];\n    if (!currentClass)\n      return null;\n    else\n      return (<div>Class ends at <b>{moment(currentClass.timeEnd).format(\"h:mm a\")}</b> today.</div>);\n    //If no classes exist for the day\n  } catch (error) {\n    console.trace(error)\n    return \"\";\n  }\n}\nexport default getScheduleTimeEnd;","import { Component, useEffect, useState } from \"react\";\n\nimport { Button, Card, IconButton, Snackbar, Typography } from \"@material-ui/core\";\nimport { ChevronLeft, ChevronRight, Close } from \"@material-ui/icons\";\n\nimport moment from \"moment\";\n\nimport { connect } from \"react-redux\";\n\nimport { withSnackbar } from \"notistack\";\n\nimport Schedule from \"./Schedule\";\nimport Notifications from \"../../util/notifications\";\nimport { getTimePhrase } from \"../../util/getScheduleTimePhrase\";\nimport TetLib from \"../../util/TetLib\";\nimport useForceUpdate from \"../../util/useForceUpdate\";\nimport getScheduleTimeEnd from \"../../util/getScheduleTimeEnd\";\nimport { Alert } from \"@material-ui/lab\";\nimport React from \"react\";\n\nlet lastTimeBasedNotif = 0;\nconst MobileSchedulePage = (props) => {\n  const forceUpdate = useForceUpdate();\n  const [offset, setOffset] = useState(0);\n  const [popupForceClosed, setPopupForceClosed] = useState(false);\n  const goBackADay = () => {\n    setOffset(offset - 1);\n  };\n  const fastForwardADay = () => {\n    setOffset(offset + 1);\n  };\n  let adjustedMoment = moment().add(offset * 24, \"hours\");\n\n  useEffect(() => {\n    let run = true;\n    (async () => {\n      await TetLib.sleep(1000 - (Date.now() % 1000));\n      while (run) {\n        await TetLib.sleep(1000)\n        forceUpdate();\n      }\n    })();\n    return () => {\n      run = false;\n    }\n  }, [])\n  return (\n    <div\n      style={{\n        marginTop: \"5%\",\n      }}\n    >\n      <Card\n        style={{\n          padding: \"2%\",\n          paddingBottom: \"0%\",\n          margin: \"5%\",\n          /* max-height: 50vw!important; */\n          /* height: 50vw; */\n          width: \"90%\",\n\n          borderRadius: 5,\n          borderWidth: 0,\n          background: \"rgba(0,0,0,0)\",\n        }}\n      >\n        <div>\n          <span\n            style={{\n              display: \"inline-flex\",\n              alignItems: \"center\",\n            }}\n          >\n            <IconButton onClick={goBackADay}>\n              {\" \"}\n              <ChevronLeft />{\" \"}\n            </IconButton>{\" \"}\n            <Typography\n              style={{\n                fontFamily: \"Poppins\",\n                fontWeight: \"400\",\n                fontSize: \"24px\",\n              }}\n            >\n              {adjustedMoment.format(\"MM/DD/YYYY\")}\n            </Typography>\n            <IconButton onClick={fastForwardADay}>\n              {\" \"}\n              <ChevronRight />{\" \"}\n            </IconButton>\n          </span>\n          <div\n            style={{\n              verticalAlign: \"middle\",\n              width: \"100%\",\n              minWidth: \"100%\",\n            }}\n          >\n\n            <Typography\n              variant=\"h5\"\n              style={{\n                fontSize: \"5.65vw\",\n                fontFamily: \"Nunito\",\n                fontWeight: \"600\",\n              }}\n            >\n              {\n          /*moment().format(window.innerWidth <= 1368 ? \"M/D/YYYY h:mm:ss A\" : \"dddd MMMM Do h:mm:ss A\")*/ adjustedMoment.format(\n                \"dddd\"\n              )\n              }\n            </Typography>\n          </div>\n          <Typography\n            variant=\"h5\"\n            style={{\n              fontSize: 24,\n              fontFamily: \"Nunito\",\n            }}\n          >\n            {offset == 0 && getTimePhrase(offset)}\n          </Typography>\n          <br />\n          <br />\n          <Typography\n            variant=\"h5\"\n            style={{\n              fontSize: 16,\n              fontFamily: \"Nunito\",\n              textAlign: \"left\",\n            }}\n          >\n            {getScheduleTimeEnd(offset)}\n          </Typography>\n          <Snackbar\n            open={offset !== 0 && !popupForceClosed}\n            action={\n              <React.Fragment>\n\n              </React.Fragment>\n            }\n          >\n            <Alert severity={\"info\"} onClose={(e, reason) => reason !== \"clickaway\" && setPopupForceClosed(true)}>\n              <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\n                {offset !== 0 && `Now viewing the schedule ${offset < 0 && \"from\" || \"\"} ${adjustedMoment.fromNow()}.`}\n                <Button color=\"primary\" size=\"small\" onClick={(e, reason) => reason !== \"clickaway\" && setOffset(0)} style={{ paddingTop: \"0\", paddingBottom: \"0\" }}>\n                  Take me back\n                </Button>\n              </div>\n            </Alert>\n          </Snackbar>\n        </div>\n        <Schedule dayOffset={offset} />\n      </Card>\n    </div >\n  );\n}\n// class ScheduleInfo extends Component {\n//   constructor(p) {\n//     super(p);\n//     setTimeout(\n//       () => setInterval(() => this.forceUpdate(), 1000),\n//       1000 - (Date.now() % 1000)\n//     );\n//     this.state = {\n//       offset: 0,\n//     };\n//   }\n//   goBackADay(salf) {\n//     salf.setState({ offset: salf.state.offset - 1 });\n//   }\n//   fastForwardADay(salf) {\n//     salf.setState({ offset: salf.state.offset + 1 });\n//   }\n//   getTimePhrase() {\n//     try {\n//       if (!localStorage.getItem(\"cachedSchedule\")) return \"\";\n//       let scheduleOBJ = JSON.parse(localStorage.getItem(\"cachedSchedule\"));\n//       let schedule = JSON.parse(scheduleOBJ.schedule.schedule);\n//       let user = JSON.parse(localStorage.getItem(\"user\"));\n//       let allClasses = scheduleOBJ.classes;\n//       let convertedMoment = moment().tz(schedule.timePeriod).utcOffset();\n//       let currentMoment = moment().utcOffset();\n//       let currentTime = moment();\n//       let getPeriodName = (periodID) => {\n//         return (\n//           JSON.parse(scheduleOBJ.schedule.nameOverrides)[periodID] || \"Break\"\n//         );\n//       };\n//       let dotw = [\n//         \"monday\",\n//         \"tuesday\",\n//         \"wednesday\",\n//         \"thursday\",\n//         \"friday\",\n//         \"saturday\",\n//         \"sunday\",\n//       ][moment().isoWeekday() - 1];\n//       let formattedClasses =\n//         schedule[dotw] &&\n//         schedule[dotw].map((clas) => {\n//           return {\n//             period: clas.period,\n//             timeStart:\n//               moment(clas.timeStart, \"hh:mma\")\n//                 .add((convertedMoment - currentMoment) / 60, \"hours\")\n//                 .unix() * 1000,\n//             timeEnd:\n//               moment(clas.timeEnd, \"hh:mma\")\n//                 .add((convertedMoment - currentMoment) / 60, \"hours\")\n//                 .unix() * 1000,\n//           };\n//         });\n//       //Check for current class first\n//       let currentClass = formattedClasses.filter(\n//         (x) => x.timeStart < Date.now() && Date.now() < x.timeEnd\n//       )[0];\n\n//       if (currentClass) {\n//         let endingInString = `${currentClass.timeEnd - Date.now() > 60000\n//           ? currentClass.timeEnd - Date.now() > 3600000\n//             ? `${Math.round(\n//               moment.duration(currentClass.timeEnd - Date.now()).asHours()\n//             )} hours`\n//             : `${Math.round(\n//               moment.duration(currentClass.timeEnd - Date.now()).asMinutes()\n//             )} minutes`\n//           : `${Math.round(\n//             moment.duration(currentClass.timeEnd - Date.now()).asSeconds()\n//           )} seconds`\n//           }`;\n\n//         //Try to push a notif if class is starting soon\n//         if (\n//           currentClass.timeEnd - Date.now() < 120 * 1000 &&\n//           Date.now() - lastTimeBasedNotif > 240 * 1000\n//         ) {\n//           lastTimeBasedNotif = Date.now();\n\n//           Notifications.pushNotification(\n//             undefined,\n//             undefined,\n//             `${getPeriodName(currentClass.period)} is ending soon!`,\n//             `Hey ${user.firstName}, ${getPeriodName(\n//               currentClass.period\n//             )} is about to end in ${endingInString}!`\n//           );\n//         }\n\n//         return `${getPeriodName(\n//           currentClass.period\n//         )} ends in ${endingInString}`;\n//       }\n//       //Check for next upcoming class\n//       let nextClass = formattedClasses.filter(\n//         (x) => x.timeStart > Date.now()\n//       )[0];\n\n//       if (nextClass) {\n//         let startingInString = `${nextClass.timeStart - Date.now() > 60000\n//           ? nextClass.timeStart - Date.now() > 3600000\n//             ? `${Math.round(\n//               moment.duration(nextClass.timeStart - Date.now()).asHours()\n//             )} hours`\n//             : `${Math.round(\n//               moment.duration(nextClass.timeStart - Date.now()).asMinutes()\n//             )} minutes`\n//           : `${Math.round(\n//             moment.duration(nextClass.timeStart - Date.now()).asSeconds()\n//           )} seconds`\n//           }`;\n//         if (\n//           nextClass.timeStart - Date.now() < 120 * 1000 &&\n//           Date.now() - lastTimeBasedNotif > 240 * 1000\n//         ) {\n//           lastTimeBasedNotif = Date.now();\n\n//           Notifications.pushNotification(\n//             undefined,\n//             undefined,\n//             `${getPeriodName(nextClass.period)} is starting soon!`,\n//             `Hey ${user.firstName}, ${getPeriodName(\n//               nextClass.period\n//             )} is about to start in ${startingInString}!`\n//           );\n//         }\n\n//         return `${getPeriodName(\n//           nextClass.period\n//         )} starts in ${startingInString}`;\n//       }\n\n//       //Check for what was the previous class\n//       let lastClass = formattedClasses\n//         .filter((x) => Date.now() > x.timeEnd)\n//         .pop();\n//       if (lastClass) {\n//         let lastEnded = `${Date.now() - lastClass.timeEnd > 60000\n//           ? Date.now() - lastClass.timeEnd > 60000\n//             ? `${Math.round(\n//               moment.duration(Date.now() - lastClass.timeEnd).asHours()\n//             )} hours`\n//             : `${Math.round(\n//               moment.duration(Date.now() - lastClass.timeEnd).asMinutes()\n//             )} minutes`\n//           : `${Math.round(\n//             moment.duration(Date.now() - lastClass.timeEnd).asSeconds()\n//           )} seconds`\n//           }`;\n//         return `${getPeriodName(lastClass.period)} ended ${lastEnded} ago`;\n//       }\n\n//       //If no classes exist for the day\n//       return `No classes today! Take a break, you deserve it :)`;\n//     } catch (error) {\n//       return \"\";\n//     }\n//   }\n//   render() {\n//     let offset = this.state.offset;\n//     let adjustedMoment = moment().add(offset * 24, \"hours\");\n//     if (window.innerWidth <= 1000) {\n//       return (\n//         <div\n//           style={{\n//             marginTop: \"5%\",\n//           }}\n//         >\n//           <Card\n//             style={{\n//               padding: \"2%\",\n//               paddingBottom: \"0%\",\n//               margin: \"5%\",\n//               /* max-height: 50vw!important; */\n//               /* height: 50vw; */\n//               width: \"90%\",\n\n//               borderRadius: 5,\n//               borderWidth: 0,\n//               background: \"rgba(0,0,0,0)\",\n//             }}\n//           >\n//             <div>\n//               <span\n//                 style={{\n//                   display: \"inline-flex\",\n//                   alignItems: \"center\",\n//                 }}\n//               >\n//                 <IconButton onClick={(x) => this.goBackADay(this)}>\n//                   {\" \"}\n//                   <ChevronLeft />{\" \"}\n//                 </IconButton>{\" \"}\n//                 <Typography\n//                   style={{\n//                     fontFamily: \"Poppins\",\n//                     fontWeight: \"400\",\n//                     fontSize: \"24px\",\n//                   }}\n//                 >\n//                   {adjustedMoment.format(\"MM/DD/YYYY\")}\n//                 </Typography>\n//                 <IconButton onClick={(x) => this.fastForwardADay(this)}>\n//                   {\" \"}\n//                   <ChevronRight />{\" \"}\n//                 </IconButton>\n//               </span>\n//               <CTimeSmall />\n//               <Typography\n//                 variant=\"h5\"\n//                 style={{\n//                   fontSize: 32,\n//                   fontFamily: \"Nunito\",\n//                 }}\n//               >\n//                 {this.getTimePhrase()}\n//               </Typography>\n//             </div>\n//             <Schedule dayOffset={offset} />\n//           </Card>\n//         </div>\n//       );\n//     }\n//     return (\n//       <div\n//         style={{\n//           marginTop: \"5%\",\n//         }}\n//       >\n//         <Card\n//           style={{\n//             padding: \"2%\",\n//             paddingBottom: \"0%\",\n//             /* max-height: 50vw!important; */\n//             /* height: 50vw; */\n//             width: \"60%\",\n//             maxWidth: \"60%\",\n//             display: \"inline-block\",\n//             background: \"rgba(0,0,0,0)\",\n//             borderRadius: 10,\n//             borderWidth: 0,\n//           }}\n//         >\n//           <div\n//             style={{\n//               textAlign: \"left\",\n//             }}\n//           >\n//             <span\n//               style={{\n//                 display: \"inline-flex\",\n//                 alignItems: \"center\",\n//               }}\n//             >\n//               <IconButton onClick={(x) => this.goBackADay(this)}>\n//                 {\" \"}\n//                 <ChevronLeft />{\" \"}\n//               </IconButton>{\" \"}\n//               <Typography\n//                 style={{\n//                   fontFamily: \"Poppins\",\n//                   fontWeight: \"400\",\n//                   fontSize: \"32px\",\n//                 }}\n//               >\n//                 {adjustedMoment.format(\"dddd MMMM D\")}\n//               </Typography>\n//               <IconButton onClick={(x) => this.fastForwardADay(this)}>\n//                 {\" \"}\n//                 <ChevronRight />{\" \"}\n//               </IconButton>\n//             </span>\n//           </div>\n//           <Schedule dayOffset={offset} />\n//         </Card>\n//         <Card\n//           style={{\n//             display: \"inline-block\",\n//             verticalAlign: \"top\",\n//             width: \"30vw\",\n//             height: \"30vw\",\n//             marginLeft: \"2vw\",\n//             padding: \"2%\",\n//             position: \"relative\",\n//             background: \"rgba(0,0,0,0)\",\n//             borderRadius: \"1rem!important\",\n//             boxShadow: \"none\",\n//           }}\n//         />\n//         <Card\n//           style={{\n//             display: \"inline-flex\",\n//             verticalAlign: \"top\",\n//             width: \"30vw\",\n//             height: \"30vw\",\n//             marginLeft: \"2vw\",\n//             padding: \"2%\",\n//             position: \"fixed\",\n//             right: \"5%\",\n//             borderRadius: \"0.5rem\",\n//             boxShadow: \"4px 6px 5px 4px rgba(0,0,0,0.6)\",\n//           }}\n//         >\n//           <div\n//             style={{\n//               position: \"absolute\",\n//               top: \"50%\",\n//               left: \"50%\",\n//               transform: \"translate(-50%,-50%)\",\n//             }}\n//           >\n//             <CTime />\n//             <Typography\n//               variant=\"h5\"\n//               align=\"left\"\n//               style={{\n//                 fontSize: \"2vw\",\n//               }}\n//             >\n//               {this.getTimePhrase()}\n//             </Typography>\n//           </div>\n//         </Card>\n//       </div>\n//     );\n//   }\n// }\nexport default connect()(withSnackbar(MobileSchedulePage));\n","import { useEffect, useState } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport DesktopSchedulePage from \"../components/Calendar/DesktopSchedule\";\nimport MobileSchedulePage from \"../components/Calendar/MobileSchedule\";\nimport TetLib from \"../util/TetLib\";\nimport useForceUpdate from \"../util/useForceUpdate\";\nimport t from \"../util/localization/localization\";\nimport { updateSchedule } from \"../redux/actions/dataActions\";\nimport store from \"../redux/store\";\nconst Schedule = (props) => {\n  const forceUpdate = useForceUpdate();\n  useEffect(() => {\n    let run = true;\n    window.addEventListener(\"resize\", forceUpdate);\n    return () => {\n      window.removeEventListener(\"resize\", forceUpdate);\n    };\n  }, []);\n  const [schedule, setSchedule] = useState(JSON.parse(localStorage.cachedSchedule || \"null\"));\n  useEffect(() => {\n    (async () => {\n      localStorage.removeItem(\"cachedSchedule\");\n      store.dispatch(updateSchedule());\n      while (!localStorage.cachedSchedule) await TetLib.sleep(100);\n      setSchedule(JSON.parse(localStorage.cachedSchedule));\n    })();\n  }, []);\n\n  if (!schedule) return null;\n\n  if (window.innerWidth >= 1100) {\n    return <DesktopSchedulePage schedule={schedule} />;\n  } else {\n    return <MobileSchedulePage schedule={schedule} />;\n  }\n};\nconst mapActionsToProps = {\n  updateSchedule\n};\nexport default connect()(Schedule);\n"],"sourceRoot":""}