{"version":3,"sources":["redux/actions/moduleActions.js","components/Modules/Calculator/History.js","util/latex/preprocessMathQuill.js","components/Modules/Calculator/CalcTools.js","components/Modules/Calculator/Calculator.js","components/Modules/Calculator/CalcSettings.js","components/Modules/Calculator/CalculatorModule.js","pages/modules.js"],"names":["calc_setInput","latex","dispatch","type","CALC_SET_INPUT","payload","connect","state","module","props","history","calculator","HistoryButton","ans","ListItem","button","onClick","style","flex","Typography","List","React","Children","toArray","map","x","Divider","mathquillToMathJS","fromMQ","noBraceSub","convertSubscript","fracToDivision","tex","mathjs","reduce","acc","r","str","find","replaceWith","replace","RegExp","escapeRegExp","expr","subStart","indexOf","numStart","length","closingBrace","slice","frac","fracStart","divIdx","startIdx","braces","openingBrace","undefined","Error","stack","j","findClosingBrace","useStyles","makeStyles","numPadRoot","symbolPadRoot","SymbolButton","symbol","classes","Button","className","variant","NumPad","NumRow","arr","Grid","container","item","spacing","wrap","num","disabled","direction","SymbolPad","obj","addStyles","parser","math","number","precision","LatexInput","onChange","onSubmit","mathquillDidMount","height","fontSize","config","autoCommands","autoOperatorNames","handlers","enter","calc_addHistory","CALC_ADD_HISTORY","withStyles","theme","spreadIt","symbolPadGrid","paddingTop","input","useState","answer","setAnswer","error","setError","mathField","useRef","useEffect","current","console","log","rootPadding","InputBase","inputComponent","inputProps","val","evaluate","err","value","fullWidth","xs","write","focus","cmd","color","Paper","paper","root","marginLeft","marginRight","marginTop","paddingLeft","paddingRight","minHeight","maxWidth"],"mappings":"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","file":"static/js/17.636b3e37.chunk.js","sourcesContent":["import {\n  CALC_ADD_HISTORY,\n  CALC_SET_INPUT,\n  CALC_ADD_VARIABLE,\n  CALC_REMOVE_VARIABLE,\n} from \"../types\";\n\nexport const calc_addHistory = (latex) => (dispatch) => {\n  dispatch({ type: CALC_ADD_HISTORY, payload: latex });\n};\n\nexport const calc_setInput = (latex) => (dispatch) => {\n  dispatch({ type: CALC_SET_INPUT, payload: latex });\n};\nexport const calc_addVariable = (variable) => (dispatch) => {\n  dispatch({ type: CALC_ADD_VARIABLE, payload: variable });\n};\nexport const calc_removeVariable = (variable) => (dispatch) => {\n  dispatch({ type: CALC_REMOVE_VARIABLE, payload: variable });\n};\n","// React\nimport React, { useState } from \"react\";\n\n// MUI\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Typography from \"@material-ui/core/Typography\";\n\n// Redux\nimport { connect } from \"react-redux\";\nimport { calc_setInput } from \"../../../redux/actions/moduleActions\";\n\n// Math\nimport { StaticMathField } from \"react-mathquill\";\n\nexport const History = (props) => {\n  const {\n    module: {\n      calculator: { history },\n    },\n    calc_setInput,\n  } = props;\n\n  const HistoryButton = (props) => {\n    const { latex, ans } = props;\n    return (\n      <ListItem button onClick={() => calc_setInput(latex)}>\n        <StaticMathField style={{ flex: 1 }}>{latex}</StaticMathField>\n        <Typography>= {ans}</Typography>\n      </ListItem>\n    );\n  };\n\n  return (\n    <div>\n      <List>\n        {React.Children.toArray(\n          history.map((x) => (\n            <>\n              <Divider />\n              <HistoryButton latex={x.latex} ans={x.ans} />\n            </>\n          ))\n        )}\n      </List>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  module: state.module,\n});\n\nexport default connect(mapStateToProps, { calc_setInput })(History);\n","/**\n * Thank you ChristopherChudzicki for this code! (copy-paste)\n *\n * Makes a series of replacements on MathQuill-generated LaTeX strings so that\n * they can be parsed by MathJS.\n *\n * Notes:\n *  1. This is pretty heuristic. Might discover updates needed.\n *  2. Much of this could be used to preprocess LaTeX generated by other means\n * (i.e., not MathQuill.) The main bit that is MathQuill-specific is probably\n * the operatorname replacements.\n *\n * @param  {string} fromMQ a MathQuill-generated LaTeX expression\n * @return {string} the input expression with LaTeX commands converted to mathjs\n */\nexport default function mathquillToMathJS(fromMQ) {\n  const replacements = [\n    { tex: \"\\\\operatorname{diff}\", mathjs: \"diff\" },\n    { tex: \"\\\\operatorname{pdiff}\", mathjs: \"pdiff\" },\n    { tex: \"\\\\operatorname{curl}\", mathjs: \"curl\" },\n    { tex: \"\\\\operatorname{div}\", mathjs: \"div\" },\n    { tex: \"\\\\operatorname{norm}\", mathjs: \"norm\" },\n    { tex: \"\\\\operatorname{mod}\", mathjs: \"mod\" },\n    { tex: \"\\\\operatorname{abs}\", mathjs: \"abs\" },\n    { tex: \"\\\\operatorname{unitT}\", mathjs: \"unitT\" },\n    { tex: \"\\\\operatorname{unitN}\", mathjs: \"unitN\" },\n    { tex: \"\\\\operatorname{unitB}\", mathjs: \"unitB\" },\n    { tex: \"\\\\operatorname{arccosh}\", mathjs: \"arccosh\" },\n    { tex: \"\\\\operatorname{arcsinh}\", mathjs: \"arcsinh\" },\n    { tex: \"\\\\operatorname{arctanh}\", mathjs: \"arctanh\" },\n    { tex: \"\\\\cdot\", mathjs: \" * \" },\n    { tex: \"\\\\left\", mathjs: \"\" },\n    { tex: \"\\\\right\", mathjs: \"\" },\n    { tex: \"{\", mathjs: \"(\" },\n    { tex: \"}\", mathjs: \")\" },\n    { tex: \"~\", mathjs: \" \" },\n    { tex: \"\\\\\", mathjs: \" \" },\n  ];\n\n  // remove fractions, then apply replacements\n  const noFrac = fracToDivision(fromMQ);\n  const noBraceSub = convertSubscript(noFrac);\n  return replacements.reduce(\n    (acc, r) => replaceAll(acc, r[\"tex\"], r[\"mathjs\"]),\n    noBraceSub\n  );\n}\n\n/**\n * Recursively removes braces from LaTeX subscripts\n *   - example: x_{12foo_{bar123_{evenlower}}} --> x_12foo_bar123_evenlower\n */\nexport function convertSubscript(expr) {\n  const sub = \"_{\";\n  const subStart = expr.indexOf(sub);\n\n  if (subStart < 0) {\n    return expr;\n  }\n\n  const numStart = subStart + sub.length;\n  const closingBrace = expr.indexOf(\"}\", numStart);\n  const newExpr =\n    expr.slice(0, subStart) +\n    \"_\" +\n    expr.slice(numStart, closingBrace) +\n    expr.slice(closingBrace + 1);\n\n  return convertSubscript(newExpr);\n}\n\n/**\n * Recursively replaces LaTeX fractions with normal divison\n *   - example: \\frac{a}{1 + \\frac{b}{c}} --> {a}/{1 + {b}/{c}}\n */\nexport function fracToDivision(expr) {\n  const frac = \"\\\\frac\";\n  const fracStart = expr.indexOf(frac);\n  const numStart = fracStart + frac.length;\n\n  if (fracStart < 0) {\n    return expr;\n  }\n\n  const divIdx = findClosingBrace(expr, numStart);\n  // Remove frac, and add \"/\"\n  const newExpr =\n    expr.slice(0, fracStart) +\n    expr.slice(numStart, divIdx + 1) +\n    \"/\" +\n    expr.slice(divIdx + 1);\n\n  return fracToDivision(newExpr);\n}\n\nexport function capitalize(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n}\n\nexport function escapeRegExp(str) {\n  // from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#Using_Special_Characters\n  // $& means the whole matched string\n  return str.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n}\n\nexport function replaceAll(str, find, replaceWith) {\n  // from https://stackoverflow.com/a/1144788/2747370\n  return str.replace(new RegExp(escapeRegExp(find), \"g\"), replaceWith);\n}\n\nexport function findClosingBrace(str, startIdx) {\n  const braces = {\n    \"[\": \"]\",\n    \"<\": \">\",\n    \"(\": \")\",\n    \"{\": \"}\",\n  };\n\n  const openingBrace = str[startIdx];\n\n  const closingBrace = braces[openingBrace];\n\n  if (closingBrace === undefined) {\n    throw Error(\n      `${str} does not contain an opening brace at position ${startIdx}.`\n    );\n  }\n\n  let stack = 1;\n\n  // eslint-disable-next-line no-plusplus\n  for (let j = startIdx + 1; j < str.length; j++) {\n    if (str[j] === openingBrace) {\n      stack += +1;\n    } else if (str[j] === closingBrace) {\n      stack += -1;\n    }\n    if (stack === 0) {\n      return j;\n    }\n  }\n\n  // stack !== 0\n  throw Error(\n    `${str} has a brace that opens at position ${startIdx} but does not close.`\n  );\n}\n","// React\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// MUI\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nconst useStyles = makeStyles({\n  numPadRoot: {},\n  symbolPadRoot: {},\n  button: {\n    //flex: 1,\n  },\n});\n\nconst SymbolButton = ({ onClick, latex, symbol }) => {\n  const classes = useStyles();\n  return (\n    <Button\n      className={classes.button}\n      variant=\"contained\"\n      onClick={() => onClick(latex)}\n    >\n      {symbol}\n    </Button>\n  );\n};\n\nexport const NumPad = (props) => {\n  const classes = useStyles();\n  const { onClick } = props;\n\n  const NumRow = ({ arr }) => {\n    return (\n      <Grid container item spacing={1} wrap=\"nowrap\">\n        {React.Children.toArray(\n          arr.map((num) => (\n            <Grid item>\n              {num !== null ? (\n                <SymbolButton onClick={onClick} latex={num} symbol={num} />\n              ) : (\n                <Button className={classes.button} disabled />\n              )}\n            </Grid>\n          ))\n        )}\n      </Grid>\n    );\n  };\n  return (\n    <Grid container spacing={1} wrap=\"nowrap\" direction=\"column\">\n      <NumRow arr={[1, 2, 3]} />\n      <NumRow arr={[4, 5, 6]} />\n      <NumRow arr={[7, 8, 9]} />\n      <NumRow arr={[null, 0, \".\"]} />\n    </Grid>\n  );\n};\n\nexport const SymbolPad = (props) => {\n  const { onClick } = props;\n  const symbols = [\n    { symbol: \"+\", latex: \"+\" },\n    { symbol: \"-\", latex: \"-\" },\n    { symbol: \"*\", latex: \"cdot\" },\n    { symbol: \"/\", latex: \"frac\" },\n    { symbol: \"√\", latex: \"sqrt\" },\n    { symbol: \"^\", latex: \"^\" },\n  ];\n\n  return (\n    <div>\n      <Grid container spacing={1}>\n        <Grid container item spacing={1}>\n          {React.Children.toArray(\n            symbols.map((obj) => {\n              return (\n                <Grid item>\n                  <SymbolButton\n                    onClick={onClick}\n                    latex={obj.latex}\n                    symbol={obj.symbol}\n                  />\n                </Grid>\n              );\n            })\n          )}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nNumPad.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nSymbolPad.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","// React\nimport React, { useState, useEffect, useRef } from \"react\";\n\n// MUI\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\n// Redux\nimport { connect } from \"react-redux\";\nimport {\n  calc_addHistory,\n  calc_setInput,\n} from \"../../../redux/actions/moduleActions\";\n\n// Components\nimport History from \"./History\";\n\n// Math related\nimport mathquillToMathJS from \"../../../util/latex/preprocessMathQuill\";\nimport { addStyles, EditableMathField, StaticMathField } from \"react-mathquill\";\nimport * as math from \"mathjs\";\nimport { NumPad, SymbolPad } from \"./CalcTools\";\nimport CalculatorBackend from \"../../../util/calculator\";\n\n// required for latex to format correctly\naddStyles();\nconst history = [];\nconst maths = math.create(math.all, {\n  number: \"BigNumber\",\n  precision: 2,\n});\nconst parser = maths.parser();\nconst styles = (theme) => ({\n  ...theme.spreadIt,\n  symbolPadGrid: {\n    paddingTop: 15,\n  },\n});\n\nconst LatexInput = (props) => {\n  const { onChange, onSubmit, mathquillDidMount } = props;\n\n  return (\n    <EditableMathField\n      latex=\"\"\n      style={{ height: \"auto\", fontSize: 50, flex: 1 }}\n      config={{\n        autoCommands: \"pi theta sqrt sum\",\n        autoOperatorNames:\n          \"sin cos tan feet ft inches in miles cm sech arcsec arsinh to rad deg radians degrees\",\n        handlers: {\n          enter: onSubmit,\n        },\n      }}\n      onChange={onChange}\n      mathquillDidMount={mathquillDidMount}\n    />\n  );\n};\n\nexport const Calculator = (props) => {\n  const {\n    classes,\n    module: {\n      calculator: { input },\n    },\n    calc_addHistory,\n  } = props;\n\n  const [answer, setAnswer] = useState(\"\");\n  const [error, setError] = useState(false);\n\n  const mathField = useRef(null);\n\n  useEffect(() => {\n    try {\n      mathField.current.latex(input ? input : \"\");\n    } catch {\n      console.log(\"Expression invalid\");\n    }\n  }, [input]);\n\n  const handleSubmit = (val) => {\n    try {\n      // const ans = CalculatorBackend.self.solveEquation(\n      //   mathquillToMathJS(val.latex())\n      // );\n      let ans = parser.evaluate(mathquillToMathJS(val.latex()));\n      setAnswer(`${ans}`);\n      setError(false);\n      calc_addHistory({ latex: val.latex(), ans: `${ans}` });\n    } catch (err) {\n      console.log(err);\n      setAnswer(\"ERROR!!!!\");\n      setError(true);\n    }\n  };\n\n  const handleMathquillMount = (val) => {\n    mathField.current = val;\n  };\n\n  const handleChange = (val) => {\n    calc_setInput(`${val.latex()}`);\n  };\n\n  const handleNumberPressed = (num) => {\n    mathField.current.write(num);\n    mathField.current.focus();\n  };\n\n  const handleSymbolPressed = (symbol) => {\n    mathField.current.cmd(symbol);\n    mathField.current.focus();\n  };\n\n  return (\n    <div className={classes.rootPadding}>\n      <History />\n      <InputBase\n        inputComponent={LatexInput}\n        inputProps={{\n          onSubmit: handleSubmit,\n          onChange: handleChange,\n          mathquillDidMount: handleMathquillMount,\n        }}\n        /*className={classes.input}*/\n        value=\"\"\n        fullWidth\n      ></InputBase>\n      <Grid container spacing={2} className={classes.symbolPadGrid}>\n        <Grid item xs>\n          <NumPad onClick={handleNumberPressed} />\n        </Grid>\n        <Grid item xs>\n          <SymbolPad onClick={handleSymbolPressed} />\n        </Grid>\n      </Grid>\n      <Typography color={error ? \"error\" : \"initial\"}>{answer}</Typography>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  module: state.module,\n});\n\nexport default connect(mapStateToProps, { calc_addHistory, calc_setInput })(\n  withStyles(styles)(Calculator)\n);\n","// MUI\nimport Paper from \"@material-ui/core/Paper\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\nconst styles = (theme) => ({\n  ...theme.spreadIt,\n});\n\nexport const CalcSettings = (props) => {\n  const { classes } = props;\n  return (\n    <Paper className={classes.paper}>\n      <div>hiiiiiiiii</div>\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(CalcSettings);\n","// React\nimport React, { useState, useEffect, useRef } from \"react\";\n\n// MUI\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\n// Components\nimport Calculator from \"./Calculator\";\nimport CalcSettings from \"./CalcSettings\";\n\n// Math related\nimport mathquillToMathJS from \"../../../util/latex/preprocessMathQuill\";\nimport { addStyles, EditableMathField, StaticMathField } from \"react-mathquill\";\nimport * as math from \"mathjs\";\nimport { NumPad, SymbolPad } from \"./CalcTools\";\n\nconst styles = (theme) => ({\n  ...theme.spreadIt,\n});\n\nexport const CalculatorModule = (props) => {\n  const { classes } = props;\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={8}>\n        <Paper className={classes.paper}>\n          <Calculator />\n        </Paper>\n        <CalcSettings />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(CalculatorModule);\n","// React\n\nimport { Paper } from \"@material-ui/core\";\nimport CalculatorModule from \"../components/Modules/Calculator/CalculatorModule\";\n\n// MUI Stuff\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\nconst styles = (theme) => ({\n  ...theme.spreadIt,\n  root: {\n    marginLeft: 300, // temporary until john fixes his stuff\n    marginRight: 30,\n    marginTop: 50,\n    paddingLeft: 50,\n    paddingRight: 50,\n    paddingTop: 30,\n    minHeight: \"80%\",\n    maxWidth: \"80%\",\n  },\n});\n\nconst Modules = (props) => {\n  const { classes } = props;\n  return (\n    <div className={classes.root}>\n      <CalculatorModule />\n    </div>\n  );\n};\n\nexport default withStyles(styles)(Modules);\n"],"sourceRoot":""}