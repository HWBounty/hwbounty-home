{"version":3,"sources":["util/notifications.js","components/Calendar/Schedule.js","pages/ScheduleInfo.js"],"names":["Notifications","Notification","permission","requestPermission","icon","img","title","text","body","image","error","decodeHTML","string","map","gt","replace","$0","$1","String","fromCharCode","toLowerCase","parseInt","substr","hasOwnProperty","useButtonStyles","makeStyles","root","border","borderRadius","marginTop","paddingBottom","display","cursor","position","boxShadow","PeriodButton","props","classes","theme","period","name","zoom","color","timeStart","timeEnd","tSS","tES","duration","enqueueSnackbar","useSnackbar","timePassed","Date","now","React","useState","expanded","setExpanded","notDoneCol","filter","x","style","marginBottom","Card","className","onClick","length","background","padding","Typography","variant","align","marginLeft","fontSize","window","innerWidth","margin","bottom","left","Math","round","Collapse","in","Children","toArray","z","Button","e","event","link","stopPropagation","newWindow","open","opener","handleZoomLinkClicked","fetchAndSet","setCourseInfo","setScheduleData","setCannotFetch","a","localStorage","getItem","Error","JSON","parse","Promise","all","axios","get","catch","console","trace","schedule","courses","data","status","setItem","stringify","connect","state","UI","forceUpdate","set","s","useForceUpdate","useEffect","setTimeout","setInterval","courseInfo","scheduleData","fetching","setFetching","cannotFetch","linkUserSchoology","CircularProgress","periods","zoomLinkInfo","dotw","moment","isoWeekday","allClasses","Map","nameOverrides","convertedMoment","tz","timePeriod","utcOffset","currentMoment","forEach","course","id","today","colors","stops","retarr","index","push","generatePeriodColors","i","has","value","course_title","links","linkGroup","flat","add","unix","parsePeriods","Container","width","p","CTime","verticalAlign","minWidth","textAlign","format","CTimeSmall","lastTimeBasedNotif","ScheduleInfo","scheduleOBJ","user","getPeriodName","periodID","formattedClasses","clas","currentClass","endingInString","asHours","asMinutes","asSeconds","pushNotification","undefined","firstName","nextClass","startingInString","lastClass","pop","lastEnded","this","getTimePhrase","overflowY","borderWidth","maxWidth","height","right","top","transform","Component","withSnackbar"],"mappings":"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","file":"static/js/8.5848d368.chunk.js","sourcesContent":["class Notifications {\r\n\tconstructor() {\r\n\t\tif (Notification.permission !== \"granted\") {\r\n\t\t\tNotification.requestPermission();\r\n\t\t}\r\n\t}\r\n\tstatic pushNotification(icon, img, title, text) {\r\n\t\ttry {\r\n\t\t\tif (Notification.permission !== \"granted\") {\r\n\t\t\t\tNotification.requestPermission();\r\n\t\t\t}\r\n\t\t\treturn new Notification(title || \"HWBounty Notification\", {body: text || \"\", icon: icon, image: img});\r\n\t\t} catch (error) {\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n}\r\nexport default Notifications;","// React\r\nimport React, { Component, useEffect } from \"react\";\r\n\r\n// MUI\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport moment from \"moment-timezone\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { CircularProgress, Container } from \"@material-ui/core\";\r\nimport { useSnackbar } from \"notistack\";\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport { linkUserSchoology } from \"../../redux/actions/userActions\";\r\n\r\nconst decodeHTML = (string) => {\r\n  const map = { gt: \">\" /* , … */ };\r\n  return string.replace(/&(#(?:x[0-9a-f]+|\\d+)|[a-z]+);?/gi, ($0, $1) => {\r\n    if ($1[0] === \"#\") {\r\n      return String.fromCharCode(\r\n        $1[1].toLowerCase() === \"x\"\r\n          ? parseInt($1.substr(2), 16)\r\n          : parseInt($1.substr(1), 10)\r\n      );\r\n    } else {\r\n      return map.hasOwnProperty($1) ? map[$1] : $0;\r\n    }\r\n  });\r\n};\r\nconst useButtonStyles = makeStyles({\r\n  root: {\r\n    border: 0,\r\n    borderRadius: \"1.25vw!important\",\r\n    marginTop: \"2vw\",\r\n    paddingBottom: 10,\r\n    display: \"block\",\r\n    cursor: \"pointer\",\r\n    position:\"relative\",\r\n    boxShadow: \"5px 5px 10px 1px rgba(0,0,0,0.6)!important\",\r\n  },\r\n});\r\n\r\nconst generatePeriodColors = (stops, theme) => {\r\n  let retarr = [];\r\n  for (let index = 0; index < stops; index++)\r\n    //50 => 25, 70 => 30 for Dark mode\r\n\r\n    retarr.push([0 + (index / stops) * 360, 0, theme ? 30 : 70]);\r\n  return retarr;\r\n};\r\n\r\nconst PeriodButton = (props) => {\r\n  const classes = useButtonStyles();\r\n  const {\r\n    theme,\r\n    period,\r\n    name,\r\n    zoom,\r\n    color,\r\n    timeStart,\r\n    timeEnd,\r\n    tSS,\r\n    tES,\r\n    duration,\r\n  } = props;\r\n  //% from 0 to 100\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  let timePassed = 0;\r\n  //If we are past the end time, set time passed to 100%\r\n  if (Date.now() - timeEnd > 0) timePassed = 100;\r\n  //If we are in class, set time passed to (current-start)/(End-start) * 100\r\n  else if (Date.now() - timeStart > 0 && timeEnd - Date.now() > 0)\r\n    timePassed = ((Date.now() - timeStart) * 100) / (timeEnd - timeStart);\r\n  //If the class is upcoming, set time passed to 0\r\n  else timePassed = 0;\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  const handleButtonClicked = () => {\r\n    if (zoom.length) setExpanded(!expanded);\r\n    else enqueueSnackbar(\"No Zoom Links found for this class!\");\r\n  };\r\n  \r\n\r\n  const handleZoomLinkClicked = (event, link) => {\r\n    event.stopPropagation();\r\n    const newWindow = window.open(link, \"_blank\", \"noopener,noreferrer\");\r\n    if (newWindow) newWindow.opener = null;\r\n  };\r\n  let notDoneCol = color.filter((x) => true);\r\n  //Set to 40 for Darkmode  \r\n  notDoneCol[2] = theme ? 30 : 90;\r\n  color[2] = theme ? 20 : 75;\r\n  return (\r\n    <div\r\n      style={{\r\n        marginBottom: \"2vh\",\r\n      }}\r\n    >\r\n      <Card\r\n        className={classes.root}\r\n        onClick={handleButtonClicked}\r\n        style={{\r\n          background: `linear-gradient(90deg, hsl(${color[0]},${color[1]}%,${\r\n            color[2]\r\n          }%) 0%, hsl(${color[0]},${color[1]}%,${\r\n            color[2]\r\n          }%) ${timePassed}%, hsl(${notDoneCol[0]},${notDoneCol[1]}%,${\r\n            notDoneCol[2]\r\n          }%) ${timePassed + 0.000001}%, hsl(${notDoneCol[0]},${\r\n            notDoneCol[1]\r\n          }%,${notDoneCol[2]}%) 100%)`,\r\n          borderRadius: 20,\r\n          padding: \"10px\",\r\n        }}\r\n      >\r\n        <Typography\r\n          variant=\"h5\"\r\n          align=\"left\"\r\n          style={{\r\n            marginLeft: \"4%\",\r\n            fontSize: window.innerWidth ** 0.4 + 32,\r\n            marginBottom: window.innerWidth <= 1250\r\n            ?\"12%\":\"6%\",\r\n            position: \"relative\",\r\n            marginTop: window.innerWidth <= 1250\r\n            ?\"4%\":\"2%\",\r\n            // left: \"5%\"\r\n          }}\r\n        >\r\n          {name}\r\n        </Typography>\r\n        {expanded ? null : (\r\n          <Typography\r\n            align=\"left\"\r\n            variant=\"h5\"\r\n            style={{\r\n              fontSize:\r\n                window.innerWidth <= 1250\r\n                  ? window.innerWidth ** 0.3 + 10\r\n                  : window.innerWidth ** 0.4 + 10,\r\n              margin: 10,\r\n              marginBottom: 10,\r\n              marginTop: 0,\r\n              bottom: window.innerWidth <= 1250 ? \"70%\" : \"1%\",\r\n              left: \"4%\",\r\n              bottom: \"10%\",\r\n              position: \"absolute\",\r\n              fontFamily: \"'Nunito'\",\r\n            }}\r\n          >\r\n            {period}&nbsp;&nbsp;&nbsp;{tSS}-{tES} ({Math.round(duration / 60000)} mins)\r\n          </Typography>\r\n        )}\r\n\r\n        <Collapse in={expanded}>\r\n          {React.Children.toArray(\r\n            zoom.map((z) => {\r\n              return (\r\n                <Button onClick={(e) => handleZoomLinkClicked(e, z.link)}>\r\n                  {z.title}\r\n                </Button>\r\n              );\r\n            })\r\n          )}\r\n        </Collapse>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst parsePeriods = (scheduleData, zoomLinkInfo, theme) => {\r\n  let scheduleDay = moment(Date.now());\r\n  let dotw = [\r\n    \"monday\",\r\n    \"tuesday\",\r\n    \"wednesday\",\r\n    \"thursday\",\r\n    \"friday\",\r\n    \"saturday\",\r\n    \"sunday\",\r\n  ][scheduleDay.isoWeekday() - 1];\r\n\r\n  let allClasses = scheduleData.classes;\r\n  let classes = new Map();\r\n  let nameOverrides = JSON.parse(scheduleData.schedule.nameOverrides);\r\n  let convertedMoment = moment()\r\n    .tz(JSON.parse(scheduleData.schedule.schedule).timePeriod)\r\n    .utcOffset();\r\n  let currentMoment = moment().utcOffset();\r\n  zoomLinkInfo.forEach((x) => {\r\n    classes.set(x.course.id, x);\r\n  });\r\n  let today = JSON.parse(scheduleData.schedule.schedule)[dotw];\r\n  let colors = generatePeriodColors(today.length, theme);\r\n  return today.map((x, i) => {\r\n    let courseInfo = classes.has(\r\n      allClasses[x.period] && allClasses[x.period].value\r\n    )\r\n      ? classes.get(allClasses[x.period] && allClasses[x.period].value)\r\n      : null;\r\n    return {\r\n      period: nameOverrides[x.period] || x.period,\r\n      color: colors[i],\r\n      name:\r\n        courseInfo && courseInfo.course\r\n          ? courseInfo.course.course_title\r\n          : \"No Class\",\r\n      zoom:\r\n        courseInfo && courseInfo.links\r\n          ? courseInfo.links\r\n              .map((linkGroup) => {\r\n                return linkGroup.links.map((link) => {\r\n                  return { link: link, title: decodeHTML(linkGroup.title) };\r\n                });\r\n              })\r\n              .flat(10000)\r\n          : [],\r\n      timeStart:\r\n        moment(x.timeStart, \"hh:mma\")\r\n          .add((convertedMoment - currentMoment) / 60, \"hours\")\r\n          .unix() * 1000,\r\n      timeEnd:\r\n        moment(x.timeEnd, \"hh:mma\")\r\n          .add((convertedMoment - currentMoment) / 60, \"hours\")\r\n          .unix() * 1000,\r\n      tSS: x.timeStart,\r\n      tES: x.timeEnd,\r\n      duration: x.timeEnd - x.timeStart,\r\n    };\r\n  });\r\n};\r\nlet done = false;\r\nconst fetchAndSet = async (setCourseInfo, setScheduleData, setCannotFetch) => {\r\n  try {\r\n    if (!localStorage.getItem(\"DBIdToken\"))\r\n      throw new Error(\"something bad happened?\");\r\n    if (localStorage.getItem(\"cachedSchedule\"))\r\n      setScheduleData(JSON.parse(localStorage.getItem(\"cachedSchedule\")));\r\n    if (localStorage.getItem(\"cachedCourseInfo\"))\r\n      setCourseInfo(JSON.parse(localStorage.getItem(\"cachedCourseInfo\")));\r\n    let [schedule, courses] = await Promise.all([\r\n      axios.get(\"https://api.hwbounty.help/schedule/@me\").catch(console.trace),\r\n      axios\r\n        .get(\"https://api.hwbounty.help/sgy/getZoomLinks\")\r\n        .catch(console.trace),\r\n    ]);\r\n    if (!schedule?.data || !courses?.data || schedule?.status === 500)\r\n      throw new Error(\"something bad happened?\");\r\n    localStorage.setItem(\"cachedCourseInfo\", JSON.stringify(courses.data));\r\n    localStorage.setItem(\"cachedSchedule\", JSON.stringify(schedule.data));\r\n    setScheduleData(schedule.data);\r\n    setCourseInfo(courses.data);\r\n  } catch (error) {\r\n    setCannotFetch(true);\r\n  }\r\n};\r\nconst useForceUpdate = () => {\r\n  const set = useState(0)[1];\r\n  return () => set((s) => s + 1);\r\n};\r\nexport const Schedule = (props) => {\r\n  const {\r\n    UI: { theme },\r\n  } = props;\r\n  const forceUpdate = useForceUpdate();\r\n  useEffect(() => {\r\n    setTimeout(\r\n      () => setInterval(() => forceUpdate(), 5000),\r\n      1000 - (Date.now() % 1000)\r\n    );\r\n    return () => {\r\n    }\r\n  }, [])\r\n  const [courseInfo, setCourseInfo] = useState(null);\r\n  const [scheduleData, setScheduleData] = useState(null);\r\n  const [fetching, setFetching] = useState(false);\r\n  const [cannotFetch, setCannotFetch] = useState(false);\r\n  if (!scheduleData || !courseInfo) {\r\n    if (!fetching) {\r\n      setFetching(true);\r\n      fetchAndSet(setCourseInfo, setScheduleData, setCannotFetch);\r\n      return null;\r\n    }\r\n    if (cannotFetch)\r\n      return (\r\n        <div>\r\n          <Typography>\r\n            Seems like you dont have a school account linked! Please link your\r\n            schoology account to get access to this feature!\r\n          </Typography>\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={(x) => {\r\n              linkUserSchoology();\r\n            }}\r\n          >\r\n            Link Schoology Account\r\n          </Button>\r\n        </div>\r\n      );\r\n    return (\r\n      <div>\r\n        <Typography>Fetching Schedule Data/ Zoom Links...</Typography>\r\n        <CircularProgress />\r\n      </div>\r\n    );\r\n  }\r\n  if (!scheduleData?.schedule)\r\n    return (\r\n      <div>\r\n        <Typography>\r\n          Seems like you dont have a schedule setup! Please go over to the\r\n          schedules catalog and set a schedule!\r\n        </Typography>\r\n      </div>\r\n    );\r\n  const periods = parsePeriods(scheduleData, courseInfo, theme);\r\n  return (\r\n    <Container style={{ marginBottom: \"50px\", width: \"100%\", padding: \"0px\" }}>\r\n      {React.Children.toArray(\r\n        periods.map((p) => {\r\n          return (\r\n            <PeriodButton\r\n              theme={theme}\r\n              period={p.period}\r\n              name={p.name}\r\n              zoom={p.zoom}\r\n              color={p.color}\r\n              timeStart={p.timeStart}\r\n              timeEnd={p.timeEnd}\r\n              tSS={p.tSS}\r\n              tES={p.tES}\r\n              duration={p.timeEnd - p.timeStart}\r\n            />\r\n          );\r\n        })\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  UI: state.UI,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Schedule);\r\n","import { Card, Typography } from \"@material-ui/core\";\r\nimport moment from \"moment\";\r\nimport { Component, useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Schedule from \"../components/Calendar/Schedule\";\r\nimport Notifications from \"../util/notifications\";\r\nimport { withSnackbar } from 'notistack';\r\nconst CTime = (props) => {\r\n  const [fakeCurrentDate, setFakeCurrentDate] = useState(new Date()); // default value can be anything you want\r\n  return (\r\n    <div\r\n      style={{\r\n        verticalAlign: \"middle\",\r\n        width: \"100%\",\r\n        minWidth: \"100%\",\r\n      }}\r\n    >\r\n      <Typography\r\n        variant=\"h5\"\r\n        style={{\r\n          fontSize: \"5.5vw\",\r\n          textAlign: \"left\",\r\n        }}\r\n      >\r\n        {\r\n          /*moment().format(window.innerWidth <= 1368 ? \"M/D/YYYY h:mm:ss A\" : \"dddd MMMM Do h:mm:ss A\")*/ moment().format(\r\n            \"h:mm:ss A\"\r\n          )\r\n        }\r\n      </Typography>\r\n      <Typography\r\n        variant=\"h5\"\r\n        style={{\r\n          fontSize: \"2.5vw\",\r\n          textAlign: \"left\",\r\n        }}\r\n      >\r\n        {\r\n          /*moment().format(window.innerWidth <= 1368 ? \"M/D/YYYY h:mm:ss A\" : \"dddd MMMM Do h:mm:ss A\")*/ moment().format(\r\n            \"M/D/YYYY dddd\"\r\n          )\r\n        }\r\n      </Typography>\r\n    </div>\r\n  );\r\n};\r\nconst CTimeSmall = (props) => {\r\n  const [fakeCurrentDate, setFakeCurrentDate] = useState(new Date()); // default value can be anything you want\r\n  return (\r\n    <div\r\n      style={{\r\n        verticalAlign: \"middle\",\r\n        width: \"100%\",\r\n        minWidth: \"100%\",\r\n      }}\r\n    >\r\n      <Typography\r\n        variant=\"h5\"\r\n        style={{\r\n          fontSize: \"10vw\",\r\n        }}\r\n      >\r\n        {\r\n          /*moment().format(window.innerWidth <= 1368 ? \"M/D/YYYY h:mm:ss A\" : \"dddd MMMM Do h:mm:ss A\")*/ moment().format(\r\n            \"h:mm:ss A\"\r\n          )\r\n        }\r\n      </Typography>\r\n      <Typography\r\n        variant=\"h5\"\r\n        style={{\r\n          fontSize: \"5.65vw\",\r\n        }}\r\n      >\r\n        {\r\n          /*moment().format(window.innerWidth <= 1368 ? \"M/D/YYYY h:mm:ss A\" : \"dddd MMMM Do h:mm:ss A\")*/ moment().format(\r\n            \"M/D/YYYY dddd\"\r\n          )\r\n        }\r\n      </Typography>\r\n    </div>\r\n  );\r\n};\r\nlet lastTimeBasedNotif = 0;\r\nclass ScheduleInfo extends Component {\r\n  constructor(p) {\r\n    super(p);\r\n    setTimeout(\r\n      () => setInterval(() => this.forceUpdate(), 1000),\r\n      1000 - (Date.now() % 1000)\r\n    );\r\n  }\r\n  getTimePhrase() {\r\n    try {\r\n      if (!localStorage.getItem(\"cachedSchedule\")) return \"\";\r\n      let scheduleOBJ = JSON.parse(localStorage.getItem(\"cachedSchedule\"));\r\n      let schedule = JSON.parse(scheduleOBJ.schedule.schedule);\r\n      let user = JSON.parse(localStorage.getItem(\"user\"));\r\n      let allClasses = scheduleOBJ.classes;\r\n      let convertedMoment = moment().tz(schedule.timePeriod).utcOffset();\r\n      let currentMoment = moment().utcOffset();\r\n      let currentTime = moment();\r\n      let getPeriodName = (periodID) => {\r\n        return (\r\n          JSON.parse(scheduleOBJ.schedule.nameOverrides)[periodID] || \"Break\"\r\n        );\r\n      };\r\n      let dotw = [\r\n        \"monday\",\r\n        \"tuesday\",\r\n        \"wednesday\",\r\n        \"thursday\",\r\n        \"friday\",\r\n        \"saturday\",\r\n        \"sunday\",\r\n      ][moment().isoWeekday() - 1];\r\n      let formattedClasses =\r\n        schedule[dotw] &&\r\n        schedule[dotw].map((clas) => {\r\n          return {\r\n            period: clas.period,\r\n            timeStart:\r\n              moment(clas.timeStart, \"hh:mma\")\r\n                .add((convertedMoment - currentMoment) / 60, \"hours\")\r\n                .unix() * 1000,\r\n            timeEnd:\r\n              moment(clas.timeEnd, \"hh:mma\")\r\n                .add((convertedMoment - currentMoment) / 60, \"hours\")\r\n                .unix() * 1000,\r\n          };\r\n        });\r\n      //Check for current class first\r\n      let currentClass = formattedClasses.filter(\r\n        (x) => x.timeStart < Date.now() && Date.now() < x.timeEnd\r\n      )[0];\r\n\r\n      if (currentClass) {\r\n        let endingInString = `${\r\n          currentClass.timeEnd - Date.now() > 60000\r\n            ? currentClass.timeEnd - Date.now() > 3600000\r\n              ? `${Math.round(\r\n                  moment.duration(currentClass.timeEnd - Date.now()).asHours()\r\n                )} hours`\r\n              : `${Math.round(\r\n                  moment.duration(currentClass.timeEnd - Date.now()).asMinutes()\r\n                )} minutes`\r\n            : `${Math.round(\r\n                moment.duration(currentClass.timeEnd - Date.now()).asSeconds()\r\n              )} seconds`\r\n        }`;\r\n\r\n        //Try to push a notif if class is starting soon\r\n        if (\r\n          currentClass.timeEnd - Date.now() < 120 * 1000 &&\r\n          Date.now() - lastTimeBasedNotif > 240 * 1000\r\n        ) {\r\n          lastTimeBasedNotif = Date.now();\r\n\r\n          Notifications.pushNotification(\r\n            undefined,\r\n            undefined,\r\n            `${getPeriodName(currentClass.period)} is ending soon!`,\r\n            `Hey ${user.firstName}, ${getPeriodName(\r\n              currentClass.period\r\n            )} is about to end in ${endingInString}!`\r\n          );\r\n        }\r\n\r\n        return `${getPeriodName(\r\n          currentClass.period\r\n        )} ends in ${endingInString}`;\r\n      }\r\n      //Check for next upcoming class\r\n      let nextClass = formattedClasses.filter(\r\n        (x) => x.timeStart > Date.now()\r\n      )[0];\r\n\r\n      if (nextClass) {\r\n        let startingInString = `${\r\n          nextClass.timeStart - Date.now() > 60000\r\n            ? nextClass.timeStart - Date.now() > 3600000\r\n              ? `${Math.round(\r\n                  moment.duration(nextClass.timeStart - Date.now()).asHours()\r\n                )} hours`\r\n              : `${Math.round(\r\n                  moment.duration(nextClass.timeStart - Date.now()).asMinutes()\r\n                )} minutes`\r\n            : `${Math.round(\r\n                moment.duration(nextClass.timeStart - Date.now()).asSeconds()\r\n              )} seconds`\r\n        }`;\r\n        if (\r\n          nextClass.timeStart - Date.now() < 120 * 1000 &&\r\n          Date.now() - lastTimeBasedNotif > 240 * 1000\r\n        ) {\r\n          lastTimeBasedNotif = Date.now();\r\n\r\n          Notifications.pushNotification(\r\n            undefined,\r\n            undefined,\r\n            `${getPeriodName(nextClass.period)} is starting soon!`,\r\n            `Hey ${user.firstName}, ${getPeriodName(\r\n              nextClass.period\r\n            )} is about to start in ${startingInString}!`\r\n          );\r\n        }\r\n\r\n        return `${getPeriodName(\r\n          nextClass.period\r\n        )} starts in ${startingInString}`;\r\n      }\r\n\r\n      //Check for what was the previous class\r\n      let lastClass = formattedClasses\r\n        .filter((x) => Date.now() > x.timeEnd)\r\n        .pop();\r\n      if (lastClass) {\r\n        let lastEnded = `${\r\n          Date.now() - lastClass.timeEnd > 60000\r\n            ? Date.now() - lastClass.timeEnd > 60000\r\n              ? `${Math.round(\r\n                  moment.duration(Date.now() - lastClass.timeEnd).asHours()\r\n                )} hours`\r\n              : `${Math.round(\r\n                  moment.duration(Date.now() - lastClass.timeEnd).asMinutes()\r\n                )} minutes`\r\n            : `${Math.round(\r\n                moment.duration(Date.now() - lastClass.timeEnd).asSeconds()\r\n              )} seconds`\r\n        }`;\r\n        return `${getPeriodName(lastClass.period)} ended ${lastEnded} ago`;\r\n      }\r\n\r\n      //If no classes exist for the day\r\n      return `No classes today! Take a break, you deserve it :)`;\r\n    } catch (error) {\r\n      return \"\";\r\n    }\r\n  }\r\n  render() {\r\n\r\n    if (window.innerWidth <= 1000) {\r\n      return (\r\n        <div\r\n          style={{\r\n            marginTop: \"5%\",\r\n          }}\r\n        >\r\n          <Card\r\n            style={{\r\n              display: \"block\",\r\n              verticalAlign: \"top\",\r\n              width: \"90%\",\r\n              margin: \"5%\",\r\n            }}\r\n          >\r\n            <CTimeSmall />\r\n            <Typography\r\n              variant=\"h5\"\r\n              style={{\r\n                fontSize: 28,\r\n              }}\r\n            >\r\n              {this.getTimePhrase()}\r\n            </Typography>\r\n          </Card>\r\n          <Card\r\n            style={{\r\n              overflowY: \"scroll\",\r\n              padding: \"2%\",\r\n              paddingBottom: \"0%\",\r\n              margin: \"5%\",\r\n              /* max-height: 50vw!important; */\r\n              /* height: 50vw; */\r\n              width: \"90%\",\r\n\r\n              borderRadius: 5,\r\n              borderWidth: 0,\r\n              background: \"rgba(0,0,0,0)\",\r\n            }}\r\n          >\r\n            <Schedule />\r\n          </Card>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div\r\n        style={{\r\n          marginTop: \"5%\",\r\n        }}\r\n      >\r\n        <Card\r\n          style={{\r\n            overflowY: \"scroll\",\r\n            padding: \"2%\",\r\n            paddingBottom: \"0%\",\r\n            /* max-height: 50vw!important; */\r\n            /* height: 50vw; */\r\n            width: \"60%\",\r\n            maxWidth: \"60%\",\r\n            display: \"inline-block\",\r\n            background: \"rgba(0,0,0,0)\",\r\n            borderRadius: 10,\r\n            borderWidth: 0,\r\n          }}\r\n        >\r\n          <Schedule />\r\n        </Card>\r\n        <Card\r\n          style={{\r\n            display: \"inline-block\",\r\n            verticalAlign: \"top\",\r\n            width: \"30vw\",\r\n            height: \"30vw\",\r\n            marginLeft: \"2vw\",\r\n            padding: \"2%\",\r\n            position: \"relative\",\r\n            background: \"rgba(0,0,0,0)\",\r\n            borderRadius: \"1.25vw!important\",\r\n          }}\r\n        />\r\n        <Card\r\n          style={{\r\n            borderRadius: \"1.25vw!important\",\r\n            display: \"inline-block\",\r\n            verticalAlign: \"top\",\r\n            width: \"30vw\",\r\n            height: \"30vw\",\r\n            marginLeft: \"2vw\",\r\n            padding: \"2%\",\r\n            position: \"fixed\",\r\n            right: \"5%\",\r\n            top: \"19.5vh\",\r\n            \r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              position: \"absolute\",\r\n              top: \"50%\",\r\n              left: \"50%\",\r\n              transform: \"translate(-50%,-50%)\",\r\n             \r\n            }}\r\n          >\r\n            <CTime />\r\n            <Typography\r\n              variant=\"h5\"\r\n              align=\"left\"\r\n              style={{\r\n                fontSize: \"2vw\",\r\n              }}\r\n            >\r\n              {this.getTimePhrase()}\r\n            </Typography>\r\n          </div>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect()(withSnackbar(ScheduleInfo));\r\n"],"sourceRoot":""}