{"version":3,"sources":["pages/newSignup.js"],"names":["sleep","delay","Promise","resolve","setTimeout","SignUpPage","props","state","firstNameError","lastNameError","usernameError","emailError","passwordError","cPasswordError","loading","emailVerif","self","setState","firstName","document","getElementById","value","lastName","username","email","password","cpassword","test","length","match","processReady","a","axios","get","hwbountyAPI","data","post","signupRes","status","localStorage","getItem","this","history","push","style","paddingLeft","window","innerWidth","paddingRight","open","autoHideDuration","severity","src","UI","theme","height","variant","fontSize","autoComplete","marginBottom","required","error","id","label","margin","width","helperText","onChange","x","onTextChange","type","disabled","onClick","signup","size","Component","connect","withRouter"],"mappings":"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","file":"static/js/13.5b7b2041.chunk.js","sourcesContent":["import {\r\n  Button,\r\n  Card,\r\n  CircularProgress,\r\n  Container,\r\n  Snackbar,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport axios from \"axios\";\r\nimport { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router\";\r\nimport { hwbountyAPI } from \"../redux/types\";\r\nconst sleep = (delay) => new Promise((resolve) => setTimeout(resolve, delay));\r\nclass SignUpPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      firstNameError: \"\",\r\n      lastNameError: \"\",\r\n      usernameError: \"\",\r\n      emailError: \"\",\r\n      passwordError: \"\",\r\n      cPasswordError: \"\",\r\n      loading: false,\r\n      emailVerif: false,\r\n    };\r\n  }\r\n  componentDidMount() {}\r\n  signup(self) {\r\n    self.setState({ loading: true });\r\n    let firstName = document.getElementById(\"firstName\").value;\r\n    let lastName = document.getElementById(\"lastName\").value;\r\n    let username = document.getElementById(\"username\").value;\r\n    let email = document.getElementById(\"email\").value;\r\n    let password = document.getElementById(\"password\").value;\r\n    let cpassword = document.getElementById(\"cpassword\").value;\r\n    if (!firstName)\r\n      self.setState({ firstNameError: \"This field is required!\" });\r\n    if (!lastName) self.setState({ lastNameError: \"This field is required!\" });\r\n    if (!username) self.setState({ usernameError: \"This field is required!\" });\r\n    if (!email) self.setState({ emailError: \"This field is required!\" });\r\n    if (!password)\r\n      return self.setState({ passwordError: \"This field is required!\" });\r\n    if (password !== cpassword)\r\n      self.setState({\r\n        passwordError: \"Passwords do not match!\",\r\n        cPasswordError: \"Passwords do not match!\",\r\n      });\r\n    if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email))\r\n      self.setState({ emailError: \"Invalid Email!\" });\r\n    if (username.length < 3)\r\n      self.setState({\r\n        usernameError: \"Username must be 3 or more characters long!\",\r\n      });\r\n    if (!username.match(/^[a-zA-Z0-9_]*$/))\r\n      self.setState({ usernameError: \"Username must be alphanumeric\" });\r\n    //Check if usernameTaken\r\n    //-1 = Failed, 0 = pending, 1 = checks passed\r\n    let processReady = 0;\r\n    (async () => {\r\n      let res = await axios.get(`${hwbountyAPI}/usernameTaken/${username}`);\r\n      if (res.data) {\r\n        self.setState({ usernameError: \"This username already exists!\" });\r\n        processReady = -1;\r\n      } else {\r\n        processReady++;\r\n      }\r\n    })();\r\n    (async () => {\r\n      let res = await axios.get(`${hwbountyAPI}/emailTaken/${email}`);\r\n      if (res.data) {\r\n        self.setState({ emailError: \"This is already in use!\" });\r\n        processReady = -1;\r\n      } else {\r\n        processReady++;\r\n      }\r\n    })();\r\n    (async () => {\r\n      while (processReady === 0 || processReady === 1) await sleep(10);\r\n      if (processReady === -1) return self.setState({ loading: false });\r\n      //Process signup;\r\n      let signupRes = await axios.post(`${hwbountyAPI}/signup`, {\r\n        email: email,\r\n        firstName: firstName,\r\n        lastName: lastName,\r\n        username: username,\r\n        password: password,\r\n      });\r\n      if (signupRes.status === 200 && signupRes.data)\r\n        self.setState({ emailVerif: true, loading: false });\r\n    })();\r\n  }\r\n  onTextChange(self) {\r\n    self.setState({\r\n      firstNameError: \"\",\r\n      lastNameError: \"\",\r\n      usernameError: \"\",\r\n      emailError: \"\",\r\n      passwordError: \"\",\r\n      cPasswordError: \"\",\r\n    });\r\n  }\r\n  render() {\r\n    if (localStorage.getItem(\"DBIdToken\")) this.props.history.push(\"/\");\r\n    return (\r\n      <Container\r\n        style={{\r\n          paddingLeft: window.innerWidth <= 1300 ? \"0vw\" : \"20vw\",\r\n          paddingRight: window.innerWidth <= 1300 ? \"0vw\" : \"20vw\",\r\n        }}\r\n      >\r\n        <Snackbar open={this.state.emailVerif} autoHideDuration={10000}>\r\n          <Alert severity=\"success\">\r\n            We have successfully recieved your signup! Please check your email\r\n            for the next steps!\r\n          </Alert>\r\n        </Snackbar>\r\n        <Card>\r\n          <img\r\n            src={\r\n              this.props.UI.theme\r\n                ? \"https://cdn.discordapp.com/attachments/836672960566919228/836863806905778186/logo_min_white.png\"\r\n                : \"https://cdn.discordapp.com/attachments/806706215693975552/832762321214111765/logo_min.png\"\r\n            }\r\n            height=\"100\"\r\n          ></img>\r\n          <Typography\r\n            variant=\"h5\"\r\n            style={{\r\n              fontSize: \"3vw\",\r\n            }}\r\n          >\r\n            Registration Form\r\n          </Typography>\r\n          <form autoComplete=\"off\">\r\n            <div style={{ marginBottom: 10 }}>\r\n              <TextField\r\n                required\r\n                error={this.state.firstNameError}\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                variant=\"outlined\"\r\n                style={{\r\n                  margin: 5,\r\n                  width: 200,\r\n                }}\r\n                helperText={this.state.firstNameError}\r\n                onChange={(x) => this.onTextChange(this)}\r\n              />\r\n              <TextField\r\n                required\r\n                id=\"lastName\"\r\n                error={this.state.lastNameError}\r\n                label=\"Last Name\"\r\n                variant=\"outlined\"\r\n                style={{\r\n                  margin: 5,\r\n                  width: 200,\r\n                }}\r\n                helperText={this.state.lastNameError}\r\n                onChange={(x) => this.onTextChange(this)}\r\n              />\r\n            </div>\r\n            <div style={{ marginBottom: 5 }}>\r\n              <TextField\r\n                required\r\n                id=\"username\"\r\n                error={this.state.usernameError}\r\n                label=\"Username\"\r\n                variant=\"outlined\"\r\n                style={{\r\n                  margin: 5,\r\n                  width: 410,\r\n                }}\r\n                helperText={this.state.usernameError}\r\n                onChange={(x) => this.onTextChange(this)}\r\n              />\r\n            </div>\r\n            <div style={{ marginBottom: 10 }}>\r\n              <TextField\r\n                required\r\n                id=\"email\"\r\n                error={this.state.emailError}\r\n                label=\"Email\"\r\n                variant=\"outlined\"\r\n                style={{\r\n                  margin: 5,\r\n                  width: 410,\r\n                }}\r\n                helperText={this.state.emailError}\r\n                onChange={(x) => this.onTextChange(this)}\r\n              />\r\n            </div>\r\n            <div>\r\n              <TextField\r\n                required\r\n                id=\"password\"\r\n                error={this.state.passwordError}\r\n                label=\"Password\"\r\n                variant=\"outlined\"\r\n                type=\"password\"\r\n                style={{\r\n                  margin: 5,\r\n                  width: 200,\r\n                }}\r\n                helperText={this.state.passwordError}\r\n                onChange={(x) => this.onTextChange(this)}\r\n              />\r\n              <TextField\r\n                required\r\n                id=\"cpassword\"\r\n                error={this.state.cPasswordError}\r\n                label=\"Confirm Password\"\r\n                variant=\"outlined\"\r\n                type=\"password\"\r\n                style={{\r\n                  margin: 5,\r\n                  width: 200,\r\n                }}\r\n                helperText={this.state.cPasswordError}\r\n                onChange={(x) => this.onTextChange(this)}\r\n              />\r\n            </div>\r\n          </form>\r\n          <Button\r\n            disabled={this.state.loading}\r\n            style={{\r\n              margin: 40,\r\n              fontSize: 16,\r\n            }}\r\n            variant=\"outlined\"\r\n            onClick={(x) => this.signup(this)}\r\n          >\r\n            {\" \"}\r\n            {this.state.loading ? <CircularProgress size=\"28px\" /> : \"Sign Up\"}\r\n          </Button>\r\n        </Card>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default connect((state) => ({ UI: state.UI }))(withRouter(SignUpPage));\r\n"],"sourceRoot":""}